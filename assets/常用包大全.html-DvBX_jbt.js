import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as i,c as a,a as t,b as e,d as r,e as o}from"./app-PzWgttNC.js";const c={},h=o('<h1 id="常用包和第三方包介绍" tabindex="-1"><a class="header-anchor" href="#常用包和第三方包介绍"><span>常用包和第三方包介绍</span></a></h1><ul><li>包 <ul><li><a href="#%E5%B8%B8%E7%94%A8%E5%8C%85">常用官方包说明</a></li><li><a href="#%E4%B8%89%E6%96%B9%E5%8C%85">常用第三方包说明</a></li><li><a href="#%E6%A1%86%E6%9E%B6">常用框架</a></li><li><a href="#%E5%AE%8C%E6%95%B4%E5%8C%85">完整标准库列表</a></li><li><a href="#%E4%BC%98%E7%A7%80%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93">优秀的第三方库</a><ul><li><a href="#%E9%9F%B3%E9%A2%91%E5%92%8C%E9%9F%B3%E4%B9%90">音频和音乐</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84">数据结构:Go中的通用数据结构和算法</a></li><li><a href="#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F">分布式系统:Go中的通用数据结构和算法</a></li><li><a href="#%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6">电子邮件:实现电子邮件创建和发送的库和工具</a></li><li><a href="#%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80">嵌入式脚本语言:在go代码中嵌入其他语言</a></li><li><a href="#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86">错误处理</a></li><li><a href="#%E6%96%87%E4%BB%B6">处理文件和文件系统的库</a></li><li><a href="#%E9%87%91%E8%9E%8D">金融:会计和财务软件包</a></li><li><a href="#%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91">游戏开发:游戏开发相关库</a></li><li><a href="#%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE">地理位置:地理相关的位置信息和工具库</a></li><li><a href="#%E7%BC%96%E8%AF%91%E5%99%A8">编译器相关:转到其他语言</a></li><li><a href="#Goroutines">Goroutines:用于管理和使用Goroutines的工具</a></li><li><a href="#%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2">图形界面:用于构建GUI应用程序的库</a></li><li><a href="#%E5%9B%BE%E7%89%87">图片:用于处理图像的库</a></li><li><a href="#%E7%89%A9%E8%81%94%E7%BD%91">物联网:物联网设备编程库</a></li><li><a href="#JSON%E6%A0%BC%E5%BC%8F">JSON格式:用于处理JSON的库</a></li><li><a href="#%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0">机器学习:常用机器学习库</a></li><li><a href="#%E5%BE%AE%E8%BD%AF%E5%8A%9E%E5%85%AC%E8%BD%AF%E4%BB%B6">微软办公软件</a></li><li><a href="#%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86">自然语言处理</a></li><li><a href="#%E7%BD%91%E7%BB%9C">网络:与网络各层配合使用的库</a></li><li><a href="#%E8%A7%86%E9%A2%91">视频:用于处理视频的库</a></li></ul></li></ul></li></ul><h2 id="常用包" tabindex="-1"><a class="header-anchor" href="#常用包"><span>常用包</span></a></h2><p><a name="常用包"></a> <a name="常用包"></a></p><table><thead><tr><th style="text-align:center;">常用包</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">fmt</td><td style="text-align:center;">实现格式化的输入输出操作，其中的fmt.Printf()和fmt.Println()是开发者使用最为频繁的函数。</td></tr><tr><td style="text-align:center;">io</td><td style="text-align:center;">实现了一系列非平台相关的IO相关接口和实现，比如提供了对os中系统相关的IO功能的封装。我们在进行流式读写（比如读写文件）时，通常会用到该包。</td></tr><tr><td style="text-align:center;">bufio</td><td style="text-align:center;">它在io的基础上提供了缓存功能。在具备了缓存功能后， bufio可以比较方便地提供ReadLine之类的操作。</td></tr><tr><td style="text-align:center;">strconv</td><td style="text-align:center;">提供字符串与基本数据类型互转的能力。</td></tr><tr><td style="text-align:center;">os</td><td style="text-align:center;">本包提供了对操作系统功能的非平台相关访问接口。接口为Unix风格。提供的功能包括文件操作、进程管理、信号和用户账号等。</td></tr><tr><td style="text-align:center;">sync</td><td style="text-align:center;">它提供了基本的同步原语。在多个goroutine访问共享资源的时候，需要使用sync中提供的锁机制。</td></tr><tr><td style="text-align:center;">flag</td><td style="text-align:center;">它提供命令行参数的规则定义和传入参数解析的功能。绝大部分的命令行程序都需要用到这个包。</td></tr><tr><td style="text-align:center;">encoding/json</td><td style="text-align:center;">JSON目前广泛用做网络程序中的通信格式。本包提供了对JSON的基本支持，比如从一个对象序列化为JSON字符串，或者从JSON字符串反序列化出一个具体的对象等。</td></tr><tr><td style="text-align:center;">http</td><td style="text-align:center;">通过http包，只需要数行代码，即可实现一个爬虫或者一个Web服务器，这在传统语言中是无法想象的。</td></tr></tbody></table><p><br> <br><a name="三方包"></a> <a name="三方包"></a></p><h2 id="常用第三方包" tabindex="-1"><a class="header-anchor" href="#常用第三方包"><span>常用第三方包</span></a></h2>',7),_=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"地址")])],-1),d=t("td",{style:{"text-align":"center"}},"数据库操作",-1),g={style:{"text-align":"center"}},u={href:"https://github.com/jinzhu/gorm",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/go-xorm/xorm",target:"_blank",rel:"noopener noreferrer"},y=t("td",{style:{"text-align":"center"}},"搜索es",-1),x={style:{"text-align":"center"}},b={href:"https://github.com/olivere/elastic",target:"_blank",rel:"noopener noreferrer"},f=t("td",{style:{"text-align":"center"}},"rocketmq操作",-1),m={style:{"text-align":"center"}},k={href:"https://github.com/apache/rocketmq-client-go/v2",target:"_blank",rel:"noopener noreferrer"},G=t("td",{style:{"text-align":"center"}},"rabbitmq 操作",-1),v={style:{"text-align":"center"}},E={href:"https://github.com/streadway/amqp",target:"_blank",rel:"noopener noreferrer"},S=t("td",{style:{"text-align":"center"}},"redis 操作",-1),A={style:{"text-align":"center"}},w={href:"https://github.com/go-redis/redis",target:"_blank",rel:"noopener noreferrer"},P=t("td",{style:{"text-align":"center"}},"etcd 操作",-1),C={style:{"text-align":"center"}},T={href:"https://pkg.go.dev/go.etcd.io/etcd/clientv3",target:"_blank",rel:"noopener noreferrer"},M=t("td",{style:{"text-align":"center"}},"kafka",-1),j={style:{"text-align":"center"}},I={href:"https://github.com/Shopify/sarama",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/bsm/sarama-cluster",target:"_blank",rel:"noopener noreferrer"},F=t("td",{style:{"text-align":"center"}},"excel 操作",-1),O={style:{"text-align":"center"}},N={href:"https://github.com/360EntSecGroup-Skylar/excelize",target:"_blank",rel:"noopener noreferrer"},D=t("td",{style:{"text-align":"center"}},"ppt 操作",-1),z={style:{"text-align":"center"}},R={href:"https://golang.org/x/tools/cmd/present",target:"_blank",rel:"noopener noreferrer"},L=t("td",{style:{"text-align":"center"}},"go-svg 操作",-1),H={style:{"text-align":"center"}},J={href:"https://github.com/ajstarks/svgo",target:"_blank",rel:"noopener noreferrer"},q=t("td",{style:{"text-align":"center"}},"go 布隆过滤器实现",-1),U={style:{"text-align":"center"}},W={href:"https://github.com/AndreasBriese/bbloom",target:"_blank",rel:"noopener noreferrer"},V=t("td",{style:{"text-align":"center"}},"json相关",-1),X={style:{"text-align":"center"}},K={href:"https://github.com/bitly/go-simplejson",target:"_blank",rel:"noopener noreferrer"},Q=t("td",{style:{"text-align":"center"}},"LRU Cache实现",-1),Z={style:{"text-align":"center"}},Y={href:"https://github.com/bluele/gcache",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/hashicorp/golang-lru",target:"_blank",rel:"noopener noreferrer"},tt=t("td",{style:{"text-align":"center"}},"go运行时函数替换",-1),et={style:{"text-align":"center"}},nt={href:"https://github.com/bouk/monkey",target:"_blank",rel:"noopener noreferrer"},rt=t("td",{style:{"text-align":"center"}},"toml",-1),ot={style:{"text-align":"center"}},lt={href:"https://github.com/toml-lang/toml",target:"_blank",rel:"noopener noreferrer"},st={href:"https://github.com/naoina/toml",target:"_blank",rel:"noopener noreferrer"},it=t("td",{style:{"text-align":"center"}},"yaml",-1),at={style:{"text-align":"center"}},ct={href:"https://github.com/go-yaml/yaml",target:"_blank",rel:"noopener noreferrer"},ht=t("td",{style:{"text-align":"center"}},"viper",-1),_t={style:{"text-align":"center"}},dt={href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"},gt=t("td",{style:{"text-align":"center"}},"go key/value存储",-1),ut={style:{"text-align":"center"}},pt={href:"https://github.com/etcd-io/bbolt",target:"_blank",rel:"noopener noreferrer"},yt=t("td",{style:{"text-align":"center"}},"基于ringbuffer的无锁golang workpool",-1),xt={style:{"text-align":"center"}},bt={href:"https://github.com/Dai0522/workpool",target:"_blank",rel:"noopener noreferrer"},ft=t("td",{style:{"text-align":"center"}},"轻量级的协程池",-1),mt={style:{"text-align":"center"}},kt={href:"https://github.com/ivpusic/grpool",target:"_blank",rel:"noopener noreferrer"},Gt=t("td",{style:{"text-align":"center"}},"打印go的详细数据结构",-1),vt={style:{"text-align":"center"}},Et={href:"https://github.com/davecgh/go-spew",target:"_blank",rel:"noopener noreferrer"},St=t("td",{style:{"text-align":"center"}},"基于ringbuffer实现的队列",-1),At={style:{"text-align":"center"}},wt={href:"https://github.com/eapache/queue",target:"_blank",rel:"noopener noreferrer"},Pt=t("td",{style:{"text-align":"center"}},"拼音",-1),Ct={style:{"text-align":"center"}},Tt={href:"https://github.com/go-ego/gpy",target:"_blank",rel:"noopener noreferrer"},Mt=t("td",{style:{"text-align":"center"}},"分词",-1),jt={style:{"text-align":"center"}},It={href:"https://github.com/go-ego/gse",target:"_blank",rel:"noopener noreferrer"},Bt=t("td",{style:{"text-align":"center"}},"搜索",-1),Ft={style:{"text-align":"center"}},Ot={href:"https://github.com/go-ego/riot",target:"_blank",rel:"noopener noreferrer"},Nt=t("td",{style:{"text-align":"center"}},"windows COM",-1),Dt={style:{"text-align":"center"}},zt={href:"https://github.com/go-ego/cedar",target:"_blank",rel:"noopener noreferrer"},Rt=t("td",{style:{"text-align":"center"}},"session",-1),Lt={style:{"text-align":"center"}},Ht={href:"https://github.com/gorilla/sessions",target:"_blank",rel:"noopener noreferrer"},Jt=t("td",{style:{"text-align":"center"}},"路由",-1),qt={style:{"text-align":"center"}},Ut={href:"https://github.com/gorilla/mux",target:"_blank",rel:"noopener noreferrer"},Wt=t("td",{style:{"text-align":"center"}},"websocket",-1),Vt={style:{"text-align":"center"}},Xt={href:"https://github.com/gorilla/websocket",target:"_blank",rel:"noopener noreferrer"},Kt=t("td",{style:{"text-align":"center"}},"Action handler",-1),Qt={style:{"text-align":"center"}},Zt={href:"https://github.com/gorilla/handlers",target:"_blank",rel:"noopener noreferrer"},Yt=t("td",{style:{"text-align":"center"}},"csrf",-1),$t={style:{"text-align":"center"}},te={href:"https://github.com/gorilla/csrf",target:"_blank",rel:"noopener noreferrer"},ee=t("td",{style:{"text-align":"center"}},"context",-1),ne={style:{"text-align":"center"}},re={href:"https://github.com/gorilla/context",target:"_blank",rel:"noopener noreferrer"},oe=t("td",{style:{"text-align":"center"}},"过滤html标签",-1),le={style:{"text-align":"center"}},se={href:"https://github.com/grokify/html-strip-tags-go",target:"_blank",rel:"noopener noreferrer"},ie=t("td",{style:{"text-align":"center"}},"可配置的HTML标签过滤",-1),ae={style:{"text-align":"center"}},ce={href:"https://github.com/microcosm-cc/bluemonday",target:"_blank",rel:"noopener noreferrer"},he=t("td",{style:{"text-align":"center"}},"根据IP获取地理位置信息",-1),_e={style:{"text-align":"center"}},de={href:"https://github.com/ipipdotnet/ipdb-go",target:"_blank",rel:"noopener noreferrer"},ge=t("td",{style:{"text-align":"center"}},"html转markdown",-1),ue={style:{"text-align":"center"}},pe={href:"https://github.com/jaytaylor/html2text",target:"_blank",rel:"noopener noreferrer"},ye=t("td",{style:{"text-align":"center"}},"goroutine 本地存储",-1),xe={style:{"text-align":"center"}},be={href:"https://github.com/jtolds/gls",target:"_blank",rel:"noopener noreferrer"},fe=t("td",{style:{"text-align":"center"}},"彩色输出",-1),me={style:{"text-align":"center"}},ke={href:"https://github.com/mgutz/ansi",target:"_blank",rel:"noopener noreferrer"},Ge=t("td",{style:{"text-align":"center"}},"表格打印",-1),ve={style:{"text-align":"center"}},Ee={href:"https://github.com/olekukonko/tablewriter",target:"_blank",rel:"noopener noreferrer"},Se=t("td",{style:{"text-align":"center"}},"reflect 更高效的反射API",-1),Ae={style:{"text-align":"center"}},we={href:"https://github.com/modern-go/reflect2",target:"_blank",rel:"noopener noreferrer"},Pe=t("td",{style:{"text-align":"center"}},"msgfmt (格式化字符串，将%更换为变量名)",-1),Ce={style:{"text-align":"center"}},Te={href:"https://github.com/modern-go/msgfmt",target:"_blank",rel:"noopener noreferrer"},Me=t("td",{style:{"text-align":"center"}},"可取消的goroutine",-1),je={style:{"text-align":"center"}},Ie={href:"https://github.com/modern-go/concurrent",target:"_blank",rel:"noopener noreferrer"},Be=t("td",{style:{"text-align":"center"}},"深度拷贝",-1),Fe={style:{"text-align":"center"}},Oe={href:"https://github.com/mohae/deepcopy",target:"_blank",rel:"noopener noreferrer"},Ne=t("td",{style:{"text-align":"center"}},"安全的类型转换包",-1),De={style:{"text-align":"center"}},ze={href:"https://github.com/spf13/cast",target:"_blank",rel:"noopener noreferrer"},Re=t("td",{style:{"text-align":"center"}},"从文本中提取链接",-1),Le={style:{"text-align":"center"}},He={href:"https://github.com/mvdan/xurls",target:"_blank",rel:"noopener noreferrer"},Je=t("td",{style:{"text-align":"center"}},"字符串格式处理（驼峰转换）",-1),qe={style:{"text-align":"center"}},Ue={href:"https://godoc.org/github.com/naoina/go-stringutil",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},"文本diff实现",-1),Ve={style:{"text-align":"center"}},Xe={href:"https://github.com/pmezard/go-difflib",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"center"}},"uuid相关",-1),Qe={style:{"text-align":"center"}},Ze={href:"https://github.com/satori/go.uuid",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://github.com/snluu/uuid",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"去除UTF编码中的BOM",-1),tn={style:{"text-align":"center"}},en={href:"https://github.com/ssor/bom",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},"图片缩放",-1),rn={style:{"text-align":"center"}},on={href:"https://github.com/nfnt/resize",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},"生成 mock server",-1),sn={style:{"text-align":"center"}},an={href:"https://github.com/otokaze/mock",target:"_blank",rel:"noopener noreferrer"},cn=t("td",{style:{"text-align":"center"}},"go 性能上报到influxdb",-1),hn={style:{"text-align":"center"}},_n={href:"https://github.com/rcrowley/go-metrics",target:"_blank",rel:"noopener noreferrer"},dn=t("td",{style:{"text-align":"center"}},"go zookeeper客户端",-1),gn={style:{"text-align":"center"}},un={href:"https://github.com/samuel/go-zookeeper",target:"_blank",rel:"noopener noreferrer"},pn=t("td",{style:{"text-align":"center"}},"go thrift",-1),yn={style:{"text-align":"center"}},xn={href:"https://github.com/samuel/go-thrift",target:"_blank",rel:"noopener noreferrer"},bn=t("td",{style:{"text-align":"center"}},"MQTT 客户端",-1),fn={style:{"text-align":"center"}},mn={href:"https://github.com/shirou/mqttcli",target:"_blank",rel:"noopener noreferrer"},kn=t("td",{style:{"text-align":"center"}},"hbase",-1),Gn={style:{"text-align":"center"}},vn={href:"https://github.com/tsuna/gohbase",target:"_blank",rel:"noopener noreferrer"},En=t("td",{style:{"text-align":"center"}},"go 性能上报到influxdb",-1),Sn={style:{"text-align":"center"}},An={href:"https://github.com/rcrowley/go-metrics",target:"_blank",rel:"noopener noreferrer"},wn=t("td",{style:{"text-align":"center"}},"go 性能上报到prometheus",-1),Pn={style:{"text-align":"center"}},Cn={href:"https://github.com/deathowl/go-metrics-prometheus",target:"_blank",rel:"noopener noreferrer"},Tn=t("td",{style:{"text-align":"center"}},"ps utils",-1),Mn={style:{"text-align":"center"}},jn={href:"https://github.com/shirou/gopsutil",target:"_blank",rel:"noopener noreferrer"},In=t("td",{style:{"text-align":"center"}},"小数处理",-1),Bn={style:{"text-align":"center"}},Fn={href:"https://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"},On=t("td",{style:{"text-align":"center"}},"结构化日志处理(json)",-1),Nn={style:{"text-align":"center"}},Dn={href:"https://github.com/sirupsen/logrus",target:"_blank",rel:"noopener noreferrer"},zn=t("td",{style:{"text-align":"center"}},"命令行程序框架 cli",-1),Rn={style:{"text-align":"center"}},Ln={href:"https://github.com/urfave/cli",target:"_blank",rel:"noopener noreferrer"},Hn=t("td",{style:{"text-align":"center"}},"命令行程序框架 cobra",-1),Jn={style:{"text-align":"center"}},qn={href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"},Un=t("p",null,[t("br"),e(),t("br"),t("a",{name:"框架"}),e(),t("a",{name:"框架"})],-1),Wn=t("h2",{id:"必看项目",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#必看项目"},[t("span",null,"必看项目")])],-1),Vn=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"项目"),t("th",{style:{"text-align":"center"}},"地址"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Xn=t("td",{style:{"text-align":"center"}},"gin",-1),Kn={style:{"text-align":"center"}},Qn={href:"https://github.com/gin-gonic/gin",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},"轻量级web框架，很多公司都是基于它进行魔改",-1),Yn=t("td",{style:{"text-align":"center"}},"beego",-1),$n={style:{"text-align":"center"}},tr={href:"https://github.com/beego/beego",target:"_blank",rel:"noopener noreferrer"},er=t("td",{style:{"text-align":"center"}},"也是web框架，比较全能",-1),nr=t("td",{style:{"text-align":"center"}},"kratos",-1),rr={style:{"text-align":"center"}},or={href:"https://github.com/go-kratos/kratos",target:"_blank",rel:"noopener noreferrer"},lr=t("td",{style:{"text-align":"center"}},"bilibili开源的微服务框架，b站出品必属于精品",-1),sr=t("td",{style:{"text-align":"center"}},"TiDB",-1),ir={style:{"text-align":"center"}},ar={href:"https://github.com/pingcap/tidb",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},"见识过mysql性能瓶颈之后你会想要选择的一款数据库",-1),hr=t("p",null,[t("br"),e(),t("br"),t("a",{name:"完整包"}),e(),t("a",{name:"完整包"})],-1),_r=t("h2",{id:"完整标准库列表",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#完整标准库列表"},[t("span",null,"完整标准库列表")])],-1),dr=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"子包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),gr=t("tr",null,[t("td",{style:{"text-align":"center"}},"bufio"),t("td",{style:{"text-align":"center"}},"bytes"),t("td",{style:{"text-align":"center"}},"提供了对字节切片操作的函数")],-1),ur=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"crypto"),t("td",{style:{"text-align":"center"}},"收集了常见的加密常数")],-1),pr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"errors"),t("td",{style:{"text-align":"center"}},"实现了操作错误的函数")],-1),yr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"Expvar"),t("td",{style:{"text-align":"center"}},"为公共变量提供了一个标准的接口，如服务器中的运算计数器")],-1),xr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"flag"),t("td",{style:{"text-align":"center"}},"实现了命令行标记解析")],-1),br=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"fmt"),t("td",{style:{"text-align":"center"}},"实现了格式化输入输出")],-1),fr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"hash"),t("td",{style:{"text-align":"center"}},"提供了哈希函数接口")],-1),mr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"html"),t("td",{style:{"text-align":"center"}},"实现了一个HTML5兼容的分词器和解析器")],-1),kr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"image"),t("td",{style:{"text-align":"center"}},"实现了一个基本的二维图像库")],-1),Gr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"io"),t("td",{style:{"text-align":"center"}},"提供了对I/O原语的基本接口")],-1),vr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"log"),t("td",{style:{"text-align":"center"}},"它是一个简单的记录包，提供最基本的日志功能")],-1),Er=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"math"),t("td",{style:{"text-align":"center"}},"提供了一些基本的常量和数学函数")],-1),Sr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"mine"),t("td",{style:{"text-align":"center"}},"实现了部分的MIME规范")],-1),Ar=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"net"),t("td",{style:{"text-align":"center"}},"提供了一个对UNIX网络套接字的可移植接口，包括TCP/IP、 UDP域名解析和UNIX域套接字")],-1),wr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"os"),t("td",{style:{"text-align":"center"}},"为操作系统功能实现了一个平台无关的接口")],-1),Pr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"path"),t("td",{style:{"text-align":"center"}},"实现了对斜线分割的文件名路径的操作")],-1),Cr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"reflect"),t("td",{style:{"text-align":"center"}},"实现了运行时反射，允许一个程序以任意类型操作对象")],-1),Tr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"regexp"),t("td",{style:{"text-align":"center"}},"实现了一个简单的正则表达式库")],-1),Mr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"runtime"),t("td",{style:{"text-align":"center"}},"包含与Go运行时系统交互的操作，如控制goroutine的函数")],-1),jr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sort"),t("td",{style:{"text-align":"center"}},"提供对集合排序的基础函数集")],-1),Ir=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"strconv"),t("td",{style:{"text-align":"center"}},"实现了在基本数据类型和字符串之间的转换")],-1),Br=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"strings"),t("td",{style:{"text-align":"center"}},"实现了操作字符串的简单函数")],-1),Fr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sync"),t("td",{style:{"text-align":"center"}},"提供了基本的同步机制，如互斥锁")],-1),Or=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"syscall"),t("td",{style:{"text-align":"center"}},"包含一个低级的操作系统原语的接口")],-1),Nr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"testing"),t("td",{style:{"text-align":"center"}},"提供对自动测试Go包的支持")],-1),Dr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"time"),t("td",{style:{"text-align":"center"}},"提供测量和显示时间的功能")],-1),zr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"unicode"),t("td",{style:{"text-align":"center"}},"Unicode编码相关的基础函数")],-1),Rr=t("tr",null,[t("td",{style:{"text-align":"center"}},"archive"),t("td",{style:{"text-align":"center"}},"tar"),t("td",{style:{"text-align":"center"}},"实现对tar压缩文档的访问")],-1),Lr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"zip"),t("td",{style:{"text-align":"center"}},"提供对ZIP压缩文档的读和写支持")],-1),Hr=t("tr",null,[t("td",{style:{"text-align":"center"}},"compress"),t("td",{style:{"text-align":"center"}},"bzip2"),t("td",{style:{"text-align":"center"}},"实现了bzip2解压缩")],-1),Jr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"flate"),t("td",{style:{"text-align":"center"}},"实现了RFC 1951中所定义的DEFLATE压缩数据格式")],-1),qr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gzip"),t("td",{style:{"text-align":"center"}},"实现了RFC 1951中所定义的gzip格式压缩文件的读和写")],-1),Ur=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"lzw"),t("td",{style:{"text-align":"center"}},"实现了 Lempel-Ziv-Welch编码格式的压缩的数据格式")],-1),Wr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"zlib"),t("td",{style:{"text-align":"center"}},"实现了RFC 1950中所定义的zlib格式压缩数据的读和写")],-1),Vr=t("tr",null,[t("td",{style:{"text-align":"center"}},"container"),t("td",{style:{"text-align":"center"}},"heap"),t("td",{style:{"text-align":"center"}},"提供了实现heap.Interface接口的任何类型的堆操作")],-1),Xr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"lsit"),t("td",{style:{"text-align":"center"}},"实现了一个双链表")],-1),Kr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"ring"),t("td",{style:{"text-align":"center"}},"实现了对循环链表的操作")],-1),Qr=t("tr",null,[t("td",{style:{"text-align":"center"}},"crypto"),t("td",{style:{"text-align":"center"}},"aes"),t("td",{style:{"text-align":"center"}},"实现了AES加密（以前的Rijndael）")],-1),Zr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"cipher"),t("td",{style:{"text-align":"center"}},"实现了标准的密码块模式，该模式可包装进低级的块加密实现中")],-1),Yr=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"des"),t("td",{style:{"text-align":"center"}},"实现了数据加密标准（ Data Encryption Standard，DES）和三重数据加密算法（ TripleData Encryption Algorithm， TDEA）")],-1),$r=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"dsa"),t("td",{style:{"text-align":"center"}},"实现了FIPS 186-3所定义的数据签名算法（ Digital Signature Algorithm）")],-1),to=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"ecdsa"),t("td",{style:{"text-align":"center"}},"实现了FIPS 186-3所定义的椭圆曲线数据签名算法（ Elliptic Curve Digital SignatureAlgorithm）")],-1),eo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"elliptic"),t("td",{style:{"text-align":"center"}},"实现了素数域上几个标准的椭圆曲线")],-1),no=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"hmac"),t("td",{style:{"text-align":"center"}},"实现了键控哈希消息身份验证码（ Keyed-Hash Message Authentication Code，HMAC）")],-1),ro=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"md5"),t("td",{style:{"text-align":"center"}},"实现了RFC 1321中所定义的MD5哈希算法")],-1),oo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rand"),t("td",{style:{"text-align":"center"}},"实现了一个加密安全的伪随机数生成器")],-1),lo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rc4"),t("td",{style:{"text-align":"center"}},"实现了RC4加密，其定义见Bruce Schneier的应用密码学（ Applied Cryptography）")],-1),so=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rsa"),t("td",{style:{"text-align":"center"}},"实现了PKCS#1中所定义的RSA加密")],-1),io=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sha1"),t("td",{style:{"text-align":"center"}},"实现了RFC 3174中所定义的SHA1哈希算法")],-1),ao=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sha256"),t("td",{style:{"text-align":"center"}},"实现了FIPS 180-2中所定义的SHA224和SHA256哈希算法")],-1),co=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sha512"),t("td",{style:{"text-align":"center"}},"实现了FIPS 180-2中所定义的SHA384和SHA512哈希算法")],-1),ho=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"subtle"),t("td",{style:{"text-align":"center"}},"实现了一些有用的加密函数，但需要仔细考虑以便正确应用它们")],-1),_o=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"tls"),t("td",{style:{"text-align":"center"}},"部分实现了RFC 4346所定义的TLS 1.1协议")],-1),go=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"x509"),t("td",{style:{"text-align":"center"}},"可解析X.509编码的键值和证书")],-1),uo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"x509/pkix"),t("td",{style:{"text-align":"center"}},"包含用于对X.509证书、 CRL和OCSP的ASN.1解析和序列化的共享的、低级的结构")],-1),po=t("tr",null,[t("td",{style:{"text-align":"center"}},"database"),t("td",{style:{"text-align":"center"}},"sql"),t("td",{style:{"text-align":"center"}},"围绕SQL提供了一个通用的接口")],-1),yo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sql/driver"),t("td",{style:{"text-align":"center"}},"定义了数据库驱动所需实现的接口，同sql包的使用方式")],-1),xo=t("tr",null,[t("td",{style:{"text-align":"center"}},"debug"),t("td",{style:{"text-align":"center"}},"dwarf"),t("td",{style:{"text-align":"center"}},"提供了对从可执行文件加载的DWARF调试信息的访问，这个包对于实现Go语言的调试器非常有价值")],-1),bo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"elf"),t("td",{style:{"text-align":"center"}},"实现了对ELF对象文件的访问。 ELF是一种常见的二进制可执行文件和共享库的文件格式。 Linux采用了ELF格式")],-1),fo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gosym"),t("td",{style:{"text-align":"center"}},"访问Go语言二进制程序中的调试信息。对于可视化调试很有价值")],-1),mo=t("td",{style:{"text-align":"center"}},null,-1),ko=t("td",{style:{"text-align":"center"}},"macho",-1),Go={style:{"text-align":"center"}},vo={href:"http://developer.apple.com/mac/library/documentation/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html",target:"_blank",rel:"noopener noreferrer"},Eo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"pe"),t("td",{style:{"text-align":"center"}},"实现了对PE（ Microsoft Windows Portable Executable）文件的访问")],-1),So=t("tr",null,[t("td",{style:{"text-align":"center"}},"encoding"),t("td",{style:{"text-align":"center"}},"ascii85"),t("td",{style:{"text-align":"center"}},"实现了ascii85数据编码，用于btoa工具和Adobe’s PostScript以及PDF文档格式")],-1),Ao=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"asn1"),t("td",{style:{"text-align":"center"}},"实现了解析DER编码的ASN.1数据结构，其定义见ITU-T Rec X.690")],-1),wo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"base32"),t("td",{style:{"text-align":"center"}},"实现了RFC 4648中所定义的base32编码")],-1),Po=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"base64"),t("td",{style:{"text-align":"center"}},"实现了RFC 4648中所定义的base64编码")],-1),Co=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"binary"),t("td",{style:{"text-align":"center"}},"实现了在无符号整数值和字节串之间的转化，以及对固定尺寸值的读和写")],-1),To=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"csv"),t("td",{style:{"text-align":"center"}},"可读和写由逗号分割的数值（ csv）文件")],-1),Mo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gob"),t("td",{style:{"text-align":"center"}},"管理gob流——在编码器（发送者）和解码器（接收者）之间进行二进制值交换")],-1),jo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"hex"),t("td",{style:{"text-align":"center"}},"实现了十六进制的编码和解码")],-1),Io=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"json"),t("td",{style:{"text-align":"center"}},"实现了定义于RFC 4627中的JSON对象的编码和解码")],-1),Bo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"pem"),t("td",{style:{"text-align":"center"}},"实现了PEM（ Privacy Enhanced Mail）数据编码")],-1),Fo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"xml"),t("td",{style:{"text-align":"center"}},"实现了一个简单的可理解XML名字空间的XML 1.0解析器")],-1),Oo=t("tr",null,[t("td",{style:{"text-align":"center"}},"go"),t("td",{style:{"text-align":"center"}},"ast"),t("td",{style:{"text-align":"center"}},"声明了用于展示Go包中的语法树类型")],-1),No=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"build"),t("td",{style:{"text-align":"center"}},"提供了构建Go包的工具")],-1),Do=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"doc"),t("td",{style:{"text-align":"center"}},"从一个Go AST（抽象语法树）中提取源代码文档")],-1),zo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"parser"),t("td",{style:{"text-align":"center"}},"实现了一个Go源文件解析器")],-1),Ro=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"printer"),t("td",{style:{"text-align":"center"}},"实现了对AST（抽象语法树）的打印")],-1),Lo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"scanner"),t("td",{style:{"text-align":"center"}},"实现了一个Go源代码文本的扫描器")],-1),Ho=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"token"),t("td",{style:{"text-align":"center"}},"定义了代表Go编程语言中词法标记以及基本操作标记（ printing、 predicates）的常量")],-1),Jo=t("tr",null,[t("td",{style:{"text-align":"center"}},"hash"),t("td",{style:{"text-align":"center"}},"adler32"),t("td",{style:{"text-align":"center"}},"实现了Adler-32校验和")],-1),qo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"crc32"),t("td",{style:{"text-align":"center"}},"实现了32位的循环冗余校验或CRC-32校验和")],-1),Uo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"crc64"),t("td",{style:{"text-align":"center"}},"实现了64位的循环冗余校验或CRC-64校验和")],-1),Wo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"fnv"),t("td",{style:{"text-align":"center"}},"实现了Glenn Fowler、 Landon Curt Noll和Phong Vo所创建的FNV-1和FNV-1a未加密哈希函数")],-1),Vo=t("tr",null,[t("td",{style:{"text-align":"center"}},"html"),t("td",{style:{"text-align":"center"}},"template"),t("td",{style:{"text-align":"center"}},"它自动构建HTML输出，并可防止代码注入")],-1),Xo=t("tr",null,[t("td",{style:{"text-align":"center"}},"image"),t("td",{style:{"text-align":"center"}},"color"),t("td",{style:{"text-align":"center"}},"实现了一个基本的颜色库")],-1),Ko=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"draw"),t("td",{style:{"text-align":"center"}},"提供一些做图函数")],-1),Qo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gif"),t("td",{style:{"text-align":"center"}},"实现了一个GIF图像解码器")],-1),Zo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"jpeg"),t("td",{style:{"text-align":"center"}},"实现了一个JPEG图像解码器和编码器")],-1),Yo=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"png"),t("td",{style:{"text-align":"center"}},"实现了一个PNG图像解码器和编码器")],-1),$o=t("tr",null,[t("td",{style:{"text-align":"center"}},"index"),t("td",{style:{"text-align":"center"}},"suffixarray"),t("td",{style:{"text-align":"center"}},"通过构建内存索引实现的高速字符串匹配查找算法")],-1),tl=t("tr",null,[t("td",{style:{"text-align":"center"}},"io"),t("td",{style:{"text-align":"center"}},"ioutil"),t("td",{style:{"text-align":"center"}},"实现了一些实用的I/O函数")],-1),el=t("tr",null,[t("td",{style:{"text-align":"center"}},"log"),t("td",{style:{"text-align":"center"}},"syslog"),t("td",{style:{"text-align":"center"}},"提供了对系统日志服务的简单接口")],-1),nl=t("tr",null,[t("td",{style:{"text-align":"center"}},"math"),t("td",{style:{"text-align":"center"}},"big"),t("td",{style:{"text-align":"center"}},"实现了多精度的算术运算（大数）")],-1),rl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"cmplx"),t("td",{style:{"text-align":"center"}},"为复数提供了基本的常量和数学函数")],-1),ol=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rand"),t("td",{style:{"text-align":"center"}},"实现了伪随机数生成器")],-1),ll=t("tr",null,[t("td",{style:{"text-align":"center"}},"mime"),t("td",{style:{"text-align":"center"}},"multipart"),t("td",{style:{"text-align":"center"}},"实现了在RFC 2046中定义的MIME多个部分的解析")],-1),sl=t("tr",null,[t("td",{style:{"text-align":"center"}},"net"),t("td",{style:{"text-align":"center"}},"http"),t("td",{style:{"text-align":"center"}},"提供了HTTP客户端和服务器的实现")],-1),il=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"mail"),t("td",{style:{"text-align":"center"}},"实现了对邮件消息的解析")],-1),al=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rpc"),t("td",{style:{"text-align":"center"}},"提供了对一个来自网络或其他I/O连接的对象可导出的方法的访问")],-1),cl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"smtp"),t("td",{style:{"text-align":"center"}},"实现了定义于RFC 5321中的简单邮件传输协议（ Simple Mail Transfer Protocol)")],-1),hl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"textproto"),t("td",{style:{"text-align":"center"}},"实现了在HTTP、 NNTP和SMTP中基于文本的通用的请求/响应协议")],-1),_l=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"url"),t("td",{style:{"text-align":"center"}},"解析URL并实现查询转义")],-1),dl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/cgi"),t("td",{style:{"text-align":"center"}},"实现了定义于RFC 3875中的CGI（通用网关接口）")],-1),gl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/fcgi"),t("td",{style:{"text-align":"center"}},"实现了FastCGI协议")],-1),ul=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/httptest"),t("td",{style:{"text-align":"center"}},"提供了一些HTTP测试应用")],-1),pl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/httputil"),t("td",{style:{"text-align":"center"}},"提供了一些HTTP应用函数，这些是对net/http包中的东西的补充，只不过相对不太常用")],-1),yl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/pprof"),t("td",{style:{"text-align":"center"}},"通过其HTTP服务器运行时提供性能测试数据，该数据的格式正是pprof可视化工具需要的")],-1),xl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rpc/jsonrpc"),t("td",{style:{"text-align":"center"}},"为rpc包实现了一个JSON-RPC ClientCodec和ServerCodec")],-1),bl=t("tr",null,[t("td",{style:{"text-align":"center"}},"os"),t("td",{style:{"text-align":"center"}},"exec"),t("td",{style:{"text-align":"center"}},"可运行外部命令")],-1),fl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"user"),t("td",{style:{"text-align":"center"}},"通过名称和id进行用户账户检查")],-1),ml=t("tr",null,[t("td",{style:{"text-align":"center"}},"path"),t("td",{style:{"text-align":"center"}},"filepath"),t("td",{style:{"text-align":"center"}},"实现了以与目标操作系统定义文件路径相兼容的方式处理文件名路径")],-1),kl=t("tr",null,[t("td",{style:{"text-align":"center"}},"regexp"),t("td",{style:{"text-align":"center"}},"syntax"),t("td",{style:{"text-align":"center"}},"将正则表达式解析为语法树")],-1),Gl=t("tr",null,[t("td",{style:{"text-align":"center"}},"runtime"),t("td",{style:{"text-align":"center"}},"debug"),t("td",{style:{"text-align":"center"}},"包含当程序在运行时调试其自身的功能")],-1),vl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"pprof"),t("td",{style:{"text-align":"center"}},"以pprof可视化工具需要的格式写运行时性能测试数据")],-1),El=t("tr",null,[t("td",{style:{"text-align":"center"}},"sync"),t("td",{style:{"text-align":"center"}},"atomic"),t("td",{style:{"text-align":"center"}},"提供了低级的用于实现同步算法的原子级的内存机制")],-1),Sl=t("tr",null,[t("td",{style:{"text-align":"center"}},"testing"),t("td",{style:{"text-align":"center"}},"iotest"),t("td",{style:{"text-align":"center"}},"提供一系列测试目的的类型，实现了Reader和Writer标准接口")],-1),Al=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"quick"),t("td",{style:{"text-align":"center"}},"实现了用于黑箱测试的实用函数")],-1),wl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"script"),t("td",{style:{"text-align":"center"}},"帮助测试使用通道的代码")],-1),Pl=t("tr",null,[t("td",{style:{"text-align":"center"}},"text"),t("td",{style:{"text-align":"center"}},"scanner"),t("td",{style:{"text-align":"center"}},"为UTF-8文本提供了一个扫描器和分词器")],-1),Cl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"tabwriter"),t("td",{style:{"text-align":"center"}},"实现了一个写筛选器（ tabwriter.Writer），它可将一个输入的tab分割的列翻译为适当对齐的文本")],-1),Tl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"template"),t("td",{style:{"text-align":"center"}},"数据驱动的模板引擎，用于生成类似HTML的文本输出格式")],-1),Ml=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"template/parse"),t("td",{style:{"text-align":"center"}},"为template构建解析树")],-1),jl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"unicode/utf16"),t("td",{style:{"text-align":"center"}},"实现了UTF-16序列的的编码和解码")],-1),Il=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"unicode/utf8"),t("td",{style:{"text-align":"center"}},"实现了支持以UTF-8编码的文本的函数和常数")],-1),Bl=o('<p><br> <br><a name="优秀的开源库"></a> <a name="优秀的开源库"></a></p><h2 id="其他优秀的开源工具分类" tabindex="-1"><a class="header-anchor" href="#其他优秀的开源工具分类"><span>其他优秀的开源工具分类</span></a></h2><h3 id="音频和音乐" tabindex="-1"><a class="header-anchor" href="#音频和音乐"><span>音频和音乐</span></a></h3><p><a name="音频和音乐"></a> <a name="音频和音乐"></a></p>',4),Fl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Ol={style:{"text-align":"center"}},Nl={href:"https://github.com/algoGuy/EasyMIDI",target:"_blank",rel:"noopener noreferrer"},Dl=t("td",{style:{"text-align":"center"}},"EasyMidi是一个简单可靠的库，用于处理标准Midi文件（SMF）。",-1),zl={style:{"text-align":"center"}},Rl={href:"https://github.com/mewkiz/flac",target:"_blank",rel:"noopener noreferrer"},Ll=t("td",{style:{"text-align":"center"}},"支持FLAC流的Native Go FLAC编码器/解码器。",-1),Hl={style:{"text-align":"center"}},Jl={href:"https://github.com/Comcast/gaad",target:"_blank",rel:"noopener noreferrer"},ql=t("td",{style:{"text-align":"center"}},"本机Go AAC比特流解析器。",-1),Ul={style:{"text-align":"center"}},Wl={href:"https://github.com/krig/go-sox",target:"_blank",rel:"noopener noreferrer"},Vl=t("td",{style:{"text-align":"center"}},"用于go的libsox绑定。",-1),Xl={style:{"text-align":"center"}},Kl={href:"https://github.com/zhulik/go_mediainfo",target:"_blank",rel:"noopener noreferrer"},Ql=t("td",{style:{"text-align":"center"}},"用于go的libmediainfo绑定。",-1),Zl={style:{"text-align":"center"}},Yl={href:"https://github.com/dh1tw/gosamplerate",target:"_blank",rel:"noopener noreferrer"},$l=t("td",{style:{"text-align":"center"}},"用于go的libsamplerate绑定。",-1),ts={style:{"text-align":"center"}},es={href:"https://github.com/bogem/id3v2",target:"_blank",rel:"noopener noreferrer"},ns=t("td",{style:{"text-align":"center"}},"用于Go的快速，稳定的ID3解析和编写库。",-1),rs={style:{"text-align":"center"}},os={href:"https://github.com/gen2brain/malgo",target:"_blank",rel:"noopener noreferrer"},ls=t("td",{style:{"text-align":"center"}},"迷你音频库。",-1),ss={style:{"text-align":"center"}},is={href:"https://github.com/tosone/minimp3",target:"_blank",rel:"noopener noreferrer"},as=t("td",{style:{"text-align":"center"}},"轻量级MP3解码器库。",-1),cs={style:{"text-align":"center"}},hs={href:"https://github.com/go-mix/mix",target:"_blank",rel:"noopener noreferrer"},_s=t("td",{style:{"text-align":"center"}},"为音乐应用程序基于序列转到本地音频混合器。",-1),ds={style:{"text-align":"center"}},gs={href:"https://github.com/tcolgate/mp3",target:"_blank",rel:"noopener noreferrer"},us=t("td",{style:{"text-align":"center"}},"Native Go MP3解码器。",-1),ps={style:{"text-align":"center"}},ys={href:"https://github.com/go-music-theory/music-theory",target:"_blank",rel:"noopener noreferrer"},xs=t("td",{style:{"text-align":"center"}},"Go中的音乐理论模型。",-1),bs={style:{"text-align":"center"}},fs={href:"https://github.com/hajimehoshi/oto",target:"_blank",rel:"noopener noreferrer"},ms=t("td",{style:{"text-align":"center"}},"在多个平台上播放声音的低级库。",-1),ks={style:{"text-align":"center"}},Gs={href:"https://github.com/gordonklaus/portaudio",target:"_blank",rel:"noopener noreferrer"},vs=t("td",{style:{"text-align":"center"}},"用于PortAudio音频I / O库的绑定。",-1),Es={style:{"text-align":"center"}},Ss={href:"https://github.com/rakyll/portmidi",target:"_blank",rel:"noopener noreferrer"},As=t("td",{style:{"text-align":"center"}},"绑定PortMidi。",-1),ws={style:{"text-align":"center"}},Ps={href:"https://github.com/wtolson/go-taglib",target:"_blank",rel:"noopener noreferrer"},Cs=t("td",{style:{"text-align":"center"}},"为taglib绑定。",-1),Ts={style:{"text-align":"center"}},Ms={href:"https://github.com/mccoyst/vorbis",target:"_blank",rel:"noopener noreferrer"},js=t("td",{style:{"text-align":"center"}},"“本机” Go Vorbis解码器（使用CGO，但没有依赖项）。",-1),Is={style:{"text-align":"center"}},Bs={href:"https://github.com/mdlayher/waveform",target:"_blank",rel:"noopener noreferrer"},Fs=t("td",{style:{"text-align":"center"}},"Go程序包，能够从音频流生成波形图像。",-1),Os=t("h3",{id:"数据结构",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#数据结构"},[t("span",null,"数据结构")])],-1),Ns=t("p",null,[t("a",{name:"数据结构"}),e(),t("a",{name:"数据结构"})],-1),Ds=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),zs={style:{"text-align":"center"}},Rs={href:"https://github.com/shady831213/algorithms",target:"_blank",rel:"noopener noreferrer"},Ls=t("td",{style:{"text-align":"center"}},"算法和数据结构。CLRS研究。",-1),Hs={style:{"text-align":"center"}},Js={href:"https://github.com/zhuangsirui/binpacker",target:"_blank",rel:"noopener noreferrer"},qs=t("td",{style:{"text-align":"center"}},"二进制打包程序和解包程序可帮助用户构建自定义二进制流。",-1),Us={style:{"text-align":"center"}},Ws={href:"https://github.com/yourbasic/bit",target:"_blank",rel:"noopener noreferrer"},Vs=t("td",{style:{"text-align":"center"}},"具有额外的位旋转功能的Golang设置数据结构。",-1),Xs={style:{"text-align":"center"}},Ks={href:"https://github.com/willf/bitset",target:"_blank",rel:"noopener noreferrer"},Qs=t("td",{style:{"text-align":"center"}},"实现位集的Go包。",-1),Zs={style:{"text-align":"center"}},Ys={href:"https://github.com/zhenjl/bloom",target:"_blank",rel:"noopener noreferrer"},$s=t("td",{style:{"text-align":"center"}},"在Go中实现的Bloom过滤器。",-1),ti={style:{"text-align":"center"}},ei={href:"https://github.com/yourbasic/bloom",target:"_blank",rel:"noopener noreferrer"},ni=t("td",{style:{"text-align":"center"}},"Golang Bloom过滤器实现。",-1),ri={style:{"text-align":"center"}},oi={href:"https://github.com/tylertreat/BoomFilters",target:"_blank",rel:"noopener noreferrer"},li=t("td",{style:{"text-align":"center"}},"用于处理连续无界流的概率数据结构。",-1),si={style:{"text-align":"center"}},ii={href:"https://github.com/free/concurrent-writer",target:"_blank",rel:"noopener noreferrer"},ai=t("td",{style:{"text-align":"center"}},"高并发直接替换bufio.Writer。",-1),ci={style:{"text-align":"center"}},hi={href:"https://github.com/InVisionApp/conjungo",target:"_blank",rel:"noopener noreferrer"},_i=t("td",{style:{"text-align":"center"}},"一个小型，强大而灵活的合并库。",-1),di={style:{"text-align":"center"}},gi={href:"https://github.com/seiflotfy/count-min-log",target:"_blank",rel:"noopener noreferrer"},ui=t("td",{style:{"text-align":"center"}},"执行Count-Min-Log草图：使用近似计数器进行近似计数（类似于Count-Min草图，但使用较少的内存）。",-1),pi={style:{"text-align":"center"}},yi={href:"https://github.com/superwhiskers/crunch",target:"_blank",rel:"noopener noreferrer"},xi=t("td",{style:{"text-align":"center"}},"Go包实现了用于轻松处理各种数据类型的缓冲区。",-1),bi={style:{"text-align":"center"}},fi={href:"https://github.com/seiflotfy/cuckoofilter",target:"_blank",rel:"noopener noreferrer"},mi=t("td",{style:{"text-align":"center"}},"Cuckoo过滤器：是Go中实现的计数布隆过滤器的很好替代。",-1),ki={style:{"text-align":"center"}},Gi={href:"https://github.com/edwingeng/deque",target:"_blank",rel:"noopener noreferrer"},vi=t("td",{style:{"text-align":"center"}},"高度优化的双端队列。",-1),Ei={style:{"text-align":"center"}},Si={href:"https://github.com/gammazero/deque",target:"_blank",rel:"noopener noreferrer"},Ai=t("td",{style:{"text-align":"center"}},"快速的环形缓冲区双端队列（双端队列）。",-1),wi={style:{"text-align":"center"}},Pi={href:"https://github.com/srfrog/dict",target:"_blank",rel:"noopener noreferrer"},Ci=t("td",{style:{"text-align":"center"}},"Go的类似Python的字典（dict）。",-1),Ti={style:{"text-align":"center"}},Mi={href:"https://github.com/zhenjl/encoding",target:"_blank",rel:"noopener noreferrer"},ji=t("td",{style:{"text-align":"center"}},"Go的整数压缩库。",-1),Ii={style:{"text-align":"center"}},Bi={href:"https://github.com/plar/go-adaptive-radix-tree",target:"_blank",rel:"noopener noreferrer"},Fi=t("td",{style:{"text-align":"center"}},"自适应基数树的 Go实现。",-1),Oi={style:{"text-align":"center"}},Ni={href:"https://github.com/Workiva/go-datastructures",target:"_blank",rel:"noopener noreferrer"},Di=t("td",{style:{"text-align":"center"}},"有用，高性能和线程安全的数据结构的集合。",-1),zi={style:{"text-align":"center"}},Ri={href:"https://github.com/amallia/go-ef",target:"_blank",rel:"noopener noreferrer"},Li=t("td",{style:{"text-align":"center"}},"Elias-Fano编码的Go实现。",-1),Hi={style:{"text-align":"center"}},Ji={href:"https://github.com/hailocab/go-geoindex",target:"_blank",rel:"noopener noreferrer"},qi=t("td",{style:{"text-align":"center"}},"内存中的地理索引。",-1),Ui={style:{"text-align":"center"}},Wi={href:"https://github.com/OrlovEvgeny/go-mcache",target:"_blank",rel:"noopener noreferrer"},Vi=t("td",{style:{"text-align":"center"}},"快速内存键：值存储/缓存库。指针缓存。",-1),Xi={style:{"text-align":"center"}},Ki={href:"https://github.com/aurelien-rainone/go-rquad",target:"_blank",rel:"noopener noreferrer"},Qi=t("td",{style:{"text-align":"center"}},"具有有效点定位和邻居发现功能的区域四叉树。",-1),Zi={style:{"text-align":"center"}},Yi={href:"https://github.com/eko/gocache",target:"_blank",rel:"noopener noreferrer"},$i=t("td",{style:{"text-align":"center"}},"具有多个存储（内存，memcache，redis等），可链接，可加载，指标缓存等的完整Go缓存库。",-1),ta={style:{"text-align":"center"}},ea={href:"https://github.com/enriquebris/goconcurrentqueue",target:"_blank",rel:"noopener noreferrer"},na=t("td",{style:{"text-align":"center"}},"并发FIFO队列。",-1),ra={style:{"text-align":"center"}},oa={href:"https://github.com/emirpasic/gods",target:"_blank",rel:"noopener noreferrer"},la=t("td",{style:{"text-align":"center"}},"数据结构。容器，集合，列表，堆栈，地图，BidiMap，树，HashSet等。",-1),sa={style:{"text-align":"center"}},ia={href:"https://github.com/xxjwxc/gofal",target:"_blank",rel:"noopener noreferrer"},aa=t("td",{style:{"text-align":"center"}},"Go的小数api。",-1),ca={style:{"text-align":"center"}},ha={href:"https://github.com/deckarep/golang-set",target:"_blank",rel:"noopener noreferrer"},_a=t("td",{style:{"text-align":"center"}},"Go的线程安全和非线程安全高性能集。",-1),da={style:{"text-align":"center"}},ga={href:"https://github.com/zoumo/goset",target:"_blank",rel:"noopener noreferrer"},ua=t("td",{style:{"text-align":"center"}},"Go的有用的Set集合实现。",-1),pa={style:{"text-align":"center"}},ya={href:"https://github.com/ryszard/goskiplist",target:"_blank",rel:"noopener noreferrer"},xa=t("td",{style:{"text-align":"center"}},"Go中的跳过列表实现。",-1),ba={style:{"text-align":"center"}},fa={href:"https://github.com/kniren/gota",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},"Go的数据框，序列和数据整理方法的实现。",-1),ka={style:{"text-align":"center"}},Ga={href:"https://github.com/emvi/hide",target:"_blank",rel:"noopener noreferrer"},va=t("td",{style:{"text-align":"center"}},"ID类型，将其编组进/出哈希以防止将ID发送给客户端。",-1),Ea={style:{"text-align":"center"}},Sa={href:"https://github.com/google/hilbert",target:"_blank",rel:"noopener noreferrer"},Aa=t("td",{style:{"text-align":"center"}},"Go程序包，用于在空间填充曲线（例如Hilbert和Peano曲线）之间映射值。",-1),wa={style:{"text-align":"center"}},Pa={href:"https://github.com/axiomhq/hyperloglog",target:"_blank",rel:"noopener noreferrer"},Ca=t("td",{style:{"text-align":"center"}},"HyperLogLog实施，具有稀疏，LogLog-Beta偏差校正和TailCut空间减少功能。",-1),Ta={style:{"text-align":"center"}},Ma={href:"https://github.com/disksing/iter",target:"_blank",rel:"noopener noreferrer"},ja=t("td",{style:{"text-align":"center"}},"C ++ STL迭代器和算法的实现。",-1),Ia={style:{"text-align":"center"}},Ba={href:"https://github.com/agext/levenshtein",target:"_blank",rel:"noopener noreferrer"},Fa=t("td",{style:{"text-align":"center"}},"Levenshtein距离和相似性度量标准，具有可自定义的编辑费用和通用前缀的类似于Winkler的奖金。",-1),Oa={style:{"text-align":"center"}},Na={href:"https://github.com/agnivade/levenshtein",target:"_blank",rel:"noopener noreferrer"},Da=t("td",{style:{"text-align":"center"}},"在Go中计算levenshtein距离的实现。",-1),za={style:{"text-align":"center"}},Ra={href:"https://github.com/smartystreets/mafsa",target:"_blank",rel:"noopener noreferrer"},La=t("td",{style:{"text-align":"center"}},"具有最小完美散列的MA-FSA实现。",-1),Ha={style:{"text-align":"center"}},Ja={href:"https://github.com/cbergoon/merkletree",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},"merkle树的实现，可对数据结构的内容进行有效且安全的验证。",-1),Ua={style:{"text-align":"center"}},Wa={href:"https://github.com/BlackRabbitt/mspm",target:"_blank",rel:"noopener noreferrer"},Va=t("td",{style:{"text-align":"center"}},"用于信息检索的多字符串模式匹配算法。",-1),Xa={style:{"text-align":"center"}},Ka={href:"https://github.com/emvi/null",target:"_blank",rel:"noopener noreferrer"},Qa=t("td",{style:{"text-align":"center"}},"可空转到类型，可以被编组/解组到/从JSON。",-1),Za={style:{"text-align":"center"}},Ya={href:"https://github.com/MonaxGT/parsefields",target:"_blank",rel:"noopener noreferrer"},$a=t("td",{style:{"text-align":"center"}},"用于解析类似JSON的日志的工具，以收集唯一的字段和事件。",-1),tc={style:{"text-align":"center"}},ec={href:"https://github.com/hyfather/pipeline",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},"具有扇入和扇出的管线的实现。",-1),rc={style:{"text-align":"center"}},oc={href:"https://github.com/viant/ptrie",target:"_blank",rel:"noopener noreferrer"},lc=t("td",{style:{"text-align":"center"}},"前缀树的实现。",-1),sc={style:{"text-align":"center"}},ic={href:"https://github.com/rocketlaunchr/remember-go",target:"_blank",rel:"noopener noreferrer"},ac=t("td",{style:{"text-align":"center"}},"缓存慢速数据库查询的通用接口（由redis，memcached，ristretto或内存支持）。",-1),cc={style:{"text-align":"center"}},hc={href:"https://github.com/TheTannerRyan/ring",target:"_blank",rel:"noopener noreferrer"},_c=t("td",{style:{"text-align":"center"}},"围棋实现了高性能，线程安全的布隆过滤器。",-1),dc={style:{"text-align":"center"}},gc={href:"https://github.com/RoaringBitmap/roaring",target:"_blank",rel:"noopener noreferrer"},uc=t("td",{style:{"text-align":"center"}},"实施压缩位集的软件包。",-1),pc={style:{"text-align":"center"}},yc={href:"https://github.com/StudioSol/set",target:"_blank",rel:"noopener noreferrer"},xc=t("td",{style:{"text-align":"center"}},"使用LinkedHashMap的围棋设置简单的数据结构实现。",-1),bc={style:{"text-align":"center"}},fc={href:"https://github.com/MauriceGit/skiplist",target:"_blank",rel:"noopener noreferrer"},mc=t("td",{style:{"text-align":"center"}},"非常快的Go Skiplist实施。",-1),kc={style:{"text-align":"center"}},Gc={href:"https://github.com/gansidui/skiplist",target:"_blank",rel:"noopener noreferrer"},vc=t("td",{style:{"text-align":"center"}},"Go中的跳过列表实现。",-1),Ec={style:{"text-align":"center"}},Sc={href:"https://github.com/zekroTJA/timedmap",target:"_blank",rel:"noopener noreferrer"},Ac=t("td",{style:{"text-align":"center"}},"具有过期的键/值对的地图。",-1),wc={style:{"text-align":"center"}},Pc={href:"https://github.com/perdata/treap",target:"_blank",rel:"noopener noreferrer"},Cc=t("td",{style:{"text-align":"center"}},"使用树堆的持久快速排序的地图。",-1),Tc={style:{"text-align":"center"}},Mc={href:"https://github.com/derekparker/trie",target:"_blank",rel:"noopener noreferrer"},jc=t("td",{style:{"text-align":"center"}},"Go中的Trie实现。",-1),Ic={style:{"text-align":"center"}},Bc={href:"https://github.com/diegobernardes/ttlcache",target:"_blank",rel:"noopener noreferrer"},Fc=t("td",{style:{"text-align":"center"}},"内存中的LRU字符串接口{}映射，其中包含golang的到期时间。",-1),Oc={style:{"text-align":"center"}},Nc={href:"https://github.com/gurukami/typ",target:"_blank",rel:"noopener noreferrer"},Dc=t("td",{style:{"text-align":"center"}},"空类型，安全的原始类型转换和从复杂结构中获取值。",-1),zc={style:{"text-align":"center"}},Rc={href:"https://github.com/willf/bloom",target:"_blank",rel:"noopener noreferrer"},Lc=t("td",{style:{"text-align":"center"}},"Go包实现Bloom过滤器。",-1),Hc=t("h3",{id:"分布式系统",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#分布式系统"},[t("span",null,"分布式系统")])],-1),Jc=t("p",null,[t("a",{name:"分布式系统"}),e(),t("a",{name:"分布式系统"})],-1),qc=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Uc={style:{"text-align":"center"}},Wc={href:"https://github.com/svcavallar/celeriac.v1",target:"_blank",rel:"noopener noreferrer"},Vc=t("td",{style:{"text-align":"center"}},"用于在Go中添加支持以交互和监视Celery工作者，任务和事件的库。",-1),Xc={style:{"text-align":"center"}},Kc={href:"https://github.com/buraksezer/consistent",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},"具有受限负载的一致哈希",-1),Zc={style:{"text-align":"center"}},Yc={href:"https://github.com/anacrolix/dht",target:"_blank",rel:"noopener noreferrer"},$c=t("td",{style:{"text-align":"center"}},"BitTorrent Kademlia DHT实施。",-1),th={style:{"text-align":"center"}},eh={href:"https://github.com/digota/digota",target:"_blank",rel:"noopener noreferrer"},nh=t("td",{style:{"text-align":"center"}},"grpc电子商务微服务。",-1),rh={style:{"text-align":"center"}},oh={href:"https://github.com/dotchain/dot/",target:"_blank",rel:"noopener noreferrer"},lh=t("td",{style:{"text-align":"center"}},"使用操作转换/ OT进行分布式同步。",-1),sh={style:{"text-align":"center"}},ih={href:"https://github.com/edwingeng/doublejump",target:"_blank",rel:"noopener noreferrer"},ah=t("td",{style:{"text-align":"center"}},"改进后的Google的跳转一致性哈希。",-1),ch={style:{"text-align":"center"}},hh={href:"https://github.com/lni/dragonboat",target:"_blank",rel:"noopener noreferrer"},_h=t("td",{style:{"text-align":"center"}},"Go中功能齐全的高性能多组Raft库。",-1),dh={style:{"text-align":"center"}},gh={href:"https://github.com/dgruber/drmaa",target:"_blank",rel:"noopener noreferrer"},uh=t("td",{style:{"text-align":"center"}},"基于DRMAA标准的集群调度程序的作业提交库。",-1),ph={style:{"text-align":"center"}},yh={href:"https://cirello.io/dynamolock",target:"_blank",rel:"noopener noreferrer"},xh=t("td",{style:{"text-align":"center"}},"DynamoDB支持的分布式锁定实现。",-1),bh={style:{"text-align":"center"}},fh={href:"https://github.com/tylfin/dynatomic",target:"_blank",rel:"noopener noreferrer"},mh=t("td",{style:{"text-align":"center"}},"将DynamoDB用作原子计数器的库。",-1),kh={style:{"text-align":"center"}},Gh={href:"https://github.com/emitter-io/emitter",target:"_blank",rel:"noopener noreferrer"},vh=t("td",{style:{"text-align":"center"}},"使用MQTT，Websockets和love构建的高性能，分布式，安全和低延迟的发布-订阅平台。",-1),Eh={style:{"text-align":"center"}},Sh={href:"https://github.com/vectaport/flowgraph",target:"_blank",rel:"noopener noreferrer"},Ah=t("td",{style:{"text-align":"center"}},"基于流的编程包。",-1),wh={style:{"text-align":"center"}},Ph={href:"https://github.com/chrislusf/gleam",target:"_blank",rel:"noopener noreferrer"},Ch=t("td",{style:{"text-align":"center"}},"用纯围棋和Luajit快速和可扩展的分布式的map / reduce系统，具有Luajit的高性能结合Go的高并发，单独运行或分发。",-1),Th={style:{"text-align":"center"}},Mh={href:"https://github.com/chrislusf/glow",target:"_blank",rel:"noopener noreferrer"},jh=t("td",{style:{"text-align":"center"}},"易于使用的可扩展的分布式大数据处理，Map-Reduce，DAG执行，全部在纯Go中进行。",-1),Ih={style:{"text-align":"center"}},Bh={href:"https://github.com/InVisionApp/go-health",target:"_blank",rel:"noopener noreferrer"},Fh=t("td",{style:{"text-align":"center"}},"health-用于在服务中启用异步依赖项运行状况检查的库。",-1),Oh={style:{"text-align":"center"}},Nh={href:"https://github.com/dgryski/go-jump",target:"_blank",rel:"noopener noreferrer"},Dh=t("td",{style:{"text-align":"center"}},"Google的“ Jump”一致性哈希函数的端口。",-1),zh={style:{"text-align":"center"}},Rh={href:"https://github.com/go-kit/kit",target:"_blank",rel:"noopener noreferrer"},Lh=t("td",{style:{"text-align":"center"}},"支持服务发现，负载平衡，可插拔传输，请求跟踪等的微服务工具包",-1),Hh={style:{"text-align":"center"}},Jh={href:"https://github.com/AppsFlyer/go-sundheit",target:"_blank",rel:"noopener noreferrer"},qh=t("td",{style:{"text-align":"center"}},"建立用于支持为golang服务定义异步服务运行状况检查的库。",-1),Uh={style:{"text-align":"center"}},Wh={href:"https://github.com/valyala/gorpc",target:"_blank",rel:"noopener noreferrer"},Vh=t("td",{style:{"text-align":"center"}},"简单，快速和可扩展的RPC库，可实现高负载。",-1),Xh={style:{"text-align":"center"}},Kh={href:"https://github.com/grpc/grpc-go",target:"_blank",rel:"noopener noreferrer"},Qh=t("td",{style:{"text-align":"center"}},"gRPC的Go语言实现。基于HTTP / 2的RPC。",-1),Zh={style:{"text-align":"center"}},Yh={href:"https://github.com/hprose/hprose-golang",target:"_blank",rel:"noopener noreferrer"},$h=t("td",{style:{"text-align":"center"}},"十分新颖的RPC库，现在支持25种以上的语言。",-1),t_={style:{"text-align":"center"}},e_={href:"https://github.com/osamingo/jsonrpc",target:"_blank",rel:"noopener noreferrer"},n_=t("td",{style:{"text-align":"center"}},"jsonrpc软件包可帮助实现JSON-RPC 2.0。",-1),r_={style:{"text-align":"center"}},o_={href:"https://github.com/ybbus/jsonrpc",target:"_blank",rel:"noopener noreferrer"},l_=t("td",{style:{"text-align":"center"}},"JSON-RPC 2.0 HTTP客户端实现。",-1),s_={style:{"text-align":"center"}},i_={href:"https://github.com/devopsfaith/krakend",target:"_blank",rel:"noopener noreferrer"},a_=t("td",{style:{"text-align":"center"}},"具有中间件的超高性能API网关框架。",-1),c_={style:{"text-align":"center"}},h_={href:"https://github.com/liftbridge-io/liftbridge",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},"NATS的轻量级，容错消息流。",-1),d_={style:{"text-align":"center"}},g_={href:"https://github.com/micro/micro",target:"_blank",rel:"noopener noreferrer"},u_=t("td",{style:{"text-align":"center"}},"可插拔的microService工具箱和分布式系统平台。",-1),p_={style:{"text-align":"center"}},y_={href:"https://github.com/nats-io/gnatsd",target:"_blank",rel:"noopener noreferrer"},x_=t("td",{style:{"text-align":"center"}},"用于微服务，IoT和云本机系统的轻量级高性能消息传递系统。",-1),b_={style:{"text-align":"center"}},f_={href:"https://github.com/italolelis/outboxer",target:"_blank",rel:"noopener noreferrer"},m_=t("td",{style:{"text-align":"center"}},"Outboxer是一个实现库模式的go库。",-1),k_={style:{"text-align":"center"}},G_={href:"https://cirello.io/pglock",target:"_blank",rel:"noopener noreferrer"},v_=t("td",{style:{"text-align":"center"}},"PostgreSQL支持的分布式锁定实现。",-1),E_={style:{"text-align":"center"}},S_={href:"https://github.com/hashicorp/raft",target:"_blank",rel:"noopener noreferrer"},A_=t("td",{style:{"text-align":"center"}},"HashiCorp的Raft共识协议的Golang实现。",-1),w_={style:{"text-align":"center"}},P_={href:"https://github.com/coreos/etcd/tree/master/raft",target:"_blank",rel:"noopener noreferrer"},C_=t("td",{style:{"text-align":"center"}},"ETCD中实现的Raft协议。",-1),T_={style:{"text-align":"center"}},M_={href:"https://github.com/cenkalti/rain",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},"BitTorrent客户端和库。",-1),I_={style:{"text-align":"center"}},B_={href:"https://github.com/bsm/redislock",target:"_blank",rel:"noopener noreferrer"},F_=t("td",{style:{"text-align":"center"}},"使用Redis的简化分布式锁定实现。",-1),O_={style:{"text-align":"center"}},N_={href:"https://resgate.io/",target:"_blank",rel:"noopener noreferrer"},D_=t("td",{style:{"text-align":"center"}},"用于构建REST，实时和RPC API的实时API网关，其中所有客户端都可以无缝同步。",-1),z_={style:{"text-align":"center"}},R_={href:"https://github.com/uber/ringpop-go",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},"Go应用程序的可扩展，容错应用程序层分片。",-1),H_={style:{"text-align":"center"}},J_={href:"https://github.com/smallnest/rpcx",target:"_blank",rel:"noopener noreferrer"},q_=t("td",{style:{"text-align":"center"}},"分布式可插拔RPC服务框架，例如阿里巴巴Dubbo。",-1),U_={style:{"text-align":"center"}},W_={href:"https://github.com/ursiform/sleuth",target:"_blank",rel:"noopener noreferrer"},V_={style:{"text-align":"center"}},X_={href:"https://github.com/zeromq/libzmq",target:"_blank",rel:"noopener noreferrer"},K_={style:{"text-align":"center"}},Q_={href:"https://github.com/tendermint/tendermint",target:"_blank",rel:"noopener noreferrer"},Z_=t("td",{style:{"text-align":"center"}},"高性能中间件，用于使用Tendermint共识和区块链协议将以任何编程语言编写的状态机转换为拜占庭容错复制状态机。",-1),Y_={style:{"text-align":"center"}},$_={href:"https://github.com/anacrolix/torrent",target:"_blank",rel:"noopener noreferrer"},td=t("td",{style:{"text-align":"center"}},"BitTorrent客户端软件包。",-1),ed=t("h3",{id:"电子邮件",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#电子邮件"},[t("span",null,"电子邮件")])],-1),nd=t("p",null,[t("a",{name:"电子邮件"}),e(),t("a",{name:"电子邮件"})],-1),rd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),od={style:{"text-align":"center"}},ld={href:"https://blitiri.com.ar/p/chasquid",target:"_blank",rel:"noopener noreferrer"},sd=t("td",{style:{"text-align":"center"}},"用Go编写的SMTP服务器。",-1),id={style:{"text-align":"center"}},ad={href:"https://github.com/aymerick/douceur",target:"_blank",rel:"noopener noreferrer"},cd=t("td",{style:{"text-align":"center"}},"CSS内衬为您的HTML电子邮件。",-1),hd={style:{"text-align":"center"}},_d={href:"https://github.com/jordan-wright/email",target:"_blank",rel:"noopener noreferrer"},dd=t("td",{style:{"text-align":"center"}},"用于Go的强大而灵活的电子邮件库。",-1),gd={style:{"text-align":"center"}},ud={href:"https://github.com/toorop/go-dkim",target:"_blank",rel:"noopener noreferrer"},pd=t("td",{style:{"text-align":"center"}},"DKIM库，用于签名和验证电子邮件。",-1),yd={style:{"text-align":"center"}},xd={href:"https://github.com/emersion/go-imap",target:"_blank",rel:"noopener noreferrer"},bd=t("td",{style:{"text-align":"center"}},"用于客户端和服务器的IMAP库。",-1),fd={style:{"text-align":"center"}},md={href:"https://github.com/emersion/go-message",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},"Internet消息格式和邮件消息的流库。",-1),Gd={style:{"text-align":"center"}},vd={href:"https://github.com/vanng822/go-premailer",target:"_blank",rel:"noopener noreferrer"},Ed=t("td",{style:{"text-align":"center"}},"Go中HTML邮件的内联样式。",-1),Sd={style:{"text-align":"center"}},Ad={href:"https://github.com/xhit/go-simple-mail",target:"_blank",rel:"noopener noreferrer"},wd=t("td",{style:{"text-align":"center"}},"使用SMTP保持活动状态和两个超时发送电子邮件的非常简单的程序包：连接和发送。",-1),Pd={style:{"text-align":"center"}},Cd={href:"https://github.com/hectane/hectane",target:"_blank",rel:"noopener noreferrer"},Td=t("td",{style:{"text-align":"center"}},"提供HTTP API的轻型SMTP客户端。",-1),Md={style:{"text-align":"center"}},jd={href:"https://github.com/matcornic/hermes",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},"Golang软件包，可生成干净的响应式HTML电子邮件。",-1),Bd={style:{"text-align":"center"}},Fd={href:"https://github.com/mailchain/mailchain",target:"_blank",rel:"noopener noreferrer"},Od=t("td",{style:{"text-align":"center"}},"将加密的电子邮件发送到用Go编写的区块链地址。",-1),Nd={style:{"text-align":"center"}},Dd={href:"https://github.com/mailgun/mailgun-go",target:"_blank",rel:"noopener noreferrer"},zd=t("td",{style:{"text-align":"center"}},"Go库，用于使用Mailgun API发送邮件。",-1),Rd={style:{"text-align":"center"}},Ld={href:"https://github.com/mailhog/MailHog",target:"_blank",rel:"noopener noreferrer"},Hd=t("td",{style:{"text-align":"center"}},"通过Web和API界面进行电子邮件和SMTP测试。",-1),Jd={style:{"text-align":"center"}},qd={href:"https://github.com/sendgrid/sendgrid-go",target:"_blank",rel:"noopener noreferrer"},Ud=t("td",{style:{"text-align":"center"}},"SendGrid的Go库，用于发送电子邮件。",-1),Wd={style:{"text-align":"center"}},Vd={href:"https://github.com/mailhog/smtp",target:"_blank",rel:"noopener noreferrer"},Xd=t("td",{style:{"text-align":"center"}},"SMTP服务器协议状态机。",-1),Kd=t("h3",{id:"嵌入式脚本语言",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#嵌入式脚本语言"},[t("span",null,"嵌入式脚本语言")])],-1),Qd=t("p",null,[t("a",{name:"嵌入式脚本语言"}),e(),t("a",{name:"嵌入式脚本语言"})],-1),Zd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Yd={style:{"text-align":"center"}},$d={href:"https://github.com/mattn/anko",target:"_blank",rel:"noopener noreferrer"},tg=t("td",{style:{"text-align":"center"}},"用Go语言编写的可编写脚本的解释器。",-1),eg={style:{"text-align":"center"}},ng={href:"https://github.com/alexeyco/binder",target:"_blank",rel:"noopener noreferrer"},rg={style:{"text-align":"center"}},og={href:"https://github.com/yuin/gopher-lua",target:"_blank",rel:"noopener noreferrer"},lg={style:{"text-align":"center"}},sg={href:"https://github.com/google/cel-go",target:"_blank",rel:"noopener noreferrer"},ig=t("td",{style:{"text-align":"center"}},"具有渐进式输入功能的快速，便携式，非图灵完整表达评估。",-1),ag={style:{"text-align":"center"}},cg={href:"https://github.com/antonmedv/expr",target:"_blank",rel:"noopener noreferrer"},hg=t("td",{style:{"text-align":"center"}},"可以评估表达式的引擎。",-1),_g={style:{"text-align":"center"}},dg={href:"https://github.com/gentee/gentee",target:"_blank",rel:"noopener noreferrer"},gg=t("td",{style:{"text-align":"center"}},"可嵌入的脚本编程语言。",-1),ug={style:{"text-align":"center"}},pg={href:"https://github.com/jcla1/gisp",target:"_blank",rel:"noopener noreferrer"},yg=t("td",{style:{"text-align":"center"}},"Go中的简单LISP。",-1),xg={style:{"text-align":"center"}},bg={href:"https://github.com/olebedev/go-duktape",target:"_blank",rel:"noopener noreferrer"},fg=t("td",{style:{"text-align":"center"}},"Go的Duktape JavaScript引擎绑定。",-1),mg={style:{"text-align":"center"}},kg={href:"https://github.com/Shopify/go-lua",target:"_blank",rel:"noopener noreferrer"},Gg=t("td",{style:{"text-align":"center"}},"Lua 5.2 VM到纯Go的端口。",-1),vg={style:{"text-align":"center"}},Eg={href:"https://github.com/deuill/go-php",target:"_blank",rel:"noopener noreferrer"},Sg=t("td",{style:{"text-align":"center"}},"Go的PHP绑定。",-1),Ag={style:{"text-align":"center"}},wg={href:"https://github.com/sbinet/go-python",target:"_blank",rel:"noopener noreferrer"},Pg=t("td",{style:{"text-align":"center"}},"与CPython C-API的幼稚go绑定。",-1),Cg={style:{"text-align":"center"}},Tg={href:"https://github.com/aarzilli/golua",target:"_blank",rel:"noopener noreferrer"},Mg=t("td",{style:{"text-align":"center"}},"Lua C API的绑定。",-1),jg={style:{"text-align":"center"}},Ig={href:"https://github.com/yuin/gopher-lua",target:"_blank",rel:"noopener noreferrer"},Bg=t("td",{style:{"text-align":"center"}},"用Go编写的Lua 5.1 VM和编译器。",-1),Fg={style:{"text-align":"center"}},Og={href:"https://github.com/PaesslerAG/gval",target:"_blank",rel:"noopener noreferrer"},Ng=t("td",{style:{"text-align":"center"}},"用Go编写的高度可定制的表达语言。",-1),Dg={style:{"text-align":"center"}},zg={href:"https://github.com/db47h/ngaro",target:"_blank",rel:"noopener noreferrer"},Rg=t("td",{style:{"text-align":"center"}},"可嵌入的Ngaro VM实现，支持在Retro中编写脚本。",-1),Lg={style:{"text-align":"center"}},Hg={href:"https://github.com/robertkrimen/otto",target:"_blank",rel:"noopener noreferrer"},Jg=t("td",{style:{"text-align":"center"}},"用Go编写的JavaScript解释器。",-1),qg={style:{"text-align":"center"}},Ug={href:"https://github.com/ian-kent/purl",target:"_blank",rel:"noopener noreferrer"},Wg=t("td",{style:{"text-align":"center"}},"Go中嵌入的Perl 5.18.2。",-1),Vg={style:{"text-align":"center"}},Xg={href:"https://github.com/d5/tengo",target:"_blank",rel:"noopener noreferrer"},Kg=t("td",{style:{"text-align":"center"}},"用于Go的字节码编译脚本语言。",-1),Qg=t("h3",{id:"错误处理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#错误处理"},[t("span",null,"错误处理")])],-1),Zg=t("p",null,[t("a",{name:"错误处理"}),e(),t("a",{name:"错误处理"})],-1),Yg=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),$g={style:{"text-align":"center"}},t1={href:"https://github.com/emperror/emperror",target:"_blank",rel:"noopener noreferrer"},e1=t("td",{style:{"text-align":"center"}},"Go库和应用程序的错误处理工具和最佳实践。",-1),n1={style:{"text-align":"center"}},r1={href:"https://github.com/snwfdhmp/errlog",target:"_blank",rel:"noopener noreferrer"},o1=t("td",{style:{"text-align":"center"}},"可破解的软件包，用于确定错误的负责任的源代码（以及其他一些快速调试功能）。可插入任何现成的记录器。",-1),l1={style:{"text-align":"center"}},s1={href:"https://github.com/emperror/errors",target:"_blank",rel:"noopener noreferrer"},i1={style:{"text-align":"center"}},a1={href:"http://xn--github-hp7iqmm6yfkd5wfcw3blplh5byxx19dut5f3tyesnsb.com/pkg/errors%E3%80%82%E6%8F%90%E4%BE%9B%E5%90%84%E7%A7%8D%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8E%9F%E8%AF%AD%E3%80%82",target:"_blank",rel:"noopener noreferrer"},c1={style:{"text-align":"center"}},h1={href:"https://github.com/pkg/errors",target:"_blank",rel:"noopener noreferrer"},_1=t("td",{style:{"text-align":"center"}},"提供简单错误处理原语的软件包。",-1),d1={style:{"text-align":"center"}},g1={href:"https://github.com/neuronlabs/errors",target:"_blank",rel:"noopener noreferrer"},u1=t("td",{style:{"text-align":"center"}},"简单golang错误处理与分类元。",-1),p1={style:{"text-align":"center"}},y1={href:"https://github.com/joomcode/errorx",target:"_blank",rel:"noopener noreferrer"},x1=t("td",{style:{"text-align":"center"}},"具有堆栈跟踪，错误组成等的功能丰富的错误包。",-1),b1={style:{"text-align":"center"}},f1={href:"https://github.com/SonicRoshan/falcon",target:"_blank",rel:"noopener noreferrer"},m1=t("td",{style:{"text-align":"center"}},"一个简单但功能强大的错误处理软件包。",-1),k1={style:{"text-align":"center"}},G1={href:"https://github.com/hashicorp/go-multierror",target:"_blank",rel:"noopener noreferrer"},v1=t("td",{style:{"text-align":"center"}},"Go（golang）软件包，用于将错误列表表示为单个错误。",-1),E1={style:{"text-align":"center"}},S1={href:"https://github.com/ztrue/tracerr",target:"_blank",rel:"noopener noreferrer"},A1=t("td",{style:{"text-align":"center"}},"带有堆栈跟踪和源代码片段的Golang错误。",-1),w1={style:{"text-align":"center"}},P1={href:"https://github.com/txgruppi/werr",target:"_blank",rel:"noopener noreferrer"},C1=t("td",{style:{"text-align":"center"}},"错误包装程序为Go中的错误类型创建了一个包装程序，该包装程序捕获了调用它的文件，行和堆栈。",-1),T1=t("h3",{id:"文件",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#文件"},[t("span",null,"文件")])],-1),M1=t("p",null,[t("a",{name:"文件"}),e(),t("a",{name:"文件"})],-1),j1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),I1={style:{"text-align":"center"}},B1={href:"https://github.com/spf13/afero",target:"_blank",rel:"noopener noreferrer"},F1=t("td",{style:{"text-align":"center"}},"Go的文件系统抽象系统。",-1),O1={style:{"text-align":"center"}},N1={href:"https://github.com/viant/afs",target:"_blank",rel:"noopener noreferrer"},D1=t("td",{style:{"text-align":"center"}},"Go的抽象文件存储（mem，scp，zip，tar，云：s3，gs）。",-1),z1={style:{"text-align":"center"}},R1={href:"https://github.com/bigfile/bigfile",target:"_blank",rel:"noopener noreferrer"},L1=t("td",{style:{"text-align":"center"}},"文件传输系统，支持使用http api，rpc调用和ftp客户端管理文件。",-1),H1={style:{"text-align":"center"}},J1={href:"https://github.com/codingsince1985/checksum",target:"_blank",rel:"noopener noreferrer"},q1=t("td",{style:{"text-align":"center"}},"计算大型文件的消息摘要，例如MD5和SHA256。",-1),U1={style:{"text-align":"center"}},W1={href:"https://github.com/homedepot/flop",target:"_blank",rel:"noopener noreferrer"},V1={style:{"text-align":"center"}},X1={href:"https://www.gnu.org/software/coreutils/manual/html_node/cp-invocation.html",target:"_blank",rel:"noopener noreferrer"},K1={style:{"text-align":"center"}},Q1={href:"https://github.com/artonge/go-csv-tag",target:"_blank",rel:"noopener noreferrer"},Z1=t("td",{style:{"text-align":"center"}},"tag-使用标签加载csv文件。",-1),Y1={style:{"text-align":"center"}},$1={href:"https://github.com/hugocarreira/go-decent-copy",target:"_blank",rel:"noopener noreferrer"},tu=t("td",{style:{"text-align":"center"}},"复制human文件。",-1),eu={style:{"text-align":"center"}},nu={href:"https://github.com/barasher/go-exiftool",target:"_blank",rel:"noopener noreferrer"},ru=t("td",{style:{"text-align":"center"}},"ExifTool的Go绑定，这是众所周知的库，用于从文件（图片，PDF，office，...）提取尽可能多的元数据（EXIF，IPTC等）。",-1),ou={style:{"text-align":"center"}},lu={href:"https://github.com/artonge/go-gtfs",target:"_blank",rel:"noopener noreferrer"},su=t("td",{style:{"text-align":"center"}},"在go中加载gtfs文件。",-1),iu={style:{"text-align":"center"}},au={href:"https://github.com/rjeczalik/notify",target:"_blank",rel:"noopener noreferrer"},cu=t("td",{style:{"text-align":"center"}},"具有简单API的文件系统事件通知库，类似于os / signal。",-1),hu={style:{"text-align":"center"}},_u={href:"https://github.com/qmuntal/opc",target:"_blank",rel:"noopener noreferrer"},du=t("td",{style:{"text-align":"center"}},"为Go加载Open Packaging Conventions（OPC）文件。",-1),gu={style:{"text-align":"center"}},uu={href:"https://github.com/parsyl/parquet",target:"_blank",rel:"noopener noreferrer"},pu={style:{"text-align":"center"}},yu={href:"https://parquet.apache.org/",target:"_blank",rel:"noopener noreferrer"},xu={style:{"text-align":"center"}},bu={href:"https://github.com/hhrutter/pdfcpu",target:"_blank",rel:"noopener noreferrer"},fu=t("td",{style:{"text-align":"center"}},"PDF 处理器。",-1),mu={style:{"text-align":"center"}},ku={href:"https://github.com/dixonwille/skywalker",target:"_blank",rel:"noopener noreferrer"},Gu=t("td",{style:{"text-align":"center"}},"一种软件包，允许一个人轻松地同时通过文件系统。",-1),vu={style:{"text-align":"center"}},Eu={href:"https://gitlab.com/russoj88/stl",target:"_blank",rel:"noopener noreferrer"},Su=t("td",{style:{"text-align":"center"}},"读取和写入STL（立体光刻）文件的模块。并发读取算法。",-1),Au={style:{"text-align":"center"}},wu={href:"https://github.com/posener/tarfs",target:"_blank",rel:"noopener noreferrer"},Pu={style:{"text-align":"center"}},Cu={href:"https://godoc.org/github.com/kr/fs#FileSystem",target:"_blank",rel:"noopener noreferrer"},Tu=t("code",null,"FileSystem",-1),Mu={style:{"text-align":"center"}},ju={href:"https://github.com/C2FO/vfs",target:"_blank",rel:"noopener noreferrer"},Iu=t("td",{style:{"text-align":"center"}},"跨多种文件系统类型（例如os，S3和GCS）的Go的一组可插拔，可扩展且自以为是的文件系统功能。",-1),Bu=t("h3",{id:"金融",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#金融"},[t("span",null,"金融")])],-1),Fu=t("p",null,[t("a",{name:"金融"}),e(),t("a",{name:"金融"})],-1),Ou=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Nu={style:{"text-align":"center"}},Du={href:"https://github.com/leekchan/accounting",target:"_blank",rel:"noopener noreferrer"},zu=t("td",{style:{"text-align":"center"}},"golang的货币和货币格式。",-1),Ru={style:{"text-align":"center"}},Lu={href:"https://github.com/bnkamalesh/currency",target:"_blank",rel:"noopener noreferrer"},Hu=t("td",{style:{"text-align":"center"}},"高性能和准确的货币计算包。",-1),Ju={style:{"text-align":"center"}},qu={href:"https://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"},Uu=t("td",{style:{"text-align":"center"}},"任意精度定点十进制数字。",-1),Wu={style:{"text-align":"center"}},Vu={href:"https://github.com/FlashBoys/go-finance",target:"_blank",rel:"noopener noreferrer"},Xu=t("td",{style:{"text-align":"center"}},"Go中的综合金融市场数据。",-1),Ku={style:{"text-align":"center"}},Qu={href:"https://github.com/alpeb/go-finance",target:"_blank",rel:"noopener noreferrer"},Zu=t("td",{style:{"text-align":"center"}},"金融功能库，用于货币时间价值（年金），现金流量，利率转换，债券和折旧计算。",-1),Yu={style:{"text-align":"center"}},$u={href:"https://github.com/pieterclaerhout/go-finance",target:"_blank",rel:"noopener noreferrer"},tp=t("td",{style:{"text-align":"center"}},"获取汇率，通过VIES检查增值税号和检查IBAN银行帐号的模块。",-1),ep={style:{"text-align":"center"}},np={href:"https://github.com/rhymond/go-money",target:"_blank",rel:"noopener noreferrer"},rp=t("td",{style:{"text-align":"center"}},"Fowler的Money模式的实现。",-1),op={style:{"text-align":"center"}},lp={href:"https://github.com/aclindsa/ofxgo",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},"查询OFX服务器和/或解析响应（使用示例命令行客户端）。",-1),ip={style:{"text-align":"center"}},ap={href:"https://github.com/i25959341/orderbook",target:"_blank",rel:"noopener noreferrer"},cp=t("td",{style:{"text-align":"center"}},"匹配引擎的限价订单在Golang。",-1),hp={style:{"text-align":"center"}},_p={href:"https://github.com/sdcoffey/techan",target:"_blank",rel:"noopener noreferrer"},dp=t("td",{style:{"text-align":"center"}},"具有高级市场分析和交易策略的技术分析库。",-1),gp={style:{"text-align":"center"}},up={href:"https://github.com/claygod/transaction",target:"_blank",rel:"noopener noreferrer"},pp=t("td",{style:{"text-align":"center"}},"以多线程模式运行的嵌入式帐户嵌入式事务数据库。",-1),yp={style:{"text-align":"center"}},xp={href:"https://github.com/dannyvankooten/vat",target:"_blank",rel:"noopener noreferrer"},bp=t("td",{style:{"text-align":"center"}},"增值税号验证和欧盟增值税率。",-1),fp=t("h3",{id:"游戏开发",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#游戏开发"},[t("span",null,"游戏开发")])],-1),mp=t("p",null,[t("a",{name:"游戏开发"}),e(),t("a",{name:"游戏开发"})],-1),kp=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Gp={style:{"text-align":"center"}},vp={href:"https://github.com/azul3d/engine",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},"用Go语言编写的3D游戏引擎。",-1),Sp={style:{"text-align":"center"}},Ap={href:"https://github.com/hajimehoshi/ebiten",target:"_blank",rel:"noopener noreferrer"},wp=t("td",{style:{"text-align":"center"}},"Go中死的简单2D游戏库。",-1),Pp={style:{"text-align":"center"}},Cp={href:"https://github.com/EngoEngine/engo",target:"_blank",rel:"noopener noreferrer"},Tp=t("td",{style:{"text-align":"center"}},"Engo是用Go语言编写的开源2D游戏引擎。它遵循实体组件系统范式。",-1),Mp={style:{"text-align":"center"}},jp={href:"https://github.com/g3n/engine",target:"_blank",rel:"noopener noreferrer"},Ip=t("td",{style:{"text-align":"center"}},"Go 3D游戏引擎。",-1),Bp={style:{"text-align":"center"}},Fp={href:"https://github.com/vova616/GarageEngine",target:"_blank",rel:"noopener noreferrer"},Op=t("td",{style:{"text-align":"center"}},"用Go语言编写的2D游戏引擎，可在OpenGL上使用。",-1),Np={style:{"text-align":"center"}},Dp={href:"https://github.com/runningwild/glop",target:"_blank",rel:"noopener noreferrer"},zp=t("td",{style:{"text-align":"center"}},"Glop（权力游戏库）是一个相当简单的跨平台游戏库。",-1),Rp={style:{"text-align":"center"}},Lp={href:"https://github.com/beefsack/go-astar",target:"_blank",rel:"noopener noreferrer"},Hp=t("td",{style:{"text-align":"center"}},"A 路径查找算法的Go实现。",-1),Jp={style:{"text-align":"center"}},qp={href:"https://github.com/GlenKelley/go-collada",target:"_blank",rel:"noopener noreferrer"},Up=t("td",{style:{"text-align":"center"}},"Go包，用于Collada文件格式。",-1),Wp={style:{"text-align":"center"}},Vp={href:"https://github.com/veandco/go-sdl2",target:"_blank",rel:"noopener noreferrer"},Xp={style:{"text-align":"center"}},Kp={href:"https://www.libsdl.org/",target:"_blank",rel:"noopener noreferrer"},Qp={style:{"text-align":"center"}},Zp={href:"https://github.com/ungerik/go3d",target:"_blank",rel:"noopener noreferrer"},Yp=t("td",{style:{"text-align":"center"}},"用于Go的面向性能的2D/3D数学软件包。",-1),$p={style:{"text-align":"center"}},ty={href:"https://github.com/xtaci/gonet",target:"_blank",rel:"noopener noreferrer"},ey=t("td",{style:{"text-align":"center"}},"使用golang实现的游戏服务器框架。",-1),ny={style:{"text-align":"center"}},ry={href:"https://github.com/xiaonanln/goworld",target:"_blank",rel:"noopener noreferrer"},oy=t("td",{style:{"text-align":"center"}},"可扩展的游戏服务器引擎，具有空间实体框架和热插拔功能。",-1),ly={style:{"text-align":"center"}},sy={href:"https://github.com/name5566/leaf",target:"_blank",rel:"noopener noreferrer"},iy=t("td",{style:{"text-align":"center"}},"轻量级游戏服务器框架。",-1),ay={style:{"text-align":"center"}},cy={href:"https://github.com/lonng/nano",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},"重量轻，设备，高性能的基于golang游戏服务器架构。",-1),_y={style:{"text-align":"center"}},dy={href:"https://github.com/oakmound/oak",target:"_blank",rel:"noopener noreferrer"},gy=t("td",{style:{"text-align":"center"}},"Pure Go游戏引擎。",-1),uy={style:{"text-align":"center"}},py={href:"https://github.com/topfreegames/pitaya",target:"_blank",rel:"noopener noreferrer"},yy=t("td",{style:{"text-align":"center"}},"可扩展的游戏服务器框架，具有群集支持和通过C SDK的iOS，Android，Unity等客户端库。",-1),xy={style:{"text-align":"center"}},by={href:"https://github.com/faiface/pixel",target:"_blank",rel:"noopener noreferrer"},fy=t("td",{style:{"text-align":"center"}},"Go中的手工制作2D游戏库。",-1),my={style:{"text-align":"center"}},ky={href:"https://github.com/gen2brain/raylib-go",target:"_blank",rel:"noopener noreferrer"},Gy=t("td",{style:{"text-align":"center"}},"去绑定raylib，简单和易于使用的库，以了解电子游戏编程。",-1),vy={style:{"text-align":"center"}},Ey={href:"https://github.com/JoelOtter/termloop",target:"_blank",rel:"noopener noreferrer"},Sy=t("td",{style:{"text-align":"center"}},"Go的基于终端的游戏引擎，建立在Termbox之上。",-1),Ay=t("h3",{id:"地理位置",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#地理位置"},[t("span",null,"地理位置")])],-1),wy=t("p",null,[t("a",{name:"地理位置"}),e(),t("a",{name:"地理位置"})],-1),Py=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Cy={style:{"text-align":"center"}},Ty={href:"https://github.com/melihmucuk/geocache",target:"_blank",rel:"noopener noreferrer"},My=t("td",{style:{"text-align":"center"}},"适用于基于地理位置的应用程序的内存中缓存。",-1),jy={style:{"text-align":"center"}},Iy={href:"https://github.com/hishamkaram/geoserver",target:"_blank",rel:"noopener noreferrer"},By=t("td",{style:{"text-align":"center"}},"geoserver是Go软件包，用于通过GeoServer REST API操纵GeoServer实例。",-1),Fy={style:{"text-align":"center"}},Oy={href:"https://github.com/hishamkaram/gismanager",target:"_blank",rel:"noopener noreferrer"},Ny=t("td",{style:{"text-align":"center"}},"将 GIS数据（矢量数据）发布到PostGIS和Geoserver。",-1),Dy={style:{"text-align":"center"}},zy={href:"https://github.com/paulmach/osm",target:"_blank",rel:"noopener noreferrer"},Ry=t("td",{style:{"text-align":"center"}},"用于读取，编写和使用OpenStreetMap数据和API的库。",-1),Ly={style:{"text-align":"center"}},Hy={href:"https://github.com/maguro/pbf",target:"_blank",rel:"noopener noreferrer"},Jy=t("td",{style:{"text-align":"center"}},"OpenStreetMap PBF golang编码器/解码器。",-1),qy={style:{"text-align":"center"}},Uy={href:"https://github.com/golang/geo",target:"_blank",rel:"noopener noreferrer"},Wy=t("td",{style:{"text-align":"center"}},"Go中的S2几何库。",-1),Vy={style:{"text-align":"center"}},Xy={href:"https://github.com/tidwall/tile38",target:"_blank",rel:"noopener noreferrer"},Ky=t("td",{style:{"text-align":"center"}},"具有空间索引和实时地理围栏的地理位置数据库。",-1),Qy={style:{"text-align":"center"}},Zy={href:"https://github.com/wroge/wgs84",target:"_blank",rel:"noopener noreferrer"},Yy=t("td",{style:{"text-align":"center"}},"库坐标转换和变换（ETRS89，OSGB36，NAD83，RGF93，网络墨卡托UTM）。",-1),$y=t("h3",{id:"编译器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#编译器"},[t("span",null,"编译器")])],-1),tx=t("p",null,[t("a",{name:"编译器"}),e(),t("a",{name:"金编译器融"})],-1),ex=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),nx={style:{"text-align":"center"}},rx={href:"https://github.com/Konstantin8105/c4go",target:"_blank",rel:"noopener noreferrer"},ox=t("td",{style:{"text-align":"center"}},"将C代码转换为Go代码。",-1),lx={style:{"text-align":"center"}},sx={href:"https://github.com/Konstantin8105/f4go",target:"_blank",rel:"noopener noreferrer"},ix=t("td",{style:{"text-align":"center"}},"将FORTRAN 77代码转换为Go代码。",-1),ax={style:{"text-align":"center"}},cx={href:"https://github.com/gopherjs/gopherjs",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},"从Go到JavaScript的编译器。",-1),_x={style:{"text-align":"center"}},dx={href:"https://github.com/go-llvm/llgo",target:"_blank",rel:"noopener noreferrer"},gx=t("td",{style:{"text-align":"center"}},"Go的基于LLVM的编译器。",-1),ux={style:{"text-align":"center"}},px={href:"https://github.com/tardisgo/tardisgo",target:"_blank",rel:"noopener noreferrer"},yx=t("td",{style:{"text-align":"center"}},"Golang转换为CPP / CSharp / Java / JavaScript转译器。",-1),xx=t("h3",{id:"goroutines",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#goroutines"},[t("span",null,"Goroutines")])],-1),bx=t("p",null,[t("a",{name:"Goroutines"}),e(),t("a",{name:"Goroutines"})],-1),fx=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),mx={style:{"text-align":"center"}},kx={href:"https://github.com/panjf2000/ants",target:"_blank",rel:"noopener noreferrer"},Gx=t("td",{style:{"text-align":"center"}},"用于golang的高性能goroutine池。",-1),vx={style:{"text-align":"center"}},Ex={href:"https://github.com/borderstech/artifex",target:"_blank",rel:"noopener noreferrer"},Sx=t("td",{style:{"text-align":"center"}},"Golang使用基于工作程序的分派的简单内存中作业队列。",-1),Ax={style:{"text-align":"center"}},wx={href:"https://github.com/studiosol/async",target:"_blank",rel:"noopener noreferrer"},Px=t("td",{style:{"text-align":"center"}},"一种异步执行功能的安全方法，以防万一。",-1),Cx={style:{"text-align":"center"}},Tx={href:"https://github.com/kamilsk/breaker",target:"_blank",rel:"noopener noreferrer"},Mx=t("td",{style:{"text-align":"center"}},"使执行流程可中断的灵活机制。",-1),jx={style:{"text-align":"center"}},Ix={href:"https://github.com/marusama/cyclicbarrier",target:"_blank",rel:"noopener noreferrer"},Bx=t("td",{style:{"text-align":"center"}},"用于golang的CyclicBarrier。",-1),Fx={style:{"text-align":"center"}},Ox={href:"https://github.com/workanator/go-floc",target:"_blank",rel:"noopener noreferrer"},Nx=t("td",{style:{"text-align":"center"}},"轻松编排goroutine。",-1),Dx={style:{"text-align":"center"}},zx={href:"https://github.com/kamildrazkiewicz/go-flow",target:"_blank",rel:"noopener noreferrer"},Rx=t("td",{style:{"text-align":"center"}},"控制goroutine的执行顺序。",-1),Lx={style:{"text-align":"center"}},Hx={href:"https://github.com/nikhilsaraf/go-tools",target:"_blank",rel:"noopener noreferrer"},Jx=t("td",{style:{"text-align":"center"}},"使用带有简单API的轻量级库管理goroutine池。",-1),qx={style:{"text-align":"center"}},Ux={href:"https://github.com/subchen/go-trylock",target:"_blank",rel:"noopener noreferrer"},Wx=t("td",{style:{"text-align":"center"}},"支持Golang的读写锁的TryLock。",-1),Vx={style:{"text-align":"center"}},Xx={href:"https://github.com/pieterclaerhout/go-waitgroup",target:"_blank",rel:"noopener noreferrer"},Kx=t("td",{style:{"text-align":"center"}},"sync.WaitGroup与错误处理和并发控制类似。",-1),Qx={style:{"text-align":"center"}},Zx={href:"https://github.com/loveleshsharma/gohive",target:"_blank",rel:"noopener noreferrer"},Yx=t("td",{style:{"text-align":"center"}},"Go的高性能和易于使用的Goroutine池。",-1),$x={style:{"text-align":"center"}},tb={href:"https://github.com/vardius/gollback",target:"_blank",rel:"noopener noreferrer"},eb=t("td",{style:{"text-align":"center"}},"异步简单函数实用程序，用于管理闭包和回调的执行。",-1),nb={style:{"text-align":"center"}},rb={href:"https://github.com/themester/GoSlaves",target:"_blank",rel:"noopener noreferrer"},ob=t("td",{style:{"text-align":"center"}},"简单和异步Goroutine池库。",-1),lb={style:{"text-align":"center"}},sb={href:"https://github.com/benmanns/goworker",target:"_blank",rel:"noopener noreferrer"},ib=t("td",{style:{"text-align":"center"}},"goworker是基于Go的后台工作者。",-1),ab={style:{"text-align":"center"}},cb={href:"https://github.com/xxjwxc/gowp",target:"_blank",rel:"noopener noreferrer"},hb=t("td",{style:{"text-align":"center"}},"gowp是并发限制goroutine池。",-1),_b={style:{"text-align":"center"}},db={href:"https://github.com/Sherifabdlnaby/gpool",target:"_blank",rel:"noopener noreferrer"},gb=t("td",{style:{"text-align":"center"}},"管理可调整大小的上下文感知goroutine池以绑定并发。",-1),ub={style:{"text-align":"center"}},pb={href:"https://github.com/ivpusic/grpool",target:"_blank",rel:"noopener noreferrer"},yb=t("td",{style:{"text-align":"center"}},"轻巧的Goroutine池。",-1),xb={style:{"text-align":"center"}},bb={href:"https://github.com/AaronJan/Hunch",target:"_blank",rel:"noopener noreferrer"},fb=t("td",{style:{"text-align":"center"}},"预感提供功能，如：All，First，Retry，Waterfall等等，这使得异步流控制更加直观。",-1),mb={style:{"text-align":"center"}},kb={href:"https://cirello.io/oversight",target:"_blank",rel:"noopener noreferrer"},Gb=t("td",{style:{"text-align":"center"}},"监督是Erlang监督树的完整实现。",-1),vb={style:{"text-align":"center"}},Eb={href:"https://github.com/rafaeljesus/parallel-fn",target:"_blank",rel:"noopener noreferrer"},Sb=t("td",{style:{"text-align":"center"}},"并行运行功能。",-1),Ab={style:{"text-align":"center"}},wb={href:"https://github.com/go-playground/pool",target:"_blank",rel:"noopener noreferrer"},Pb=t("td",{style:{"text-align":"center"}},"有限的消费者goroutine池或无限制的goroutine池，以便更轻松地处理和取消goroutine。",-1),Cb={style:{"text-align":"center"}},Tb={href:"https://github.com/AnikHasibul/queue",target:"_blank",rel:"noopener noreferrer"},Mb=t("td",{style:{"text-align":"center"}},"为您提供sync.WaitGroup类似的队列组可访问性。帮助您节流和限制goroutine，等待所有goroutine结束等等。",-1),jb={style:{"text-align":"center"}},Ib={href:"https://github.com/x-mod/routine",target:"_blank",rel:"noopener noreferrer"},Bb=t("td",{style:{"text-align":"center"}},"具有上下文和支持的例程控制：Main，Go，Pool和一些有用的Executors。",-1),Fb={style:{"text-align":"center"}},Ob={href:"https://github.com/kamilsk/semaphore",target:"_blank",rel:"noopener noreferrer"},Nb=t("td",{style:{"text-align":"center"}},"基于通道和上下文的具有锁定/解锁操作超时的信号量模式实现。",-1),Db={style:{"text-align":"center"}},zb={href:"https://github.com/marusama/semaphore",target:"_blank",rel:"noopener noreferrer"},Rb=t("td",{style:{"text-align":"center"}},"基于CAS的快速可调整大小的信号量实现（比基于通道的信号量实现更快）。",-1),Lb={style:{"text-align":"center"}},Hb={href:"https://github.com/ssgreg/stl",target:"_blank",rel:"noopener noreferrer"},Jb=t("td",{style:{"text-align":"center"}},"基于软件交易内存（STM）并发控制机制的软件交易锁。",-1),qb={style:{"text-align":"center"}},Ub={href:"https://github.com/shettyh/threadpool",target:"_blank",rel:"noopener noreferrer"},Wb=t("td",{style:{"text-align":"center"}},"Golang线程池实现。",-1),Vb={style:{"text-align":"center"}},Xb={href:"https://github.com/Jeffail/tunny",target:"_blank",rel:"noopener noreferrer"},Kb=t("td",{style:{"text-align":"center"}},"线程池golang。",-1),Qb={style:{"text-align":"center"}},Zb={href:"https://github.com/vardius/worker-pool",target:"_blank",rel:"noopener noreferrer"},Yb=t("td",{style:{"text-align":"center"}},"goworker是一个简单的Go异步工作池。",-1),$b={style:{"text-align":"center"}},tf={href:"https://github.com/gammazero/workerpool",target:"_blank",rel:"noopener noreferrer"},ef=t("td",{style:{"text-align":"center"}},"Goroutine池，它限制了任务执行的并发性，而不是排队的任务数。",-1),nf=t("h3",{id:"图形界面",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#图形界面"},[t("span",null,"图形界面")])],-1),rf=t("p",null,[t("a",{name:"图形界面"}),e(),t("a",{name:"图形界面"})],-1),of=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),lf={style:{"text-align":"center"}},sf={href:"https://github.com/murlokswarm/app",target:"_blank",rel:"noopener noreferrer"},af=t("td",{style:{"text-align":"center"}},"打包以使用GO，HTML和CSS创建应用的程序。支持：MacOS，Windows正在开发中。",-1),cf={style:{"text-align":"center"}},hf={href:"https://github.com/fyne-io/fyne",target:"_blank",rel:"noopener noreferrer"},_f=t("td",{style:{"text-align":"center"}},"为Go设计的跨平台本机GUI，使用EFL呈现。支持：Linux，macOS，Windows。",-1),df={style:{"text-align":"center"}},gf={href:"https://github.com/asticode/go-astilectron",target:"_blank",rel:"noopener noreferrer"},uf=t("td",{style:{"text-align":"center"}},"使用GO和HTML / JS / CSS（由Electron支持）构建跨平台GUI应用。",-1),pf={style:{"text-align":"center"}},yf={href:"http://mattn.github.io/go-gtk/",target:"_blank",rel:"noopener noreferrer"},xf=t("td",{style:{"text-align":"center"}},"GTK的绑定。",-1),bf={style:{"text-align":"center"}},ff={href:"https://github.com/sciter-sdk/go-sciter",target:"_blank",rel:"noopener noreferrer"},mf=t("td",{style:{"text-align":"center"}},"Go绑定：用于现代桌面UI开发的可嵌入HTML / CSS / script引擎。跨平台。",-1),kf={style:{"text-align":"center"}},Gf={href:"https://github.com/gotk3/gotk3",target:"_blank",rel:"noopener noreferrer"},vf=t("td",{style:{"text-align":"center"}},"GTK3的绑定。",-1),Ef={style:{"text-align":"center"}},Sf={href:"https://github.com/dtylman/gowd",target:"_blank",rel:"noopener noreferrer"},Af=t("td",{style:{"text-align":"center"}},"使用GO，HTML，CSS和NW.js进行快速简单的桌面UI开发。跨平台。",-1),wf={style:{"text-align":"center"}},Pf={href:"https://github.com/therecipe/qt",target:"_blank",rel:"noopener noreferrer"},Cf=t("td",{style:{"text-align":"center"}},"Go的Qt绑定（支持Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi）。",-1),Tf={style:{"text-align":"center"}},Mf={href:"https://github.com/andlabs/ui",target:"_blank",rel:"noopener noreferrer"},jf=t("td",{style:{"text-align":"center"}},"Go的平台本地GUI库。跨平台。",-1),If={style:{"text-align":"center"}},Bf={href:"https://wails.app/",target:"_blank",rel:"noopener noreferrer"},Ff=t("td",{style:{"text-align":"center"}},"使用内置OS HTML渲染器的HTML UI的Mac，Windows，Linux桌面应用程序。",-1),Of={style:{"text-align":"center"}},Nf={href:"https://github.com/lxn/walk",target:"_blank",rel:"noopener noreferrer"},Df=t("td",{style:{"text-align":"center"}},"Go的Windows应用程序库工具包。",-1),zf={style:{"text-align":"center"}},Rf={href:"https://github.com/zserge/webview",target:"_blank",rel:"noopener noreferrer"},Lf=t("td",{style:{"text-align":"center"}},"具有简单双向JavaScript绑定的跨平台Webview窗口（Windows / macOS / Linux）。",-1),Hf={style:{"text-align":"center"}},Jf={href:"https://github.com/dawidd6/go-appindicator",target:"_blank",rel:"noopener noreferrer"},qf=t("td",{style:{"text-align":"center"}},"libappindicator3 C库的Go绑定。",-1),Uf={style:{"text-align":"center"}},Wf={href:"https://github.com/deckarep/gosx-notifier",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},"Go的OSX桌面通知库。",-1),Xf={style:{"text-align":"center"}},Kf={href:"https://github.com/prashantgupta24/activity-tracker",target:"_blank",rel:"noopener noreferrer"},Qf=t("td",{style:{"text-align":"center"}},"OSX库，用于通知计算机上的任何（可插入）活动。",-1),Zf={style:{"text-align":"center"}},Yf={href:"https://github.com/prashantgupta24/mac-sleep-notifier",target:"_blank",rel:"noopener noreferrer"},$f=t("td",{style:{"text-align":"center"}},"golang中的OSX睡眠/唤醒通知。",-1),tm={style:{"text-align":"center"}},em={href:"https://github.com/go-vgo/robotgo",target:"_blank",rel:"noopener noreferrer"},nm=t("td",{style:{"text-align":"center"}},"Go本机跨平台GUI系统自动化。控制鼠标，键盘等。",-1),rm={style:{"text-align":"center"}},om={href:"https://github.com/getlantern/systray",target:"_blank",rel:"noopener noreferrer"},lm=t("td",{style:{"text-align":"center"}},"跨平台的Go库，用于在通知区域中放置图标和菜单。",-1),sm={style:{"text-align":"center"}},im={href:"https://github.com/shurcooL/trayhost",target:"_blank",rel:"noopener noreferrer"},am=t("td",{style:{"text-align":"center"}},"跨平台的Go库，用于在主机操作系统的任务栏中放置一个图标。",-1),cm=t("h3",{id:"图片",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#图片"},[t("span",null,"图片")])],-1),hm=t("p",null,[t("a",{name:"图片"}),e(),t("a",{name:"图片"})],-1),_m=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),dm={style:{"text-align":"center"}},gm={href:"https://github.com/anthonynsimon/bild",target:"_blank",rel:"noopener noreferrer"},um=t("td",{style:{"text-align":"center"}},"纯Go中图像处理算法的集合。",-1),pm={style:{"text-align":"center"}},ym={href:"https://github.com/h2non/bimg",target:"_blank",rel:"noopener noreferrer"},xm=t("td",{style:{"text-align":"center"}},"使用libvips进行快速有效的图像处理的小包装。",-1),bm={style:{"text-align":"center"}},fm={href:"https://github.com/aofei/cameron",target:"_blank",rel:"noopener noreferrer"},mm=t("td",{style:{"text-align":"center"}},"Go的头像生成器。",-1),km={style:{"text-align":"center"}},Gm={href:"https://github.com/tdewolff/canvas",target:"_blank",rel:"noopener noreferrer"},vm=t("td",{style:{"text-align":"center"}},"将矢量图形转换为PDF，SVG或光栅图像。",-1),Em={style:{"text-align":"center"}},Sm={href:"https://github.com/gojek/darkroom",target:"_blank",rel:"noopener noreferrer"},Am=t("td",{style:{"text-align":"center"}},"具有可变存储后端的图像代理和侧重于速度和弹性的图像处理引擎。",-1),wm={style:{"text-align":"center"}},Pm={href:"https://github.com/pravj/geopattern",target:"_blank",rel:"noopener noreferrer"},Cm=t("td",{style:{"text-align":"center"}},"从字符串创建漂亮的生成图像图案。",-1),Tm={style:{"text-align":"center"}},Mm={href:"https://github.com/fogleman/gg",target:"_blank",rel:"noopener noreferrer"},jm=t("td",{style:{"text-align":"center"}},"纯Go中的2D渲染。",-1),Im={style:{"text-align":"center"}},Bm={href:"https://github.com/disintegration/gift",target:"_blank",rel:"noopener noreferrer"},Fm=t("td",{style:{"text-align":"center"}},"图像处理过滤器的包装。",-1),Om={style:{"text-align":"center"}},Nm={href:"https://github.com/qmuntal/gltf",target:"_blank",rel:"noopener noreferrer"},Dm=t("td",{style:{"text-align":"center"}},"高效，强大的glTF 2.0读取器，写入器和验证器。",-1),zm={style:{"text-align":"center"}},Rm={href:"https://github.com/ungerik/go-cairo",target:"_blank",rel:"noopener noreferrer"},Lm=t("td",{style:{"text-align":"center"}},"用于cairo图形库的绑定。",-1),Hm={style:{"text-align":"center"}},Jm={href:"https://github.com/bolknote/go-gd",target:"_blank",rel:"noopener noreferrer"},qm=t("td",{style:{"text-align":"center"}},"GD库的Go绑定。",-1),Um={style:{"text-align":"center"}},Wm={href:"https://github.com/koyachi/go-nude",target:"_blank",rel:"noopener noreferrer"},Vm=t("td",{style:{"text-align":"center"}},"Go的裸露检测。",-1),Xm={style:{"text-align":"center"}},Km={href:"https://github.com/lazywei/go-opencv",target:"_blank",rel:"noopener noreferrer"},Qm=t("td",{style:{"text-align":"center"}},"用于OpenCV的绑定。",-1),Zm={style:{"text-align":"center"}},Ym={href:"https://github.com/jyotiska/go-webcolors",target:"_blank",rel:"noopener noreferrer"},$m=t("td",{style:{"text-align":"center"}},"webcolors库的端口，从Python到Go。",-1),tk={style:{"text-align":"center"}},ek={href:"https://github.com/hybridgroup/gocv",target:"_blank",rel:"noopener noreferrer"},nk=t("td",{style:{"text-align":"center"}},"使用OpenCV 3.3+进行计算机视觉的Go软件包。",-1),rk={style:{"text-align":"center"}},ok={href:"https://github.com/corona10/goimagehash",target:"_blank",rel:"noopener noreferrer"},lk=t("td",{style:{"text-align":"center"}},"Go感知图像哈希包。",-1),sk={style:{"text-align":"center"}},ik={href:"https://github.com/corona10/goimghdr",target:"_blank",rel:"noopener noreferrer"},ak=t("td",{style:{"text-align":"center"}},"imghdr模块确定Go文件中包含的图像类型。",-1),ck={style:{"text-align":"center"}},hk={href:"https://github.com/o1egl/govatar",target:"_blank",rel:"noopener noreferrer"},_k=t("td",{style:{"text-align":"center"}},"用于生成有趣头像的库和CMD工具。",-1),dk={style:{"text-align":"center"}},gk={href:"https://github.com/qeesung/image2ascii",target:"_blank",rel:"noopener noreferrer"},uk=t("td",{style:{"text-align":"center"}},"将图像转换为ASCII。",-1),pk={style:{"text-align":"center"}},yk={href:"https://github.com/gographics/imagick",target:"_blank",rel:"noopener noreferrer"},xk=t("td",{style:{"text-align":"center"}},"绑定到ImageMagick的MagickWand C API。",-1),bk={style:{"text-align":"center"}},fk={href:"https://github.com/h2non/imaginary",target:"_blank",rel:"noopener noreferrer"},mk=t("td",{style:{"text-align":"center"}},"用于图像大小调整的快速，简单的HTTP微服务。",-1),kk={style:{"text-align":"center"}},Gk={href:"https://github.com/disintegration/imaging",target:"_blank",rel:"noopener noreferrer"},vk=t("td",{style:{"text-align":"center"}},"简单的Go图像处理包。",-1),Ek={style:{"text-align":"center"}},Sk={href:"https://github.com/hawx/img",target:"_blank",rel:"noopener noreferrer"},Ak=t("td",{style:{"text-align":"center"}},"选择图像处理工具。",-1),wk={style:{"text-align":"center"}},Pk={href:"https://github.com/fogleman/ln",target:"_blank",rel:"noopener noreferrer"},Ck=t("td",{style:{"text-align":"center"}},"Go中的3D线条艺术渲染。",-1),Tk={style:{"text-align":"center"}},Mk={href:"https://github.com/noelyahan/mergi",target:"_blank",rel:"noopener noreferrer"},jk=t("td",{style:{"text-align":"center"}},"用于图像处理（合并，裁切，调整大小，水印，动画）的Tool＆Go库。",-1),Ik={style:{"text-align":"center"}},Bk={href:"https://github.com/aldor007/mort",target:"_blank",rel:"noopener noreferrer"},Fk=t("td",{style:{"text-align":"center"}},"用Go编写的存储和图像处理服务器。",-1),Ok={style:{"text-align":"center"}},Nk={href:"https://github.com/donatj/mpo",target:"_blank",rel:"noopener noreferrer"},Dk=t("td",{style:{"text-align":"center"}},"用于MPO 3D照片的解码器和转换工具。",-1),zk={style:{"text-align":"center"}},Rk={href:"https://github.com/thoas/picfit",target:"_blank",rel:"noopener noreferrer"},Lk=t("td",{style:{"text-align":"center"}},"用Go编写的图像大小调整服务器。",-1),Hk={style:{"text-align":"center"}},Jk={href:"https://github.com/fogleman/pt",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},"用Go语言编写的路径跟踪引擎。",-1),Uk={style:{"text-align":"center"}},Wk={href:"https://github.com/nfnt/resize",target:"_blank",rel:"noopener noreferrer"},Vk=t("td",{style:{"text-align":"center"}},"使用常见的插值方法为Go 调整图像大小。",-1),Xk={style:{"text-align":"center"}},Kk={href:"https://github.com/bamiaux/rez",target:"_blank",rel:"noopener noreferrer"},Qk=t("td",{style:{"text-align":"center"}},"在纯Go和SIMD中调整图像大小。",-1),Zk={style:{"text-align":"center"}},Yk={href:"https://github.com/muesli/smartcrop",target:"_blank",rel:"noopener noreferrer"},$k=t("td",{style:{"text-align":"center"}},"查找适合任何图像和尺寸的优质作物。",-1),t2={style:{"text-align":"center"}},e2={href:"https://github.com/auyer/steganography",target:"_blank",rel:"noopener noreferrer"},n2=t("td",{style:{"text-align":"center"}},"用于LSB隐写术的Pure Go库。",-1),r2={style:{"text-align":"center"}},o2={href:"https://github.com/DimitarPetrov/stegify",target:"_blank",rel:"noopener noreferrer"},l2=t("td",{style:{"text-align":"center"}},"用于LSB隐写术的Go工具，能够隐藏图像中的任何文件。",-1),s2={style:{"text-align":"center"}},i2={href:"https://github.com/ajstarks/svgo",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},"用于SVG生成的Go语言库。",-1),c2={style:{"text-align":"center"}},h2={href:"https://github.com/ftrvxmtrx/tga",target:"_blank",rel:"noopener noreferrer"},_2=t("td",{style:{"text-align":"center"}},"软件包tga是TARGA图像格式的解码器/编码器。",-1),d2=t("h3",{id:"物联网",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#物联网"},[t("span",null,"物联网")])],-1),g2=t("p",null,[t("a",{name:"物联网"}),e(),t("a",{name:"物联网"})],-1),u2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),p2={style:{"text-align":"center"}},y2={href:"https://github.com/connectordb/connectordb",target:"_blank",rel:"noopener noreferrer"},x2=t("td",{style:{"text-align":"center"}},"量化自我和物联网的开源平台。",-1),b2={style:{"text-align":"center"}},f2={href:"https://github.com/goiot/devices",target:"_blank",rel:"noopener noreferrer"},m2=t("td",{style:{"text-align":"center"}},"IoT设备库套件，针对x / exp / io进行实验。",-1),k2={style:{"text-align":"center"}},G2={href:"https://github.com/xcodersun/eywa",target:"_blank",rel:"noopener noreferrer"},v2=t("td",{style:{"text-align":"center"}},"Project Eywa本质上是一个连接管理器，用于跟踪连接的设备。",-1),E2={style:{"text-align":"center"}},S2={href:"https://github.com/tibcosoftware/flogo",target:"_blank",rel:"noopener noreferrer"},A2=t("td",{style:{"text-align":"center"}},"Project Flogo是一个用于IoT Edge应用和集成的开源框架。",-1),w2={style:{"text-align":"center"}},P2={href:"https://github.com/paypal/gatt",target:"_blank",rel:"noopener noreferrer"},C2=t("td",{style:{"text-align":"center"}},"盖特是一个围棋包构建低功耗蓝牙外设。",-1),T2={style:{"text-align":"center"}},M2={href:"https://github.com/hybridgroup/gobot/",target:"_blank",rel:"noopener noreferrer"},j2=t("td",{style:{"text-align":"center"}},"Gobot是机器人技术，物理计算和物联网的框架。",-1),I2={style:{"text-align":"center"}},B2={href:"https://github.com/amimof/huego",target:"_blank",rel:"noopener noreferrer"},F2=t("td",{style:{"text-align":"center"}},"适用于Go的飞利浦Hue扩展客户端库。",-1),O2={style:{"text-align":"center"}},N2={href:"https://github.com/vaelen/iot/",target:"_blank",rel:"noopener noreferrer"},D2=t("td",{style:{"text-align":"center"}},"IoT是用于实现Google IoT Core设备的简单框架。",-1),z2={style:{"text-align":"center"}},R2={href:"https://github.com/Mainflux/mainflux",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},"工业物联网消息和设备管理服务器。",-1),H2={style:{"text-align":"center"}},J2={href:"https://periph.io/",target:"_blank",rel:"noopener noreferrer"},q2=t("td",{style:{"text-align":"center"}},"外设I / O与低级别的主板设备接口。",-1),U2={style:{"text-align":"center"}},W2={href:"https://github.com/sensorbee/sensorbee",target:"_blank",rel:"noopener noreferrer"},V2=t("td",{style:{"text-align":"center"}},"用于物联网的轻量级流处理引擎。",-1),X2=t("h3",{id:"json格式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#json格式"},[t("span",null,"JSON格式")])],-1),K2=t("p",null,[t("a",{name:"JSON格式"}),e(),t("a",{name:"JSON格式"})],-1),Q2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Z2={style:{"text-align":"center"}},Y2={href:"https://github.com/spyzhov/ajson",target:"_blank",rel:"noopener noreferrer"},$2=t("td",{style:{"text-align":"center"}},"具有JSONPath支持的golang的抽象JSON。",-1),t3={style:{"text-align":"center"}},e3={href:"https://github.com/skanehira/gjo",target:"_blank",rel:"noopener noreferrer"},n3=t("td",{style:{"text-align":"center"}},"用于创建JSON对象的小型实用程序。",-1),r3={style:{"text-align":"center"}},o3={href:"https://github.com/tidwall/gjson",target:"_blank",rel:"noopener noreferrer"},l3=t("td",{style:{"text-align":"center"}},"使用一行代码获取JSON值。",-1),s3={style:{"text-align":"center"}},i3={href:"https://github.com/ddymko/go-jsonerror",target:"_blank",rel:"noopener noreferrer"},a3=t("td",{style:{"text-align":"center"}},"Go-JsonError可让我们轻松创建遵循JsonApi规范的json响应错误。",-1),c3={style:{"text-align":"center"}},h3={href:"https://github.com/nicklaw5/go-respond",target:"_blank",rel:"noopener noreferrer"},_3=t("td",{style:{"text-align":"center"}},"Go包，用于处理常见的HTTP JSON响应。",-1),d3={style:{"text-align":"center"}},g3={href:"https://github.com/elgs/gojq",target:"_blank",rel:"noopener noreferrer"},u3=t("td",{style:{"text-align":"center"}},"Golang中的 JSON查询。",-1),p3={style:{"text-align":"center"}},y3={href:"https://github.com/ChimeraCoder/gojson",target:"_blank",rel:"noopener noreferrer"},x3=t("td",{style:{"text-align":"center"}},"从示例JSON自动生成Go（golang）结构定义。",-1),b3={style:{"text-align":"center"}},f3={href:"https://github.com/yazgazan/jaydiff",target:"_blank",rel:"noopener noreferrer"},m3=t("td",{style:{"text-align":"center"}},"用Go编写的JSON diff实用程序。",-1),k3={style:{"text-align":"center"}},G3={href:"https://github.com/wI2L/jettison",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},"用于Go的高性能，无反射JSON编码器。",-1),E3={style:{"text-align":"center"}},S3={href:"https://mholt.github.io/json-to-go/",target:"_blank",rel:"noopener noreferrer"},A3=t("td",{style:{"text-align":"center"}},"将JSON转换为Go结构。",-1),w3={style:{"text-align":"center"}},P3={href:"https://github.com/m-zajac/json2go",target:"_blank",rel:"noopener noreferrer"},C3=t("td",{style:{"text-align":"center"}},"高级JSON到Go结构转换。提供可以解析多个JSON文档并创建适合所有JSON的结构的包。",-1),T3={style:{"text-align":"center"}},M3={href:"https://github.com/AmuzaTkts/jsonapi-errors",target:"_blank",rel:"noopener noreferrer"},j3=t("td",{style:{"text-align":"center"}},"根据JSON API错误参考进行绑定。",-1),I3={style:{"text-align":"center"}},B3={href:"https://github.com/miolini/jsonf",target:"_blank",rel:"noopener noreferrer"},F3=t("td",{style:{"text-align":"center"}},"突出显示格式和获取JSON的结构查询的控制台工具。",-1),O3={style:{"text-align":"center"}},N3={href:"https://github.com/ricardolonga/jsongo",target:"_blank",rel:"noopener noreferrer"},D3=t("td",{style:{"text-align":"center"}},"Fluent API，可以更轻松地创建Json对象。",-1),z3={style:{"text-align":"center"}},R3={href:"https://github.com/RichardKnop/jsonhal",target:"_blank",rel:"noopener noreferrer"},L3=t("td",{style:{"text-align":"center"}},"简单的Go包，用于将自定义结构编组为HAL兼容的JSON响应。",-1),H3={style:{"text-align":"center"}},J3={href:"https://github.com/Qntfy/kazaam",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},"用于JSON文档的任意转换的API。",-1),U3={style:{"text-align":"center"}},W3={href:"https://github.com/sanbornm/mp",target:"_blank",rel:"noopener noreferrer"},V3=t("td",{style:{"text-align":"center"}},"简单的cli电子邮件解析器。当前，它使用标准输入并输出JSON。",-1),X3=t("h3",{id:"机器学习",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#机器学习"},[t("span",null,"机器学习")])],-1),K3=t("p",null,[t("a",{name:"机器学习"}),e(),t("a",{name:"机器学习"})],-1),Q3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Z3={style:{"text-align":"center"}},Y3={href:"https://github.com/jbrukh/bayesian",target:"_blank",rel:"noopener noreferrer"},$3=t("td",{style:{"text-align":"center"}},"贝叶斯分类为Golang天真。",-1),t5={style:{"text-align":"center"}},e5={href:"https://github.com/ryanbressler/CloudForest",target:"_blank",rel:"noopener noreferrer"},n5=t("td",{style:{"text-align":"center"}},"快速，灵活，多线程的决策树集合，用于纯Go中的机器学习。",-1),r5={style:{"text-align":"center"}},o5={href:"https://github.com/MaxHalford/eaopt",target:"_blank",rel:"noopener noreferrer"},l5=t("td",{style:{"text-align":"center"}},"进化优化库。",-1),s5={style:{"text-align":"center"}},i5={href:"https://github.com/khezen/evoli",target:"_blank",rel:"noopener noreferrer"},a5=t("td",{style:{"text-align":"center"}},"遗传算法和粒子群优化库。",-1),c5={style:{"text-align":"center"}},h5={href:"https://github.com/Fontinalis/fonet",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},"用Go编写的深度神经网络库。",-1),d5={style:{"text-align":"center"}},g5={href:"https://github.com/e-XpertSolutions/go-cluster",target:"_blank",rel:"noopener noreferrer"},u5=t("td",{style:{"text-align":"center"}},"k模式和k-原型聚类算法的Go实现。",-1),p5={style:{"text-align":"center"}},y5={href:"https://github.com/patrikeh/go-deep",target:"_blank",rel:"noopener noreferrer"},x5=t("td",{style:{"text-align":"center"}},"Go中功能丰富的神经网络库",-1),b5={style:{"text-align":"center"}},f5={href:"https://github.com/white-pony/go-fann",target:"_blank",rel:"noopener noreferrer"},m5=t("td",{style:{"text-align":"center"}},"快速人工神经网络（FANN）库的Go绑定。",-1),k5={style:{"text-align":"center"}},G5={href:"https://github.com/thoj/go-galib",target:"_blank",rel:"noopener noreferrer"},v5=t("td",{style:{"text-align":"center"}},"用Go / golang编写的遗传算法库。",-1),E5={style:{"text-align":"center"}},S5={href:"https://github.com/daviddengcn/go-pr",target:"_blank",rel:"noopener noreferrer"},A5=t("td",{style:{"text-align":"center"}},"Go lang中的模式识别包。",-1),w5={style:{"text-align":"center"}},P5={href:"https://github.com/goml/gobrain",target:"_blank",rel:"noopener noreferrer"},C5=t("td",{style:{"text-align":"center"}},"用go语言编写的神经网络",-1),T5={style:{"text-align":"center"}},M5={href:"https://github.com/e-dard/godist",target:"_blank",rel:"noopener noreferrer"},j5=t("td",{style:{"text-align":"center"}},"各种概率分布及相关方法。",-1),I5={style:{"text-align":"center"}},B5={href:"https://github.com/tomcraven/goga",target:"_blank",rel:"noopener noreferrer"},F5=t("td",{style:{"text-align":"center"}},"Go的遗传算法库。",-1),O5={style:{"text-align":"center"}},N5={href:"https://github.com/sjwhitworth/golearn",target:"_blank",rel:"noopener noreferrer"},D5=t("td",{style:{"text-align":"center"}},"用于Go的通用机器学习库。",-1),z5={style:{"text-align":"center"}},R5={href:"https://github.com/danieldk/golinear",target:"_blank",rel:"noopener noreferrer"},L5=t("td",{style:{"text-align":"center"}},"Go的liblinear绑定。",-1),H5={style:{"text-align":"center"}},J5={href:"https://github.com/surenderthakran/gomind",target:"_blank",rel:"noopener noreferrer"},q5=t("td",{style:{"text-align":"center"}},"Go中的简单神经网络库。",-1),U5={style:{"text-align":"center"}},W5={href:"https://github.com/cdipaolo/goml",target:"_blank",rel:"noopener noreferrer"},V5=t("td",{style:{"text-align":"center"}},"Go中的在线机器学习。",-1),X5={style:{"text-align":"center"}},K5={href:"https://github.com/c-bata/goptuna",target:"_blank",rel:"noopener noreferrer"},Q5=t("td",{style:{"text-align":"center"}},"用于Go语言编写的黑盒函数的贝叶斯优化框架。一切都会被优化。",-1),Z5={style:{"text-align":"center"}},Y5={href:"https://github.com/timkaye11/goRecommend",target:"_blank",rel:"noopener noreferrer"},$5=t("td",{style:{"text-align":"center"}},"用Go编写的推荐算法库。",-1),t8={style:{"text-align":"center"}},e8={href:"https://github.com/gorgonia/gorgonia",target:"_blank",rel:"noopener noreferrer"},n8=t("td",{style:{"text-align":"center"}},"基于图形的计算库，例如Theano for Go，它提供了用于构建各种机器学习和神经网络算法的原语。",-1),r8={style:{"text-align":"center"}},o8={href:"https://github.com/zhenghaoz/gorse",target:"_blank",rel:"noopener noreferrer"},l8=t("td",{style:{"text-align":"center"}},"基于Go编写的协作过滤的离线推荐系统后端。",-1),s8={style:{"text-align":"center"}},i8={href:"https://github.com/asafschers/goscore",target:"_blank",rel:"noopener noreferrer"},a8=t("td",{style:{"text-align":"center"}},"用于PMML的Go Scoring API。",-1),c8={style:{"text-align":"center"}},h8={href:"https://github.com/otiai10/gosseract",target:"_blank",rel:"noopener noreferrer"},_8=t("td",{style:{"text-align":"center"}},"使用Tesseract C ++库的OCR（光学字符识别）软件包。",-1),d8={style:{"text-align":"center"}},g8={href:"https://github.com/datastream/libsvm",target:"_blank",rel:"noopener noreferrer"},u8=t("td",{style:{"text-align":"center"}},"基于LIBSVM 3.14 libsvm的golang版本衍生作品。",-1),p8={style:{"text-align":"center"}},y8={href:"https://github.com/jinyeom/neat",target:"_blank",rel:"noopener noreferrer"},x8=t("td",{style:{"text-align":"center"}},"用于增强拓扑神经演化（NEAT）的即插即用，并行Go框架。",-1),b8={style:{"text-align":"center"}},f8={href:"https://github.com/schuyler/neural-go",target:"_blank",rel:"noopener noreferrer"},m8=t("td",{style:{"text-align":"center"}},"go-在Go中实现的多层感知器网络，通过反向传播进行训练。",-1),k8={style:{"text-align":"center"}},G8={href:"https://github.com/otiai10/ocrserver",target:"_blank",rel:"noopener noreferrer"},v8=t("td",{style:{"text-align":"center"}},"一个简单的OCR API服务器，非常容易被Docker和Heroku部署。",-1),E8={style:{"text-align":"center"}},S8={href:"https://github.com/owulveryck/onnx-go",target:"_blank",rel:"noopener noreferrer"},A8=t("td",{style:{"text-align":"center"}},"转到开放神经网络交换（ONNX）的接口。",-1),w8={style:{"text-align":"center"}},P8={href:"https://github.com/ThePaw/probab",target:"_blank",rel:"noopener noreferrer"},C8=t("td",{style:{"text-align":"center"}},"概率分布函数。贝叶斯推断。用纯Go语言编写。",-1),T8={style:{"text-align":"center"}},M8={href:"https://github.com/muesli/regommend",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},"建议和协作过滤引擎。",-1),I8={style:{"text-align":"center"}},B8={href:"https://github.com/eaigner/shield",target:"_blank",rel:"noopener noreferrer"},F8=t("td",{style:{"text-align":"center"}},"贝叶斯文本分类器，具有灵活的标记器和Go的存储后端。",-1),O8={style:{"text-align":"center"}},N8={href:"https://github.com/galeone/tfgo",target:"_blank",rel:"noopener noreferrer"},D8=t("td",{style:{"text-align":"center"}},"易于使用的Tensorflow绑定：简化了官方Tensorflow Go绑定的使用。在Go中定义计算图，加载并执行经过Python训练的模型。",-1),z8={style:{"text-align":"center"}},R8={href:"https://github.com/Xamber/Varis",target:"_blank",rel:"noopener noreferrer"},L8=t("td",{style:{"text-align":"center"}},"Golang神经网络。",-1),H8=t("h3",{id:"金融-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#金融-1"},[t("span",null,"金融")])],-1),J8=t("p",null,[t("a",{name:"微软办公软件"}),e(),t("a",{name:"微软办公软件"})],-1),q8=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),U8={style:{"text-align":"center"}},W8={href:"https://github.com/unidoc/unioffice",target:"_blank",rel:"noopener noreferrer"},V8=t("td",{style:{"text-align":"center"}},"Pure Go库，用于创建和处理Office Word（.docx），Excel（.xlsx）和Powerpoint（.pptx）文档。",-1),X8={style:{"text-align":"center"}},K8={href:"https://github.com/360EntSecGroup-Skylar/excelize",target:"_blank",rel:"noopener noreferrer"},Q8=t("td",{style:{"text-align":"center"}},"Golang库用于读取和写入Microsoft Excel™（XLSX）文件。",-1),Z8={style:{"text-align":"center"}},Y8={href:"https://github.com/szyhf/go-excel",target:"_blank",rel:"noopener noreferrer"},$8=t("td",{style:{"text-align":"center"}},"一个简单而轻便的阅读器，可以将类似于related-db的excel读取为表格。",-1),t4={style:{"text-align":"center"}},e4={href:"https://github.com/fterrag/goxlsxwriter",target:"_blank",rel:"noopener noreferrer"},n4=t("td",{style:{"text-align":"center"}},"libxlsxwriter的Golang绑定，用于编写XLSX（Microsoft Excel）文件。",-1),r4={style:{"text-align":"center"}},o4={href:"https://github.com/tealeg/xlsx",target:"_blank",rel:"noopener noreferrer"},l4=t("td",{style:{"text-align":"center"}},"用于简化在Go程序中读取Microsoft Excel最新版本使用的XML格式的库。",-1),s4={style:{"text-align":"center"}},i4={href:"https://github.com/plandem/xlsx",target:"_blank",rel:"noopener noreferrer"},a4=t("td",{style:{"text-align":"center"}},"在Go程序中快速/安全地读取/更新您现有的Microsoft Excel文件的方法。",-1),c4=t("h3",{id:"自然语言处理",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#自然语言处理"},[t("span",null,"自然语言处理")])],-1),h4=t("p",null,[t("a",{name:"自然语言处理"}),e(),t("a",{name:"自然语言处理"})],-1),_4=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),d4={style:{"text-align":"center"}},g4={href:"https://github.com/rylans/getlang",target:"_blank",rel:"noopener noreferrer"},u4=t("td",{style:{"text-align":"center"}},"快速自然语言检测程序包。",-1),p4={style:{"text-align":"center"}},y4={href:"https://github.com/nicksnyder/go-i18n/",target:"_blank",rel:"noopener noreferrer"},x4=t("td",{style:{"text-align":"center"}},"用于处理本地化文本的软件包和一个随附工具。",-1),b4={style:{"text-align":"center"}},f4={href:"https://github.com/dveselov/mystem",target:"_blank",rel:"noopener noreferrer"},m4=t("td",{style:{"text-align":"center"}},"CGo与Yandex.Mystem的绑定-俄罗斯形态分析仪。",-1),k4={style:{"text-align":"center"}},G4={href:"https://github.com/nuance/go-nlp",target:"_blank",rel:"noopener noreferrer"},v4=t("td",{style:{"text-align":"center"}},"用于处理离散概率分布的实用程序和其他可用于执行NLP工作的工具。",-1),E4={style:{"text-align":"center"}},S4={href:"https://github.com/mozillazg/go-pinyin",target:"_blank",rel:"noopener noreferrer"},A4=t("td",{style:{"text-align":"center"}},"CN Hanzi至Hanyu拼音转换器。",-1),w4={style:{"text-align":"center"}},P4={href:"https://github.com/agonopol/go-stem",target:"_blank",rel:"noopener noreferrer"},C4=t("td",{style:{"text-align":"center"}},"搬运程序阻止算法的实现。",-1),T4={style:{"text-align":"center"}},M4={href:"https://github.com/mozillazg/go-unidecode",target:"_blank",rel:"noopener noreferrer"},j4=t("td",{style:{"text-align":"center"}},"Unicode文本的ASCII音译。",-1),I4={style:{"text-align":"center"}},B4={href:"https://github.com/danieldk/go2vec",target:"_blank",rel:"noopener noreferrer"},F4=t("td",{style:{"text-align":"center"}},"用于word2vec嵌入的阅读器和实用程序功能。",-1),O4={style:{"text-align":"center"}},N4={href:"https://github.com/yanyiwu/gojieba",target:"_blank",rel:"noopener noreferrer"},D4=t("td",{style:{"text-align":"center"}},"这是一个围棋实施解霸其中中国分词算法。",-1),z4={style:{"text-align":"center"}},R4={href:"https://github.com/rjohnsondev/golibstemmer",target:"_blank",rel:"noopener noreferrer"},L4=t("td",{style:{"text-align":"center"}},"雪球库libstemmer库的绑定，包括porter 2。",-1),H4={style:{"text-align":"center"}},J4={href:"https://github.com/xujiajun/gotokenizer",target:"_blank",rel:"noopener noreferrer"},q4=t("td",{style:{"text-align":"center"}},"基于字典和Goram语言的Bigram语言模型的标记器。（现在仅支持中文细分）",-1),U4={style:{"text-align":"center"}},W4={href:"https://github.com/fiam/gounidecode",target:"_blank",rel:"noopener noreferrer"},V4=t("td",{style:{"text-align":"center"}},"Go的Unicode音译器（也称为unidecode）。",-1),X4={style:{"text-align":"center"}},K4={href:"https://github.com/go-ego/gse",target:"_blank",rel:"noopener noreferrer"},Q4=t("td",{style:{"text-align":"center"}},"进行有效的文本分割；支持英语，中文，日语等。",-1),Z4={style:{"text-align":"center"}},Y4={href:"https://github.com/goodsign/icu",target:"_blank",rel:"noopener noreferrer"},$4=t("td",{style:{"text-align":"center"}},"CGO结合为ICU4C C库检测和转换功能。保证与版本50.1兼容。",-1),t6={style:{"text-align":"center"}},e6={href:"https://github.com/ikawaha/kagome",target:"_blank",rel:"noopener noreferrer"},n6=t("td",{style:{"text-align":"center"}},"用纯Go语言编写的JP形态分析仪。",-1),r6={style:{"text-align":"center"}},o6={href:"https://github.com/goodsign/libtextcat",target:"_blank",rel:"noopener noreferrer"},l6=t("td",{style:{"text-align":"center"}},"libtextcat C库的Cgo绑定。保证与2.2版兼容。",-1),s6={style:{"text-align":"center"}},i6={href:"https://github.com/awsong/MMSEGO",target:"_blank",rel:"noopener noreferrer"},a6=t("td",{style:{"text-align":"center"}},"这是MMSEG的GO实现，它是中文分词算法。",-1),c6={style:{"text-align":"center"}},h6={href:"https://github.com/Shixzie/nlp",target:"_blank",rel:"noopener noreferrer"},_6=t("td",{style:{"text-align":"center"}},"从字符串中提取值，并用nlp填充您的结构。",-1),d6={style:{"text-align":"center"}},g6={href:"https://github.com/james-bowman/nlp",target:"_blank",rel:"noopener noreferrer"},u6=t("td",{style:{"text-align":"center"}},"支持LSA（潜在语义分析）的自然语言处理库。",-1),p6={style:{"text-align":"center"}},y6={href:"https://github.com/rookii/paicehusk",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},"Paice / Husk提取算法的Golang实现。",-1),b6={style:{"text-align":"center"}},f6={href:"https://github.com/striker2000/petrovich",target:"_blank",rel:"noopener noreferrer"},m6=t("td",{style:{"text-align":"center"}},"彼得罗维奇（Petrovich）是库，在给定的语法情况下使用俄语名称。",-1),k6={style:{"text-align":"center"}},G6={href:"https://github.com/a2800276/porter",target:"_blank",rel:"noopener noreferrer"},v6=t("td",{style:{"text-align":"center"}},"这是Martin Porter的Porter干算法的C实现的相当简单的移植。",-1),E6={style:{"text-align":"center"}},S6={href:"https://github.com/zhenjl/porter2",target:"_blank",rel:"noopener noreferrer"},A6=t("td",{style:{"text-align":"center"}},"非常快的Porter 2 提取器。",-1),w6={style:{"text-align":"center"}},P6={href:"https://github.com/jdkato/prose",target:"_blank",rel:"noopener noreferrer"},C6=t("td",{style:{"text-align":"center"}},"用于文本处理的库，支持标记化，词性标记，命名实体提取等。仅限英语。",-1),T6={style:{"text-align":"center"}},M6={href:"https://github.com/Obaied/RAKE.go",target:"_blank",rel:"noopener noreferrer"},j6=t("td",{style:{"text-align":"center"}},"快速自动关键字提取算法（RAKE）的Go端口。",-1),I6={style:{"text-align":"center"}},B6={href:"https://github.com/blevesearch/segment",target:"_blank",rel:"noopener noreferrer"},F6=t("td",{style:{"text-align":"center"}},"用于执行Unicode标准附件＃29中所述的Unicode文本分段的Go库",-1),O6={style:{"text-align":"center"}},N6={href:"https://github.com/neurosnap/sentences",target:"_blank",rel:"noopener noreferrer"},D6=t("td",{style:{"text-align":"center"}},"句子标记器：将文本转换为句子列表。",-1),z6={style:{"text-align":"center"}},R6={href:"https://github.com/osamingo/shamoji",target:"_blank",rel:"noopener noreferrer"},L6=t("td",{style:{"text-align":"center"}},"shamoji是用Go编写的单词过滤程序包。",-1),H6={style:{"text-align":"center"}},J6={href:"https://github.com/goodsign/snowball",target:"_blank",rel:"noopener noreferrer"},q6=t("td",{style:{"text-align":"center"}},"Go的雪球茎端口（cgo包装器）。提供单词词干提取功能Snowball本机。",-1),U6={style:{"text-align":"center"}},W6={href:"https://github.com/dchest/stemmer",target:"_blank",rel:"noopener noreferrer"},V6=t("td",{style:{"text-align":"center"}},"用于Go编程语言的Stemmer软件包。包括英语和德语词干。",-1),X6={style:{"text-align":"center"}},K6={href:"https://github.com/pebbe/textcat",target:"_blank",rel:"noopener noreferrer"},Q6=t("td",{style:{"text-align":"center"}},"Go软件包，用于基于n-gram的文本分类，并支持utf-8和原始文本。",-1),Z6={style:{"text-align":"center"}},Y6={href:"https://github.com/abadojack/whatlanggo",target:"_blank",rel:"noopener noreferrer"},$6=t("td",{style:{"text-align":"center"}},"Go的自然语言检测程序包。支持84种语言和24种脚本（书写系统，例如拉丁语，西里尔字母等）。",-1),t7={style:{"text-align":"center"}},e7={href:"https://github.com/olebedev/when",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},"自然EN和RU语言日期/时间分析器具有可插拔的规则。",-1),r7=t("h3",{id:"网络",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#网络"},[t("span",null,"网络")])],-1),o7=t("p",null,[t("a",{name:"网络"}),e(),t("a",{name:"网络"})],-1),l7=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),s7={style:{"text-align":"center"}},i7={href:"https://github.com/mdlayher/arp",target:"_blank",rel:"noopener noreferrer"},a7=t("td",{style:{"text-align":"center"}},"包arp实现ARP协议，如RFC 826中所述。",-1),c7={style:{"text-align":"center"}},h7={href:"https://github.com/stabbycutyou/buffstreams",target:"_blank",rel:"noopener noreferrer"},_7=t("td",{style:{"text-align":"center"}},"通过TCP流化协议缓冲区数据变得容易。",-1),d7={style:{"text-align":"center"}},g7={href:"https://github.com/zubairhamed/canopus",target:"_blank",rel:"noopener noreferrer"},u7=t("td",{style:{"text-align":"center"}},"CoAP客户端/服务器实施（RFC 7252）。",-1),p7={style:{"text-align":"center"}},y7={href:"https://github.com/yl2chen/cidranger",target:"_blank",rel:"noopener noreferrer"},x7=t("td",{style:{"text-align":"center"}},"Go的快速IP到CIDR查找。",-1),b7={style:{"text-align":"center"}},f7={href:"https://github.com/mdlayher/dhcp6",target:"_blank",rel:"noopener noreferrer"},m7=t("td",{style:{"text-align":"center"}},"软件包dhcp6实现了DHCPv6服务器，如RFC 3315中所述。",-1),k7={style:{"text-align":"center"}},G7={href:"https://github.com/miekg/dns",target:"_blank",rel:"noopener noreferrer"},v7=t("td",{style:{"text-align":"center"}},"使用DNS的Go库。",-1),E7={style:{"text-align":"center"}},S7={href:"https://github.com/songgao/ether",target:"_blank",rel:"noopener noreferrer"},A7=t("td",{style:{"text-align":"center"}},"用于发送和接收以太网帧的跨平台Go软件包。",-1),w7={style:{"text-align":"center"}},P7={href:"https://github.com/mdlayher/ethernet",target:"_blank",rel:"noopener noreferrer"},C7=t("td",{style:{"text-align":"center"}},"程序包ethernet实施IEEE 802.3以太网II帧和IEEE 802.1Q VLAN标签的封送处理。",-1),T7={style:{"text-align":"center"}},M7={href:"https://github.com/valyala/fasthttp",target:"_blank",rel:"noopener noreferrer"},j7=t("td",{style:{"text-align":"center"}},"软件包fasthttp是Go的一种快速HTTP实现，比net / http快10倍。",-1),I7={style:{"text-align":"center"}},B7={href:"https://github.com/fortio/fortio",target:"_blank",rel:"noopener noreferrer"},F7=t("td",{style:{"text-align":"center"}},"负载测试库和命令行工具，高级回显服务器和Web UI。允许指定设置的每秒查询负载，并记录延迟直方图和其他有用的统计数据并对其进行图形化。Tcp，Http，gRPC。",-1),O7={style:{"text-align":"center"}},N7={href:"https://github.com/jlaffaye/ftp",target:"_blank",rel:"noopener noreferrer"},D7=t("td",{style:{"text-align":"center"}},"程序包ftp实现RFC 959中所述的FTP客户端。",-1),z7={style:{"text-align":"center"}},R7={href:"https://github.com/Allenxuxu/gev",target:"_blank",rel:"noopener noreferrer"},L7=t("td",{style:{"text-align":"center"}},"gev是基于Reactor模式的轻量级，快速，无阻塞的TCP网络库。",-1),H7={style:{"text-align":"center"}},J7={href:"https://github.com/DrmagicE/gmqtt",target:"_blank",rel:"noopener noreferrer"},q7=t("td",{style:{"text-align":"center"}},"Gmqtt是一个灵活的高性能MQTT代理库，它完全实现了MQTT协议V3.1.1。",-1),U7={style:{"text-align":"center"}},W7={href:"https://github.com/panjf2000/gnet",target:"_blank",rel:"noopener noreferrer"},V7=t("td",{style:{"text-align":"center"}},"gnet是一个高性能的，用纯围棋轻便，非阻塞，事件循环网络库。",-1),X7={style:{"text-align":"center"}},K7={href:"https://github.com/google/gnxi",target:"_blank",rel:"noopener noreferrer"},Q7=t("td",{style:{"text-align":"center"}},"使用gNMI和gNOI协议的网络管理工具的集合。",-1),Z7={style:{"text-align":"center"}},Y7={href:"https://github.com/hashicorp/go-getter",target:"_blank",rel:"noopener noreferrer"},$7=t("td",{style:{"text-align":"center"}},"Go库，用于使用URL从各种来源下载文件或目录。",-1),t0={style:{"text-align":"center"}},e0={href:"https://github.com/joeig/go-powerdns",target:"_blank",rel:"noopener noreferrer"},n0=t("td",{style:{"text-align":"center"}},"Golang的 PowerDNS API绑定。",-1),r0={style:{"text-align":"center"}},o0={href:"https://github.com/ccding/go-stun",target:"_blank",rel:"noopener noreferrer"},l0=t("td",{style:{"text-align":"center"}},"STUN客户端的Go实现（RFC 3489和RFC 5389）。",-1),s0={style:{"text-align":"center"}},i0={href:"https://github.com/osrg/gobgp",target:"_blank",rel:"noopener noreferrer"},a0=t("td",{style:{"text-align":"center"}},"使用Go编程语言实现的BGP。",-1),c0={style:{"text-align":"center"}},h0={href:"https://github.com/sunwxg/golibwireshark",target:"_blank",rel:"noopener noreferrer"},_0=t("td",{style:{"text-align":"center"}},"软件包golibwireshark使用libwireshark库来解码pcap文件并分析解剖数据。",-1),d0={style:{"text-align":"center"}},g0={href:"https://github.com/google/gopacket",target:"_blank",rel:"noopener noreferrer"},u0=t("td",{style:{"text-align":"center"}},"Go库，用于使用libpcap绑定进行数据包处理。",-1),p0={style:{"text-align":"center"}},y0={href:"https://github.com/akrennmair/gopcap",target:"_blank",rel:"noopener noreferrer"},x0=t("td",{style:{"text-align":"center"}},"libpcap的包装器。",-1),b0={style:{"text-align":"center"}},f0={href:"https://github.com/sunwxg/goshark",target:"_blank",rel:"noopener noreferrer"},m0=t("td",{style:{"text-align":"center"}},"软件包goshark使用tshark解码IP数据包并创建数据结构以分析数据包。",-1),k0={style:{"text-align":"center"}},G0={href:"https://github.com/soniah/gosnmp",target:"_blank",rel:"noopener noreferrer"},v0=t("td",{style:{"text-align":"center"}},"用于执行SNMP操作的本机Go库。",-1),E0={style:{"text-align":"center"}},S0={href:"https://github.com/rakeki/gosocsvr",target:"_blank",rel:"noopener noreferrer"},A0=t("td",{style:{"text-align":"center"}},"套接字服务器变得简单。",-1),w0={style:{"text-align":"center"}},P0={href:"https://github.com/gansidui/gotcp",target:"_blank",rel:"noopener noreferrer"},C0=t("td",{style:{"text-align":"center"}},"用于快速编写tcp应用程序的Go软件包。",-1),T0={style:{"text-align":"center"}},M0={href:"https://github.com/cavaliercoder/grab",target:"_blank",rel:"noopener noreferrer"},j0=t("td",{style:{"text-align":"center"}},"用于管理文件下载的软件包。",-1),I0={style:{"text-align":"center"}},B0={href:"https://github.com/koofr/graval",target:"_blank",rel:"noopener noreferrer"},F0=t("td",{style:{"text-align":"center"}},"实验性FTP服务器框架。",-1),O0={style:{"text-align":"center"}},N0={href:"https://github.com/gchaincl/httplab",target:"_blank",rel:"noopener noreferrer"},D0=t("td",{style:{"text-align":"center"}},"HTTPLabs可让您检查HTTP请求并伪造响应。",-1),z0={style:{"text-align":"center"}},R0={href:"https://github.com/c-robinson/iplib",target:"_blank",rel:"noopener noreferrer"},L0=t("td",{style:{"text-align":"center"}},"受python ipaddress和ruby ipaddr启发而使用IP地址（net.IP，net.IPNet）的库",-1),H0={style:{"text-align":"center"}},J0={href:"https://github.com/udhos/jazigo",target:"_blank",rel:"noopener noreferrer"},q0=t("td",{style:{"text-align":"center"}},"Jazigo是用Go语言编写的工具，用于检索多个网络设备的配置。",-1),U0={style:{"text-align":"center"}},W0={href:"https://github.com/xtaci/kcp-go",target:"_blank",rel:"noopener noreferrer"},V0=t("td",{style:{"text-align":"center"}},"KCP-快速可靠的ARQ协议。",-1),X0={style:{"text-align":"center"}},K0={href:"https://github.com/xtaci/kcptun",target:"_blank",rel:"noopener noreferrer"},Q0=t("td",{style:{"text-align":"center"}},"基于KCP协议的极其简单和快速的udp隧道。",-1),Z0={style:{"text-align":"center"}},Y0={href:"https://github.com/fanux/lhttp",target:"_blank",rel:"noopener noreferrer"},$0=t("td",{style:{"text-align":"center"}},"强大的websocket框架，可更轻松地构建IM服务器。",-1),t9={style:{"text-align":"center"}},e9={href:"https://github.com/ian-kent/linkio",target:"_blank",rel:"noopener noreferrer"},n9=t("td",{style:{"text-align":"center"}},"用于读取器/写入器接口的网络链接速度模拟。",-1),r9={style:{"text-align":"center"}},o9={href:"https://github.com/kirillDanshin/llb",target:"_blank",rel:"noopener noreferrer"},l9=t("td",{style:{"text-align":"center"}},"这是代理服务器的非常简单但快速的后端。对于零内存分配和快速响应的快速重定向到预定义域很有用。",-1),s9={style:{"text-align":"center"}},i9={href:"https://github.com/hashicorp/mdns",target:"_blank",rel:"noopener noreferrer"},a9=t("td",{style:{"text-align":"center"}},"Golang中的简单mDNS（多播DNS）客户端/服务器库。",-1),c9={style:{"text-align":"center"}},h9={href:"https://eclipse.org/paho/clients/golang/",target:"_blank",rel:"noopener noreferrer"},_9=t("td",{style:{"text-align":"center"}},"Paho Go客户端提供了一个MQTT客户端库，用于通过TCP，TLS或WebSockets连接到MQTT代理。",-1),d9={style:{"text-align":"center"}},g9={href:"https://github.com/intel-go/nff-go",target:"_blank",rel:"noopener noreferrer"},u9=t("td",{style:{"text-align":"center"}},"用于快速开发云和裸机（以前的YANFF）的高性能网络功能的框架。",-1),p9={style:{"text-align":"center"}},y9={href:"https://github.com/aerogo/packet",target:"_blank",rel:"noopener noreferrer"},x9=t("td",{style:{"text-align":"center"}},"通过TCP和UDP发送数据包。如果需要，它可以缓冲消息和热交换连接。",-1),b9={style:{"text-align":"center"}},f9={href:"https://github.com/schollz/peerdiscovery",target:"_blank",rel:"noopener noreferrer"},m9=t("td",{style:{"text-align":"center"}},"Pure Go库，用于使用UDP多播的跨平台本地对等发现。",-1),k9={style:{"text-align":"center"}},G9={href:"https://github.com/aybabtme/portproxy",target:"_blank",rel:"noopener noreferrer"},v9=t("td",{style:{"text-align":"center"}},"简单的TCP代理，它将不支持它的API添加到CORS支持中。",-1),E9={style:{"text-align":"center"}},S9={href:"https://github.com/polera/publicip",target:"_blank",rel:"noopener noreferrer"},A9=t("td",{style:{"text-align":"center"}},"软件包publicip返回您的面向公众的IPv4地址（互联网出口）。",-1),w9={style:{"text-align":"center"}},P9={href:"https://github.com/lucas-clemente/quic-go",target:"_blank",rel:"noopener noreferrer"},C9=t("td",{style:{"text-align":"center"}},"在纯Go中实现QUIC协议。",-1),T9={style:{"text-align":"center"}},M9={href:"https://github.com/mdlayher/raw",target:"_blank",rel:"noopener noreferrer"},j9=t("td",{style:{"text-align":"center"}},"包raw允许在设备驱动程序级别为网络接口读取和写入数据。",-1),I9={style:{"text-align":"center"}},B9={href:"https://github.com/pkg/sftp",target:"_blank",rel:"noopener noreferrer"},F9={style:{"text-align":"center"}},O9={href:"https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt",target:"_blank",rel:"noopener noreferrer"},N9={style:{"text-align":"center"}},D9={href:"https://github.com/gliderlabs/ssh",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},"用于构建SSH服务器的高级API（包装crypto / ssh）。",-1),R9={style:{"text-align":"center"}},L9={href:"https://github.com/eduardonunesp/sslb",target:"_blank",rel:"noopener noreferrer"},H9=t("td",{style:{"text-align":"center"}},"这是一个超级简单的负载均衡器，只是一个实现某种性能的小项目。",-1),J9={style:{"text-align":"center"}},q9={href:"https://github.com/go-rtc/stun",target:"_blank",rel:"noopener noreferrer"},U9=t("td",{style:{"text-align":"center"}},"实施RFC 5389 STUN协议。",-1),W9={style:{"text-align":"center"}},V9={href:"https://github.com/firstrow/tcp_server",target:"_blank",rel:"noopener noreferrer"},X9=t("td",{style:{"text-align":"center"}},"用于更快地构建tcp服务器的Go库。",-1),K9={style:{"text-align":"center"}},Q9={href:"https://github.com/two/tspool",target:"_blank",rel:"noopener noreferrer"},Z9=t("td",{style:{"text-align":"center"}},"TCP库使用工作池来提高性能并保护您的服务器。",-1),Y9={style:{"text-align":"center"}},$9={href:"https://github.com/anacrolix/utp",target:"_blank",rel:"noopener noreferrer"},tG=t("td",{style:{"text-align":"center"}},"围棋UTP微传输协议的实现。",-1),eG={style:{"text-align":"center"}},nG={href:"https://github.com/songgao/water",target:"_blank",rel:"noopener noreferrer"},rG=t("td",{style:{"text-align":"center"}},"简单的TUN / TAP库。",-1),oG={style:{"text-align":"center"}},lG={href:"https://github.com/pions/webrtc",target:"_blank",rel:"noopener noreferrer"},sG=t("td",{style:{"text-align":"center"}},"WebRTC API的纯Go实现。",-1),iG={style:{"text-align":"center"}},aG={href:"https://github.com/masterzen/winrm",target:"_blank",rel:"noopener noreferrer"},cG=t("td",{style:{"text-align":"center"}},"进入WinRM客户端以在Windows计算机上远程执行命令。",-1),hG={style:{"text-align":"center"}},_G={href:"https://github.com/xfxdev/xtcp",target:"_blank",rel:"noopener noreferrer"},dG=t("td",{style:{"text-align":"center"}},"具有同步全双工通信，安全关闭，自定义协议的TCP Server Framework。",-1),gG=t("h3",{id:"视频库",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#视频库"},[t("span",null,"视频库")])],-1),uG=t("p",null,[t("a",{name:"视频"}),e(),t("a",{name:"视频"})],-1),pG=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),yG={style:{"text-align":"center"}},xG={href:"https://github.com/asticode/go-astisub",target:"_blank",rel:"noopener noreferrer"},bG=t("td",{style:{"text-align":"center"}},"在GO中处理字幕（.srt，.stl，.ttml，.webvtt，.ssa / .ass，图文电视，.smi等）。",-1),fG={style:{"text-align":"center"}},mG={href:"https://github.com/asticode/go-astits",target:"_blank",rel:"noopener noreferrer"},kG=t("td",{style:{"text-align":"center"}},"在GO中本地解析和解复用MPEG传输流（.ts）。",-1),GG={style:{"text-align":"center"}},vG={href:"https://github.com/quangngotan95/go-m3u8",target:"_blank",rel:"noopener noreferrer"},EG=t("td",{style:{"text-align":"center"}},"Apple m3u8播放列表的解析器和生成器库。",-1),SG={style:{"text-align":"center"}},AG={href:"https://github.com/giorgisio/goav",target:"_blank",rel:"noopener noreferrer"},wG=t("td",{style:{"text-align":"center"}},"FFmpeg的综合Go绑定。",-1),PG={style:{"text-align":"center"}},CG={href:"https://github.com/ziutek/gst",target:"_blank",rel:"noopener noreferrer"},TG=t("td",{style:{"text-align":"center"}},"GStreamer的绑定。",-1),MG={style:{"text-align":"center"}},jG={href:"https://github.com/wargarblgarbl/libgosubs",target:"_blank",rel:"noopener noreferrer"},IG=t("td",{style:{"text-align":"center"}},"go的字幕格式支持。支持.srt，.ttml和.ass。",-1),BG={style:{"text-align":"center"}},FG={href:"https://github.com/adrg/libvlc-go",target:"_blank",rel:"noopener noreferrer"},OG=t("td",{style:{"text-align":"center"}},"libvlc 2.X / 3.X / 4.X的绑定（由VLC媒体播放器使用）。",-1),NG={style:{"text-align":"center"}},DG={href:"https://github.com/grafov/m3u8",target:"_blank",rel:"noopener noreferrer"},zG=t("td",{style:{"text-align":"center"}},"Apple HLS的M3U8播放列表的解析器和生成器库。",-1),RG={style:{"text-align":"center"}},LG={href:"https://github.com/korandiz/v4l",target:"_blank",rel:"noopener noreferrer"},HG=t("td",{style:{"text-align":"center"}},"用Go编写的Linux视频捕获库。",-1),JG=t("p",null,[t("br")],-1);function qG(UG,WG){const n=s("ExternalLinkIcon");return i(),a("div",null,[h,t("table",null,[_,t("tbody",null,[t("tr",null,[d,t("td",g,[t("a",u,[e("github.com/jinzhu/gorm"),r(n)]),e(),t("a",p,[e("github.com/go-xorm/xorm"),r(n)])])]),t("tr",null,[y,t("td",x,[t("a",b,[e("github.com/olivere/elastic"),r(n)])])]),t("tr",null,[f,t("td",m,[t("a",k,[e("github.com/apache/rocketmq-client-go/v2"),r(n)])])]),t("tr",null,[G,t("td",v,[t("a",E,[e("github.com/streadway/amqp"),r(n)])])]),t("tr",null,[S,t("td",A,[t("a",w,[e("github.com/go-redis/redis"),r(n)])])]),t("tr",null,[P,t("td",C,[t("a",T,[e("github.com/coreos/etcd/clientv3"),r(n)])])]),t("tr",null,[M,t("td",j,[t("a",I,[e("https://github.com/Shopify/sarama"),r(n)]),e(),t("a",B,[e("https://github.com/bsm/sarama-cluster"),r(n)])])]),t("tr",null,[F,t("td",O,[t("a",N,[e("github.com/360EntSecGroup-Skylar/excelize"),r(n)])])]),t("tr",null,[D,t("td",z,[t("a",R,[e("golang.org/x/tools/cmd/present"),r(n)])])]),t("tr",null,[L,t("td",H,[t("a",J,[e("https://github.com/ajstarks/svgo"),r(n)])])]),t("tr",null,[q,t("td",U,[t("a",W,[e("https://github.com/AndreasBriese/bbloom"),r(n)])])]),t("tr",null,[V,t("td",X,[t("a",K,[e("https://github.com/bitly/go-simplejson"),r(n)])])]),t("tr",null,[Q,t("td",Z,[t("a",Y,[e("https://github.com/bluele/gcache "),r(n)]),e(),t("a",$,[e("https://github.com/hashicorp/golang-lru "),r(n)])])]),t("tr",null,[tt,t("td",et,[t("a",nt,[e("https://github.com/bouk/monkey "),r(n)])])]),t("tr",null,[rt,t("td",ot,[t("a",lt,[e("https://github.com/toml-lang/toml "),r(n)]),e(),t("a",st,[e("https://github.com/naoina/toml "),r(n)])])]),t("tr",null,[it,t("td",at,[t("a",ct,[e("https://github.com/go-yaml/yaml "),r(n)])])]),t("tr",null,[ht,t("td",_t,[t("a",dt,[e("https://github.com/spf13/viper "),r(n)])])]),t("tr",null,[gt,t("td",ut,[t("a",pt,[e("https://github.com/etcd-io/bbolt "),r(n)])])]),t("tr",null,[yt,t("td",xt,[t("a",bt,[e("https://github.com/Dai0522/workpool "),r(n)])])]),t("tr",null,[ft,t("td",mt,[t("a",kt,[e("https://github.com/ivpusic/grpool "),r(n)])])]),t("tr",null,[Gt,t("td",vt,[t("a",Et,[e("https://github.com/davecgh/go-spew "),r(n)])])]),t("tr",null,[St,t("td",At,[t("a",wt,[e("https://github.com/eapache/queue "),r(n)])])]),t("tr",null,[Pt,t("td",Ct,[t("a",Tt,[e("https://github.com/go-ego/gpy "),r(n)])])]),t("tr",null,[Mt,t("td",jt,[t("a",It,[e("https://github.com/go-ego/gse "),r(n)])])]),t("tr",null,[Bt,t("td",Ft,[t("a",Ot,[e("https://github.com/go-ego/riot "),r(n)])])]),t("tr",null,[Nt,t("td",Dt,[t("a",zt,[e("https://github.com/go-ego/cedar "),r(n)])])]),t("tr",null,[Rt,t("td",Lt,[t("a",Ht,[e("https://github.com/gorilla/sessions "),r(n)])])]),t("tr",null,[Jt,t("td",qt,[t("a",Ut,[e("https://github.com/gorilla/mux "),r(n)])])]),t("tr",null,[Wt,t("td",Vt,[t("a",Xt,[e("https://github.com/gorilla/websocket "),r(n)])])]),t("tr",null,[Kt,t("td",Qt,[t("a",Zt,[e("https://github.com/gorilla/handlers "),r(n)])])]),t("tr",null,[Yt,t("td",$t,[t("a",te,[e("https://github.com/gorilla/csrf "),r(n)])])]),t("tr",null,[ee,t("td",ne,[t("a",re,[e("https://github.com/gorilla/context "),r(n)])])]),t("tr",null,[oe,t("td",le,[t("a",se,[e("https://github.com/grokify/html-strip-tags-go "),r(n)])])]),t("tr",null,[ie,t("td",ae,[t("a",ce,[e("https://github.com/microcosm-cc/bluemonday "),r(n)])])]),t("tr",null,[he,t("td",_e,[t("a",de,[e("https://github.com/ipipdotnet/ipdb-go "),r(n)])])]),t("tr",null,[ge,t("td",ue,[t("a",pe,[e("https://github.com/jaytaylor/html2text "),r(n)])])]),t("tr",null,[ye,t("td",xe,[t("a",be,[e("https://github.com/jtolds/gls "),r(n)])])]),t("tr",null,[fe,t("td",me,[t("a",ke,[e("https://github.com/mgutz/ansi"),r(n)])])]),t("tr",null,[Ge,t("td",ve,[t("a",Ee,[e("https://github.com/olekukonko/tablewriter"),r(n)])])]),t("tr",null,[Se,t("td",Ae,[t("a",we,[e("https://github.com/modern-go/reflect2"),r(n)])])]),t("tr",null,[Pe,t("td",Ce,[t("a",Te,[e("https://github.com/modern-go/msgfmt"),r(n)])])]),t("tr",null,[Me,t("td",je,[t("a",Ie,[e("https://github.com/modern-go/concurrent"),r(n)])])]),t("tr",null,[Be,t("td",Fe,[t("a",Oe,[e("https://github.com/mohae/deepcopy"),r(n)])])]),t("tr",null,[Ne,t("td",De,[t("a",ze,[e("https://github.com/spf13/cast"),r(n)])])]),t("tr",null,[Re,t("td",Le,[t("a",He,[e("https://github.com/mvdan/xurls"),r(n)])])]),t("tr",null,[Je,t("td",qe,[t("a",Ue,[e("https://godoc.org/github.com/naoina/go-stringutil"),r(n)])])]),t("tr",null,[We,t("td",Ve,[t("a",Xe,[e("https://github.com/pmezard/go-difflib"),r(n)])])]),t("tr",null,[Ke,t("td",Qe,[t("a",Ze,[e("https://github.com/satori/go.uuid"),r(n)]),e(),t("a",Ye,[e("https://github.com/snluu/uuid"),r(n)])])]),t("tr",null,[$e,t("td",tn,[t("a",en,[e("https://github.com/ssor/bom"),r(n)])])]),t("tr",null,[nn,t("td",rn,[t("a",on,[e("https://github.com/nfnt/resize"),r(n)])])]),t("tr",null,[ln,t("td",sn,[t("a",an,[e("https://github.com/otokaze/mock"),r(n)])])]),t("tr",null,[cn,t("td",hn,[t("a",_n,[e("https://github.com/rcrowley/go-metrics"),r(n)])])]),t("tr",null,[dn,t("td",gn,[t("a",un,[e("https://github.com/samuel/go-zookeeper"),r(n)])])]),t("tr",null,[pn,t("td",yn,[t("a",xn,[e("https://github.com/samuel/go-thrift"),r(n)])])]),t("tr",null,[bn,t("td",fn,[t("a",mn,[e("https://github.com/shirou/mqttcli"),r(n)])])]),t("tr",null,[kn,t("td",Gn,[t("a",vn,[e("https://github.com/tsuna/gohbase"),r(n)])])]),t("tr",null,[En,t("td",Sn,[t("a",An,[e("https://github.com/rcrowley/go-metrics"),r(n)])])]),t("tr",null,[wn,t("td",Pn,[t("a",Cn,[e("https://github.com/deathowl/go-metrics-prometheus"),r(n)])])]),t("tr",null,[Tn,t("td",Mn,[t("a",jn,[e("https://github.com/shirou/gopsutil"),r(n)])])]),t("tr",null,[In,t("td",Bn,[t("a",Fn,[e("https://github.com/shopspring/decimal"),r(n)])])]),t("tr",null,[On,t("td",Nn,[t("a",Dn,[e("https://github.com/sirupsen/logrus"),r(n)])])]),t("tr",null,[zn,t("td",Rn,[t("a",Ln,[e("https://github.com/urfave/cli"),r(n)])])]),t("tr",null,[Hn,t("td",Jn,[t("a",qn,[e("https://github.com/spf13/cobra"),r(n)])])])])]),Un,Wn,t("table",null,[Vn,t("tbody",null,[t("tr",null,[Xn,t("td",Kn,[t("a",Qn,[e("github.com/gin-gonic/gin"),r(n)])]),Zn]),t("tr",null,[Yn,t("td",$n,[t("a",tr,[e("github.com/beego/beego"),r(n)])]),er]),t("tr",null,[nr,t("td",rr,[t("a",or,[e("github.com/go-kratos/kratos"),r(n)])]),lr]),t("tr",null,[sr,t("td",ir,[t("a",ar,[e("github.com/pingcap/tidb"),r(n)])]),cr])])]),hr,_r,t("table",null,[dr,t("tbody",null,[gr,ur,pr,yr,xr,br,fr,mr,kr,Gr,vr,Er,Sr,Ar,wr,Pr,Cr,Tr,Mr,jr,Ir,Br,Fr,Or,Nr,Dr,zr,Rr,Lr,Hr,Jr,qr,Ur,Wr,Vr,Xr,Kr,Qr,Zr,Yr,$r,to,eo,no,ro,oo,lo,so,io,ao,co,ho,_o,go,uo,po,yo,xo,bo,fo,t("tr",null,[mo,ko,t("td",Go,[e("实现了对"),t("a",vo,[e("Mach-O对象文件"),r(n)]),e("的访问")])]),Eo,So,Ao,wo,Po,Co,To,Mo,jo,Io,Bo,Fo,Oo,No,Do,zo,Ro,Lo,Ho,Jo,qo,Uo,Wo,Vo,Xo,Ko,Qo,Zo,Yo,$o,tl,el,nl,rl,ol,ll,sl,il,al,cl,hl,_l,dl,gl,ul,pl,yl,xl,bl,fl,ml,kl,Gl,vl,El,Sl,Al,wl,Pl,Cl,Tl,Ml,jl,Il])]),Bl,t("table",null,[Fl,t("tbody",null,[t("tr",null,[t("td",Ol,[t("a",Nl,[e("EasyMIDI"),r(n)])]),Dl]),t("tr",null,[t("td",zl,[t("a",Rl,[e("flac"),r(n)])]),Ll]),t("tr",null,[t("td",Hl,[t("a",Jl,[e("gaad"),r(n)])]),ql]),t("tr",null,[t("td",Ul,[t("a",Wl,[e("go-sox"),r(n)])]),Vl]),t("tr",null,[t("td",Xl,[t("a",Kl,[e("go_mediainfo"),r(n)])]),Ql]),t("tr",null,[t("td",Zl,[t("a",Yl,[e("gosamplerate"),r(n)])]),$l]),t("tr",null,[t("td",ts,[t("a",es,[e("id3v2"),r(n)])]),ns]),t("tr",null,[t("td",rs,[t("a",os,[e("malgo"),r(n)])]),ls]),t("tr",null,[t("td",ss,[t("a",is,[e("minimp3"),r(n)])]),as]),t("tr",null,[t("td",cs,[t("a",hs,[e("mix"),r(n)])]),_s]),t("tr",null,[t("td",ds,[t("a",gs,[e("mp3"),r(n)])]),us]),t("tr",null,[t("td",ps,[t("a",ys,[e("music-theory"),r(n)])]),xs]),t("tr",null,[t("td",bs,[t("a",fs,[e("Oto"),r(n)])]),ms]),t("tr",null,[t("td",ks,[t("a",Gs,[e("PortAudio"),r(n)])]),vs]),t("tr",null,[t("td",Es,[t("a",Ss,[e("portmidi"),r(n)])]),As]),t("tr",null,[t("td",ws,[t("a",Ps,[e("taglib"),r(n)])]),Cs]),t("tr",null,[t("td",Ts,[t("a",Ms,[e("vorbis"),r(n)])]),js]),t("tr",null,[t("td",Is,[t("a",Bs,[e("waveform"),r(n)])]),Fs])])]),Os,Ns,t("table",null,[Ds,t("tbody",null,[t("tr",null,[t("td",zs,[t("a",Rs,[e("algorithms"),r(n)])]),Ls]),t("tr",null,[t("td",Hs,[t("a",Js,[e("binpacker"),r(n)])]),qs]),t("tr",null,[t("td",Us,[t("a",Ws,[e("bit"),r(n)])]),Vs]),t("tr",null,[t("td",Xs,[t("a",Ks,[e("bitset"),r(n)])]),Qs]),t("tr",null,[t("td",Zs,[t("a",Ys,[e("bloom"),r(n)])]),$s]),t("tr",null,[t("td",ti,[t("a",ei,[e("bloom"),r(n)])]),ni]),t("tr",null,[t("td",ri,[t("a",oi,[e("boomfilters"),r(n)])]),li]),t("tr",null,[t("td",si,[t("a",ii,[e("concurrent-writer"),r(n)])]),ai]),t("tr",null,[t("td",ci,[t("a",hi,[e("conjungo"),r(n)])]),_i]),t("tr",null,[t("td",di,[t("a",gi,[e("count-min-log"),r(n)])]),ui]),t("tr",null,[t("td",pi,[t("a",yi,[e("crunch"),r(n)])]),xi]),t("tr",null,[t("td",bi,[t("a",fi,[e("cuckoofilter"),r(n)])]),mi]),t("tr",null,[t("td",ki,[t("a",Gi,[e("deque"),r(n)])]),vi]),t("tr",null,[t("td",Ei,[t("a",Si,[e("deque"),r(n)])]),Ai]),t("tr",null,[t("td",wi,[t("a",Pi,[e("dict"),r(n)])]),Ci]),t("tr",null,[t("td",Ti,[t("a",Mi,[e("encoding"),r(n)])]),ji]),t("tr",null,[t("td",Ii,[t("a",Bi,[e("go-adaptive-radix-tree"),r(n)])]),Fi]),t("tr",null,[t("td",Oi,[t("a",Ni,[e("go-datastructures"),r(n)])]),Di]),t("tr",null,[t("td",zi,[t("a",Ri,[e("go-ef"),r(n)])]),Li]),t("tr",null,[t("td",Hi,[t("a",Ji,[e("go-geoindex"),r(n)])]),qi]),t("tr",null,[t("td",Ui,[t("a",Wi,[e("go-mcache"),r(n)])]),Vi]),t("tr",null,[t("td",Xi,[t("a",Ki,[e("go-rquad"),r(n)])]),Qi]),t("tr",null,[t("td",Zi,[t("a",Yi,[e("gocache"),r(n)])]),$i]),t("tr",null,[t("td",ta,[t("a",ea,[e("goconcurrentqueue"),r(n)])]),na]),t("tr",null,[t("td",ra,[t("a",oa,[e("gods"),r(n)])]),la]),t("tr",null,[t("td",sa,[t("a",ia,[e("gofal"),r(n)])]),aa]),t("tr",null,[t("td",ca,[t("a",ha,[e("golang-set"),r(n)])]),_a]),t("tr",null,[t("td",da,[t("a",ga,[e("goset"),r(n)])]),ua]),t("tr",null,[t("td",pa,[t("a",ya,[e("goskiplist"),r(n)])]),xa]),t("tr",null,[t("td",ba,[t("a",fa,[e("gota"),r(n)])]),ma]),t("tr",null,[t("td",ka,[t("a",Ga,[e("hide"),r(n)])]),va]),t("tr",null,[t("td",Ea,[t("a",Sa,[e("hilbert"),r(n)])]),Aa]),t("tr",null,[t("td",wa,[t("a",Pa,[e("hyperloglog"),r(n)])]),Ca]),t("tr",null,[t("td",Ta,[t("a",Ma,[e("iter"),r(n)])]),ja]),t("tr",null,[t("td",Ia,[t("a",Ba,[e("levenshtein"),r(n)])]),Fa]),t("tr",null,[t("td",Oa,[t("a",Na,[e("levenshtein"),r(n)])]),Da]),t("tr",null,[t("td",za,[t("a",Ra,[e("mafsa"),r(n)])]),La]),t("tr",null,[t("td",Ha,[t("a",Ja,[e("merkletree"),r(n)])]),qa]),t("tr",null,[t("td",Ua,[t("a",Wa,[e("mspm"),r(n)])]),Va]),t("tr",null,[t("td",Xa,[t("a",Ka,[e("null"),r(n)])]),Qa]),t("tr",null,[t("td",Za,[t("a",Ya,[e("parsefields"),r(n)])]),$a]),t("tr",null,[t("td",tc,[t("a",ec,[e("pipeline"),r(n)])]),nc]),t("tr",null,[t("td",rc,[t("a",oc,[e("ptrie"),r(n)])]),lc]),t("tr",null,[t("td",sc,[t("a",ic,[e("remember-go"),r(n)])]),ac]),t("tr",null,[t("td",cc,[t("a",hc,[e("ring"),r(n)])]),_c]),t("tr",null,[t("td",dc,[t("a",gc,[e("roaring"),r(n)])]),uc]),t("tr",null,[t("td",pc,[t("a",yc,[e("set"),r(n)])]),xc]),t("tr",null,[t("td",bc,[t("a",fc,[e("skiplist"),r(n)])]),mc]),t("tr",null,[t("td",kc,[t("a",Gc,[e("skiplist"),r(n)])]),vc]),t("tr",null,[t("td",Ec,[t("a",Sc,[e("timedmap"),r(n)])]),Ac]),t("tr",null,[t("td",wc,[t("a",Pc,[e("treap"),r(n)])]),Cc]),t("tr",null,[t("td",Tc,[t("a",Mc,[e("trie"),r(n)])]),jc]),t("tr",null,[t("td",Ic,[t("a",Bc,[e("ttlcache"),r(n)])]),Fc]),t("tr",null,[t("td",Oc,[t("a",Nc,[e("typ"),r(n)])]),Dc]),t("tr",null,[t("td",zc,[t("a",Rc,[e("willf/bloom"),r(n)])]),Lc])])]),Hc,Jc,t("table",null,[qc,t("tbody",null,[t("tr",null,[t("td",Uc,[t("a",Wc,[e("celeriac"),r(n)])]),Vc]),t("tr",null,[t("td",Xc,[t("a",Kc,[e("consistent"),r(n)])]),Qc]),t("tr",null,[t("td",Zc,[t("a",Yc,[e("dht"),r(n)])]),$c]),t("tr",null,[t("td",th,[t("a",eh,[e("digota"),r(n)])]),nh]),t("tr",null,[t("td",rh,[t("a",oh,[e("dot"),r(n)])]),lh]),t("tr",null,[t("td",sh,[t("a",ih,[e("doublejump"),r(n)])]),ah]),t("tr",null,[t("td",ch,[t("a",hh,[e("dragonboat"),r(n)])]),_h]),t("tr",null,[t("td",dh,[t("a",gh,[e("drmaa"),r(n)])]),uh]),t("tr",null,[t("td",ph,[t("a",yh,[e("dynamolock"),r(n)])]),xh]),t("tr",null,[t("td",bh,[t("a",fh,[e("dynatomic"),r(n)])]),mh]),t("tr",null,[t("td",kh,[t("a",Gh,[e("emitter-io"),r(n)])]),vh]),t("tr",null,[t("td",Eh,[t("a",Sh,[e("flowgraph"),r(n)])]),Ah]),t("tr",null,[t("td",wh,[t("a",Ph,[e("gleam"),r(n)])]),Ch]),t("tr",null,[t("td",Th,[t("a",Mh,[e("glow"),r(n)])]),jh]),t("tr",null,[t("td",Ih,[t("a",Bh,[e("go-health"),r(n)])]),Fh]),t("tr",null,[t("td",Oh,[t("a",Nh,[e("go-jump"),r(n)])]),Dh]),t("tr",null,[t("td",zh,[t("a",Rh,[e("go-kit"),r(n)])]),Lh]),t("tr",null,[t("td",Hh,[t("a",Jh,[e("go-sundheit"),r(n)])]),qh]),t("tr",null,[t("td",Uh,[t("a",Wh,[e("gorpc"),r(n)])]),Vh]),t("tr",null,[t("td",Xh,[t("a",Kh,[e("grpc-go"),r(n)])]),Qh]),t("tr",null,[t("td",Zh,[t("a",Yh,[e("hprose"),r(n)])]),$h]),t("tr",null,[t("td",t_,[t("a",e_,[e("jsonrpc"),r(n)])]),n_]),t("tr",null,[t("td",r_,[t("a",o_,[e("jsonrpc"),r(n)])]),l_]),t("tr",null,[t("td",s_,[t("a",i_,[e("KrakenD"),r(n)])]),a_]),t("tr",null,[t("td",c_,[t("a",h_,[e("liftbridge"),r(n)])]),__]),t("tr",null,[t("td",d_,[t("a",g_,[e("micro"),r(n)])]),u_]),t("tr",null,[t("td",p_,[t("a",y_,[e("NATS"),r(n)])]),x_]),t("tr",null,[t("td",b_,[t("a",f_,[e("outboxer"),r(n)])]),m_]),t("tr",null,[t("td",k_,[t("a",G_,[e("pglock"),r(n)])]),v_]),t("tr",null,[t("td",E_,[t("a",S_,[e("raft"),r(n)])]),A_]),t("tr",null,[t("td",w_,[t("a",P_,[e("raft"),r(n)])]),C_]),t("tr",null,[t("td",T_,[t("a",M_,[e("rain"),r(n)])]),j_]),t("tr",null,[t("td",I_,[t("a",B_,[e("redis-lock"),r(n)])]),F_]),t("tr",null,[t("td",O_,[t("a",N_,[e("resgate"),r(n)])]),D_]),t("tr",null,[t("td",z_,[t("a",R_,[e("ringpop-go"),r(n)])]),L_]),t("tr",null,[t("td",H_,[t("a",J_,[e("rpcx"),r(n)])]),q_]),t("tr",null,[t("td",U_,[t("a",W_,[e("sleuth"),r(n)])]),t("td",V_,[e("用于在HTTP服务之间进行无主p2p自动发现和RPC的库（"),t("a",X_,[e("ZeroMQ"),r(n)]),e("）。")])]),t("tr",null,[t("td",K_,[t("a",Q_,[e("tendermint"),r(n)])]),Z_]),t("tr",null,[t("td",Y_,[t("a",$_,[e("torrent"),r(n)])]),td])])]),ed,nd,t("table",null,[rd,t("tbody",null,[t("tr",null,[t("td",od,[t("a",ld,[e("chasquid"),r(n)])]),sd]),t("tr",null,[t("td",id,[t("a",ad,[e("douceur"),r(n)])]),cd]),t("tr",null,[t("td",hd,[t("a",_d,[e("email"),r(n)])]),dd]),t("tr",null,[t("td",gd,[t("a",ud,[e("go-dkim"),r(n)])]),pd]),t("tr",null,[t("td",yd,[t("a",xd,[e("go-imap"),r(n)])]),bd]),t("tr",null,[t("td",fd,[t("a",md,[e("go-message"),r(n)])]),kd]),t("tr",null,[t("td",Gd,[t("a",vd,[e("go-premailer"),r(n)])]),Ed]),t("tr",null,[t("td",Sd,[t("a",Ad,[e("go-simple-mail"),r(n)])]),wd]),t("tr",null,[t("td",Pd,[t("a",Cd,[e("Hectane"),r(n)])]),Td]),t("tr",null,[t("td",Md,[t("a",jd,[e("hermes"),r(n)])]),Id]),t("tr",null,[t("td",Bd,[t("a",Fd,[e("mailchain"),r(n)])]),Od]),t("tr",null,[t("td",Nd,[t("a",Dd,[e("mailgun-go"),r(n)])]),zd]),t("tr",null,[t("td",Rd,[t("a",Ld,[e("MailHog"),r(n)])]),Hd]),t("tr",null,[t("td",Jd,[t("a",qd,[e("SendGrid"),r(n)])]),Ud]),t("tr",null,[t("td",Wd,[t("a",Vd,[e("smtp"),r(n)])]),Xd])])]),Kd,Qd,t("table",null,[Zd,t("tbody",null,[t("tr",null,[t("td",Yd,[t("a",$d,[e("anko"),r(n)])]),tg]),t("tr",null,[t("td",eg,[t("a",ng,[e("binder"),r(n)])]),t("td",rg,[e("转到基于"),t("a",og,[e("gopher-lua"),r(n)]),e("的 Lua绑定库。")])]),t("tr",null,[t("td",lg,[t("a",sg,[e("cel-go"),r(n)])]),ig]),t("tr",null,[t("td",ag,[t("a",cg,[e("expr"),r(n)])]),hg]),t("tr",null,[t("td",_g,[t("a",dg,[e("gentee"),r(n)])]),gg]),t("tr",null,[t("td",ug,[t("a",pg,[e("gisp"),r(n)])]),yg]),t("tr",null,[t("td",xg,[t("a",bg,[e("go-duktape"),r(n)])]),fg]),t("tr",null,[t("td",mg,[t("a",kg,[e("go-lua"),r(n)])]),Gg]),t("tr",null,[t("td",vg,[t("a",Eg,[e("go-php"),r(n)])]),Sg]),t("tr",null,[t("td",Ag,[t("a",wg,[e("go-python"),r(n)])]),Pg]),t("tr",null,[t("td",Cg,[t("a",Tg,[e("golua"),r(n)])]),Mg]),t("tr",null,[t("td",jg,[t("a",Ig,[e("gopher-lua"),r(n)])]),Bg]),t("tr",null,[t("td",Fg,[t("a",Og,[e("gval"),r(n)])]),Ng]),t("tr",null,[t("td",Dg,[t("a",zg,[e("ngaro"),r(n)])]),Rg]),t("tr",null,[t("td",Lg,[t("a",Hg,[e("otto"),r(n)])]),Jg]),t("tr",null,[t("td",qg,[t("a",Ug,[e("purl"),r(n)])]),Wg]),t("tr",null,[t("td",Vg,[t("a",Xg,[e("tengo"),r(n)])]),Kg])])]),Qg,Zg,t("table",null,[Yg,t("tbody",null,[t("tr",null,[t("td",$g,[t("a",t1,[e("emperror"),r(n)])]),e1]),t("tr",null,[t("td",n1,[t("a",r1,[e("errlog"),r(n)])]),o1]),t("tr",null,[t("td",l1,[t("a",s1,[e("errors"),r(n)])]),t("td",i1,[t("a",a1,[e("下拉更换为标准库的错误包和github.com/pkg/errors。提供各种错误处理原语。"),r(n)])])]),t("tr",null,[t("td",c1,[t("a",h1,[e("errors"),r(n)])]),_1]),t("tr",null,[t("td",d1,[t("a",g1,[e("errors"),r(n)])]),u1]),t("tr",null,[t("td",p1,[t("a",y1,[e("errorx"),r(n)])]),x1]),t("tr",null,[t("td",b1,[t("a",f1,[e("Falcon"),r(n)])]),m1]),t("tr",null,[t("td",k1,[t("a",G1,[e("go-multierror"),r(n)])]),v1]),t("tr",null,[t("td",E1,[t("a",S1,[e("tracerr"),r(n)])]),A1]),t("tr",null,[t("td",w1,[t("a",P1,[e("werr"),r(n)])]),C1])])]),T1,M1,t("table",null,[j1,t("tbody",null,[t("tr",null,[t("td",I1,[t("a",B1,[e("afero"),r(n)])]),F1]),t("tr",null,[t("td",O1,[t("a",N1,[e("afs"),r(n)])]),D1]),t("tr",null,[t("td",z1,[t("a",R1,[e("bigfile"),r(n)])]),L1]),t("tr",null,[t("td",H1,[t("a",J1,[e("checksum"),r(n)])]),q1]),t("tr",null,[t("td",U1,[t("a",W1,[e("flop"),r(n)])]),t("td",V1,[e("文件操作库，旨在与"),t("a",X1,[e("GNU cp"),r(n)]),e("镜像功能奇偶校验。")])]),t("tr",null,[t("td",K1,[t("a",Q1,[e("go-csv-tag"),r(n)])]),Z1]),t("tr",null,[t("td",Y1,[t("a",$1,[e("go-decent-copy"),r(n)])]),tu]),t("tr",null,[t("td",eu,[t("a",nu,[e("go-exiftool"),r(n)])]),ru]),t("tr",null,[t("td",ou,[t("a",lu,[e("go-gtfs"),r(n)])]),su]),t("tr",null,[t("td",iu,[t("a",au,[e("notify"),r(n)])]),cu]),t("tr",null,[t("td",hu,[t("a",_u,[e("opc"),r(n)])]),du]),t("tr",null,[t("td",gu,[t("a",uu,[e("parquet"),r(n)])]),t("td",pu,[e("读取和写入 "),t("a",yu,[e("parquet"),r(n)]),e("文件。")])]),t("tr",null,[t("td",xu,[t("a",bu,[e("pdfcpu"),r(n)])]),fu]),t("tr",null,[t("td",mu,[t("a",ku,[e("skywalker"),r(n)])]),Gu]),t("tr",null,[t("td",vu,[t("a",Eu,[e("stl"),r(n)])]),Su]),t("tr",null,[t("td",Au,[t("a",wu,[e("tarfs"),r(n)])]),t("td",Pu,[e("tar文件"),t("a",Cu,[Tu,e(" interface"),r(n)]),e("接口的实现。")])]),t("tr",null,[t("td",Mu,[t("a",ju,[e("vfs"),r(n)])]),Iu])])]),Bu,Fu,t("table",null,[Ou,t("tbody",null,[t("tr",null,[t("td",Nu,[t("a",Du,[e("accounting"),r(n)])]),zu]),t("tr",null,[t("td",Ru,[t("a",Lu,[e("currency"),r(n)])]),Hu]),t("tr",null,[t("td",Ju,[t("a",qu,[e("decimal"),r(n)])]),Uu]),t("tr",null,[t("td",Wu,[t("a",Vu,[e("go-finance"),r(n)])]),Xu]),t("tr",null,[t("td",Ku,[t("a",Qu,[e("go-finance"),r(n)])]),Zu]),t("tr",null,[t("td",Yu,[t("a",$u,[e("go-finance"),r(n)])]),tp]),t("tr",null,[t("td",ep,[t("a",np,[e("go-money"),r(n)])]),rp]),t("tr",null,[t("td",op,[t("a",lp,[e("ofxgo"),r(n)])]),sp]),t("tr",null,[t("td",ip,[t("a",ap,[e("orderbook"),r(n)])]),cp]),t("tr",null,[t("td",hp,[t("a",_p,[e("techan"),r(n)])]),dp]),t("tr",null,[t("td",gp,[t("a",up,[e("transaction"),r(n)])]),pp]),t("tr",null,[t("td",yp,[t("a",xp,[e("vat"),r(n)])]),bp])])]),fp,mp,t("table",null,[kp,t("tbody",null,[t("tr",null,[t("td",Gp,[t("a",vp,[e("Azul3D"),r(n)])]),Ep]),t("tr",null,[t("td",Sp,[t("a",Ap,[e("Ebiten"),r(n)])]),wp]),t("tr",null,[t("td",Pp,[t("a",Cp,[e("engo"),r(n)])]),Tp]),t("tr",null,[t("td",Mp,[t("a",jp,[e("g3n"),r(n)])]),Ip]),t("tr",null,[t("td",Bp,[t("a",Fp,[e("GarageEngine"),r(n)])]),Op]),t("tr",null,[t("td",Np,[t("a",Dp,[e("glop"),r(n)])]),zp]),t("tr",null,[t("td",Rp,[t("a",Lp,[e("go-astar"),r(n)])]),Hp]),t("tr",null,[t("td",Jp,[t("a",qp,[e("go-collada"),r(n)])]),Up]),t("tr",null,[t("td",Wp,[t("a",Vp,[e("go-sdl2"),r(n)])]),t("td",Xp,[t("a",Kp,[e("Simple DirectMedia Layer"),r(n)]),e("的 Go绑定。")])]),t("tr",null,[t("td",Qp,[t("a",Zp,[e("go3d"),r(n)])]),Yp]),t("tr",null,[t("td",$p,[t("a",ty,[e("gonet"),r(n)])]),ey]),t("tr",null,[t("td",ny,[t("a",ry,[e("goworld"),r(n)])]),oy]),t("tr",null,[t("td",ly,[t("a",sy,[e("Leaf"),r(n)])]),iy]),t("tr",null,[t("td",ay,[t("a",cy,[e("nano"),r(n)])]),hy]),t("tr",null,[t("td",_y,[t("a",dy,[e("Oak"),r(n)])]),gy]),t("tr",null,[t("td",uy,[t("a",py,[e("Pitaya"),r(n)])]),yy]),t("tr",null,[t("td",xy,[t("a",by,[e("Pixel"),r(n)])]),fy]),t("tr",null,[t("td",my,[t("a",ky,[e("raylib-go"),r(n)])]),Gy]),t("tr",null,[t("td",vy,[t("a",Ey,[e("termloop"),r(n)])]),Sy])])]),Ay,wy,t("table",null,[Py,t("tbody",null,[t("tr",null,[t("td",Cy,[t("a",Ty,[e("geocache"),r(n)])]),My]),t("tr",null,[t("td",jy,[t("a",Iy,[e("geoserver"),r(n)])]),By]),t("tr",null,[t("td",Fy,[t("a",Oy,[e("gismanager"),r(n)])]),Ny]),t("tr",null,[t("td",Dy,[t("a",zy,[e("osm"),r(n)])]),Ry]),t("tr",null,[t("td",Ly,[t("a",Hy,[e("pbf"),r(n)])]),Jy]),t("tr",null,[t("td",qy,[t("a",Uy,[e("S2 geometry"),r(n)])]),Wy]),t("tr",null,[t("td",Vy,[t("a",Xy,[e("Tile38"),r(n)])]),Ky]),t("tr",null,[t("td",Qy,[t("a",Zy,[e("WGS84"),r(n)])]),Yy])])]),$y,tx,t("table",null,[ex,t("tbody",null,[t("tr",null,[t("td",nx,[t("a",rx,[e("c4go"),r(n)])]),ox]),t("tr",null,[t("td",lx,[t("a",sx,[e("f4go"),r(n)])]),ix]),t("tr",null,[t("td",ax,[t("a",cx,[e("gopherjs"),r(n)])]),hx]),t("tr",null,[t("td",_x,[t("a",dx,[e("llgo"),r(n)])]),gx]),t("tr",null,[t("td",ux,[t("a",px,[e("tardisgo"),r(n)])]),yx])])]),xx,bx,t("table",null,[fx,t("tbody",null,[t("tr",null,[t("td",mx,[t("a",kx,[e("ants"),r(n)])]),Gx]),t("tr",null,[t("td",vx,[t("a",Ex,[e("artifex"),r(n)])]),Sx]),t("tr",null,[t("td",Ax,[t("a",wx,[e("async"),r(n)])]),Px]),t("tr",null,[t("td",Cx,[t("a",Tx,[e("breaker"),r(n)])]),Mx]),t("tr",null,[t("td",jx,[t("a",Ix,[e("cyclicbarrier"),r(n)])]),Bx]),t("tr",null,[t("td",Fx,[t("a",Ox,[e("go-floc"),r(n)])]),Nx]),t("tr",null,[t("td",Dx,[t("a",zx,[e("go-flow"),r(n)])]),Rx]),t("tr",null,[t("td",Lx,[t("a",Hx,[e("go-tools/multithreading"),r(n)])]),Jx]),t("tr",null,[t("td",qx,[t("a",Ux,[e("go-trylock"),r(n)])]),Wx]),t("tr",null,[t("td",Vx,[t("a",Xx,[e("go-waitgroup"),r(n)])]),Kx]),t("tr",null,[t("td",Qx,[t("a",Zx,[e("gohive"),r(n)])]),Yx]),t("tr",null,[t("td",$x,[t("a",tb,[e("gollback"),r(n)])]),eb]),t("tr",null,[t("td",nb,[t("a",rb,[e("GoSlaves"),r(n)])]),ob]),t("tr",null,[t("td",lb,[t("a",sb,[e("goworker"),r(n)])]),ib]),t("tr",null,[t("td",ab,[t("a",cb,[e("gowp"),r(n)])]),hb]),t("tr",null,[t("td",_b,[t("a",db,[e("gpool"),r(n)])]),gb]),t("tr",null,[t("td",ub,[t("a",pb,[e("grpool"),r(n)])]),yb]),t("tr",null,[t("td",xb,[t("a",bb,[e("Hunch"),r(n)])]),fb]),t("tr",null,[t("td",mb,[t("a",kb,[e("oversight"),r(n)])]),Gb]),t("tr",null,[t("td",vb,[t("a",Eb,[e("parallel-fn"),r(n)])]),Sb]),t("tr",null,[t("td",Ab,[t("a",wb,[e("pool"),r(n)])]),Pb]),t("tr",null,[t("td",Cb,[t("a",Tb,[e("queue"),r(n)])]),Mb]),t("tr",null,[t("td",jb,[t("a",Ib,[e("routine"),r(n)])]),Bb]),t("tr",null,[t("td",Fb,[t("a",Ob,[e("semaphore"),r(n)])]),Nb]),t("tr",null,[t("td",Db,[t("a",zb,[e("semaphore"),r(n)])]),Rb]),t("tr",null,[t("td",Lb,[t("a",Hb,[e("stl"),r(n)])]),Jb]),t("tr",null,[t("td",qb,[t("a",Ub,[e("threadpool"),r(n)])]),Wb]),t("tr",null,[t("td",Vb,[t("a",Xb,[e("tunny"),r(n)])]),Kb]),t("tr",null,[t("td",Qb,[t("a",Zb,[e("worker-pool"),r(n)])]),Yb]),t("tr",null,[t("td",$b,[t("a",tf,[e("workerpool"),r(n)])]),ef])])]),nf,rf,t("table",null,[of,t("tbody",null,[t("tr",null,[t("td",lf,[t("a",sf,[e("app"),r(n)])]),af]),t("tr",null,[t("td",cf,[t("a",hf,[e("fyne"),r(n)])]),_f]),t("tr",null,[t("td",df,[t("a",gf,[e("go-astilectron"),r(n)])]),uf]),t("tr",null,[t("td",pf,[t("a",yf,[e("go-gtk"),r(n)])]),xf]),t("tr",null,[t("td",bf,[t("a",ff,[e("go-sciter"),r(n)])]),mf]),t("tr",null,[t("td",kf,[t("a",Gf,[e("gotk3"),r(n)])]),vf]),t("tr",null,[t("td",Ef,[t("a",Sf,[e("gowd"),r(n)])]),Af]),t("tr",null,[t("td",wf,[t("a",Pf,[e("qt"),r(n)])]),Cf]),t("tr",null,[t("td",Tf,[t("a",Mf,[e("ui"),r(n)])]),jf]),t("tr",null,[t("td",If,[t("a",Bf,[e("Wails"),r(n)])]),Ff]),t("tr",null,[t("td",Of,[t("a",Nf,[e("walk"),r(n)])]),Df]),t("tr",null,[t("td",zf,[t("a",Rf,[e("webview"),r(n)])]),Lf]),t("tr",null,[t("td",Hf,[t("a",Jf,[e("go-appindicator"),r(n)])]),qf]),t("tr",null,[t("td",Uf,[t("a",Wf,[e("gosx-notifier"),r(n)])]),Vf]),t("tr",null,[t("td",Xf,[t("a",Kf,[e("mac-activity-tracker"),r(n)])]),Qf]),t("tr",null,[t("td",Zf,[t("a",Yf,[e("mac-sleep-notifier"),r(n)])]),$f]),t("tr",null,[t("td",tm,[t("a",em,[e("robotgo"),r(n)])]),nm]),t("tr",null,[t("td",rm,[t("a",om,[e("systray"),r(n)])]),lm]),t("tr",null,[t("td",sm,[t("a",im,[e("trayhost"),r(n)])]),am])])]),cm,hm,t("table",null,[_m,t("tbody",null,[t("tr",null,[t("td",dm,[t("a",gm,[e("bild"),r(n)])]),um]),t("tr",null,[t("td",pm,[t("a",ym,[e("bimg"),r(n)])]),xm]),t("tr",null,[t("td",bm,[t("a",fm,[e("cameron"),r(n)])]),mm]),t("tr",null,[t("td",km,[t("a",Gm,[e("canvas"),r(n)])]),vm]),t("tr",null,[t("td",Em,[t("a",Sm,[e("darkroom"),r(n)])]),Am]),t("tr",null,[t("td",wm,[t("a",Pm,[e("geopattern"),r(n)])]),Cm]),t("tr",null,[t("td",Tm,[t("a",Mm,[e("gg"),r(n)])]),jm]),t("tr",null,[t("td",Im,[t("a",Bm,[e("gift"),r(n)])]),Fm]),t("tr",null,[t("td",Om,[t("a",Nm,[e("gltf"),r(n)])]),Dm]),t("tr",null,[t("td",zm,[t("a",Rm,[e("go-cairo"),r(n)])]),Lm]),t("tr",null,[t("td",Hm,[t("a",Jm,[e("go-gd"),r(n)])]),qm]),t("tr",null,[t("td",Um,[t("a",Wm,[e("go-nude"),r(n)])]),Vm]),t("tr",null,[t("td",Xm,[t("a",Km,[e("go-opencv"),r(n)])]),Qm]),t("tr",null,[t("td",Zm,[t("a",Ym,[e("go-webcolors"),r(n)])]),$m]),t("tr",null,[t("td",tk,[t("a",ek,[e("gocv"),r(n)])]),nk]),t("tr",null,[t("td",rk,[t("a",ok,[e("goimagehash"),r(n)])]),lk]),t("tr",null,[t("td",sk,[t("a",ik,[e("goimghdr"),r(n)])]),ak]),t("tr",null,[t("td",ck,[t("a",hk,[e("govatar"),r(n)])]),_k]),t("tr",null,[t("td",dk,[t("a",gk,[e("image2ascii"),r(n)])]),uk]),t("tr",null,[t("td",pk,[t("a",yk,[e("imagick"),r(n)])]),xk]),t("tr",null,[t("td",bk,[t("a",fk,[e("imaginary"),r(n)])]),mk]),t("tr",null,[t("td",kk,[t("a",Gk,[e("imaging"),r(n)])]),vk]),t("tr",null,[t("td",Ek,[t("a",Sk,[e("img"),r(n)])]),Ak]),t("tr",null,[t("td",wk,[t("a",Pk,[e("ln"),r(n)])]),Ck]),t("tr",null,[t("td",Tk,[t("a",Mk,[e("mergi"),r(n)])]),jk]),t("tr",null,[t("td",Ik,[t("a",Bk,[e("mort"),r(n)])]),Fk]),t("tr",null,[t("td",Ok,[t("a",Nk,[e("mpo"),r(n)])]),Dk]),t("tr",null,[t("td",zk,[t("a",Rk,[e("picfit"),r(n)])]),Lk]),t("tr",null,[t("td",Hk,[t("a",Jk,[e("pt"),r(n)])]),qk]),t("tr",null,[t("td",Uk,[t("a",Wk,[e("resize"),r(n)])]),Vk]),t("tr",null,[t("td",Xk,[t("a",Kk,[e("rez"),r(n)])]),Qk]),t("tr",null,[t("td",Zk,[t("a",Yk,[e("smartcrop"),r(n)])]),$k]),t("tr",null,[t("td",t2,[t("a",e2,[e("steganography"),r(n)])]),n2]),t("tr",null,[t("td",r2,[t("a",o2,[e("stegify"),r(n)])]),l2]),t("tr",null,[t("td",s2,[t("a",i2,[e("svgo"),r(n)])]),a2]),t("tr",null,[t("td",c2,[t("a",h2,[e("tga"),r(n)])]),_2])])]),d2,g2,t("table",null,[u2,t("tbody",null,[t("tr",null,[t("td",p2,[t("a",y2,[e("connectordb"),r(n)])]),x2]),t("tr",null,[t("td",b2,[t("a",f2,[e("devices"),r(n)])]),m2]),t("tr",null,[t("td",k2,[t("a",G2,[e("eywa"),r(n)])]),v2]),t("tr",null,[t("td",E2,[t("a",S2,[e("flogo"),r(n)])]),A2]),t("tr",null,[t("td",w2,[t("a",P2,[e("gatt"),r(n)])]),C2]),t("tr",null,[t("td",T2,[t("a",M2,[e("gobot"),r(n)])]),j2]),t("tr",null,[t("td",I2,[t("a",B2,[e("huego"),r(n)])]),F2]),t("tr",null,[t("td",O2,[t("a",N2,[e("iot"),r(n)])]),D2]),t("tr",null,[t("td",z2,[t("a",R2,[e("mainflux"),r(n)])]),L2]),t("tr",null,[t("td",H2,[t("a",J2,[e("periph"),r(n)])]),q2]),t("tr",null,[t("td",U2,[t("a",W2,[e("sensorbee"),r(n)])]),V2])])]),X2,K2,t("table",null,[Q2,t("tbody",null,[t("tr",null,[t("td",Z2,[t("a",Y2,[e("ajson"),r(n)])]),$2]),t("tr",null,[t("td",t3,[t("a",e3,[e("gjo"),r(n)])]),n3]),t("tr",null,[t("td",r3,[t("a",o3,[e("GJSON"),r(n)])]),l3]),t("tr",null,[t("td",s3,[t("a",i3,[e("go-jsonerror"),r(n)])]),a3]),t("tr",null,[t("td",c3,[t("a",h3,[e("go-respond"),r(n)])]),_3]),t("tr",null,[t("td",d3,[t("a",g3,[e("gojq"),r(n)])]),u3]),t("tr",null,[t("td",p3,[t("a",y3,[e("gojson"),r(n)])]),x3]),t("tr",null,[t("td",b3,[t("a",f3,[e("JayDiff"),r(n)])]),m3]),t("tr",null,[t("td",k3,[t("a",G3,[e("jettison"),r(n)])]),v3]),t("tr",null,[t("td",E3,[t("a",S3,[e("JSON-to-Go"),r(n)])]),A3]),t("tr",null,[t("td",w3,[t("a",P3,[e("json2go"),r(n)])]),C3]),t("tr",null,[t("td",T3,[t("a",M3,[e("jsonapi-errors"),r(n)])]),j3]),t("tr",null,[t("td",I3,[t("a",B3,[e("jsonf"),r(n)])]),F3]),t("tr",null,[t("td",O3,[t("a",N3,[e("jsongo"),r(n)])]),D3]),t("tr",null,[t("td",z3,[t("a",R3,[e("jsonhal"),r(n)])]),L3]),t("tr",null,[t("td",H3,[t("a",J3,[e("kazaam"),r(n)])]),q3]),t("tr",null,[t("td",U3,[t("a",W3,[e("mp"),r(n)])]),V3])])]),X3,K3,t("table",null,[Q3,t("tbody",null,[t("tr",null,[t("td",Z3,[t("a",Y3,[e("bayesian"),r(n)])]),$3]),t("tr",null,[t("td",t5,[t("a",e5,[e("CloudForest"),r(n)])]),n5]),t("tr",null,[t("td",r5,[t("a",o5,[e("eaopt"),r(n)])]),l5]),t("tr",null,[t("td",s5,[t("a",i5,[e("evoli"),r(n)])]),a5]),t("tr",null,[t("td",c5,[t("a",h5,[e("fonet"),r(n)])]),_5]),t("tr",null,[t("td",d5,[t("a",g5,[e("go-cluster"),r(n)])]),u5]),t("tr",null,[t("td",p5,[t("a",y5,[e("go-deep"),r(n)])]),x5]),t("tr",null,[t("td",b5,[t("a",f5,[e("go-fann"),r(n)])]),m5]),t("tr",null,[t("td",k5,[t("a",G5,[e("go-galib"),r(n)])]),v5]),t("tr",null,[t("td",E5,[t("a",S5,[e("go-pr"),r(n)])]),A5]),t("tr",null,[t("td",w5,[t("a",P5,[e("gobrain"),r(n)])]),C5]),t("tr",null,[t("td",T5,[t("a",M5,[e("godist"),r(n)])]),j5]),t("tr",null,[t("td",I5,[t("a",B5,[e("goga"),r(n)])]),F5]),t("tr",null,[t("td",O5,[t("a",N5,[e("GoLearn"),r(n)])]),D5]),t("tr",null,[t("td",z5,[t("a",R5,[e("golinear"),r(n)])]),L5]),t("tr",null,[t("td",H5,[t("a",J5,[e("GoMind"),r(n)])]),q5]),t("tr",null,[t("td",U5,[t("a",W5,[e("goml"),r(n)])]),V5]),t("tr",null,[t("td",X5,[t("a",K5,[e("Goptuna"),r(n)])]),Q5]),t("tr",null,[t("td",Z5,[t("a",Y5,[e("goRecommend"),r(n)])]),$5]),t("tr",null,[t("td",t8,[t("a",e8,[e("gorgonia"),r(n)])]),n8]),t("tr",null,[t("td",r8,[t("a",o8,[e("gorse"),r(n)])]),l8]),t("tr",null,[t("td",s8,[t("a",i8,[e("goscore"),r(n)])]),a8]),t("tr",null,[t("td",c8,[t("a",h8,[e("gosseract"),r(n)])]),_8]),t("tr",null,[t("td",d8,[t("a",g8,[e("libsvm"),r(n)])]),u8]),t("tr",null,[t("td",p8,[t("a",y8,[e("neat"),r(n)])]),x8]),t("tr",null,[t("td",b8,[t("a",f8,[e("neural-go"),r(n)])]),m8]),t("tr",null,[t("td",k8,[t("a",G8,[e("ocrserver"),r(n)])]),v8]),t("tr",null,[t("td",E8,[t("a",S8,[e("onnx-go"),r(n)])]),A8]),t("tr",null,[t("td",w8,[t("a",P8,[e("probab"),r(n)])]),C8]),t("tr",null,[t("td",T8,[t("a",M8,[e("regommend"),r(n)])]),j8]),t("tr",null,[t("td",I8,[t("a",B8,[e("shield"),r(n)])]),F8]),t("tr",null,[t("td",O8,[t("a",N8,[e("tfgo"),r(n)])]),D8]),t("tr",null,[t("td",z8,[t("a",R8,[e("Varis"),r(n)])]),L8])])]),H8,J8,t("table",null,[q8,t("tbody",null,[t("tr",null,[t("td",U8,[t("a",W8,[e("unioffice"),r(n)])]),V8]),t("tr",null,[t("td",X8,[t("a",K8,[e("excelize"),r(n)])]),Q8]),t("tr",null,[t("td",Z8,[t("a",Y8,[e("go-excel"),r(n)])]),$8]),t("tr",null,[t("td",t4,[t("a",e4,[e("goxlsxwriter"),r(n)])]),n4]),t("tr",null,[t("td",r4,[t("a",o4,[e("xlsx"),r(n)])]),l4]),t("tr",null,[t("td",s4,[t("a",i4,[e("xlsx"),r(n)])]),a4])])]),c4,h4,t("table",null,[_4,t("tbody",null,[t("tr",null,[t("td",d4,[t("a",g4,[e("getlang"),r(n)])]),u4]),t("tr",null,[t("td",p4,[t("a",y4,[e("go-i18n"),r(n)])]),x4]),t("tr",null,[t("td",b4,[t("a",f4,[e("go-mystem"),r(n)])]),m4]),t("tr",null,[t("td",k4,[t("a",G4,[e("go-nlp"),r(n)])]),v4]),t("tr",null,[t("td",E4,[t("a",S4,[e("go-pinyin"),r(n)])]),A4]),t("tr",null,[t("td",w4,[t("a",P4,[e("go-stem"),r(n)])]),C4]),t("tr",null,[t("td",T4,[t("a",M4,[e("go-unidecode"),r(n)])]),j4]),t("tr",null,[t("td",I4,[t("a",B4,[e("go2vec"),r(n)])]),F4]),t("tr",null,[t("td",O4,[t("a",N4,[e("gojieba"),r(n)])]),D4]),t("tr",null,[t("td",z4,[t("a",R4,[e("golibstemmer"),r(n)])]),L4]),t("tr",null,[t("td",H4,[t("a",J4,[e("gotokenizer"),r(n)])]),q4]),t("tr",null,[t("td",U4,[t("a",W4,[e("gounidecode"),r(n)])]),V4]),t("tr",null,[t("td",X4,[t("a",K4,[e("gse"),r(n)])]),Q4]),t("tr",null,[t("td",Z4,[t("a",Y4,[e("icu"),r(n)])]),$4]),t("tr",null,[t("td",t6,[t("a",e6,[e("kagome"),r(n)])]),n6]),t("tr",null,[t("td",r6,[t("a",o6,[e("libtextcat"),r(n)])]),l6]),t("tr",null,[t("td",s6,[t("a",i6,[e("MMSEGO"),r(n)])]),a6]),t("tr",null,[t("td",c6,[t("a",h6,[e("nlp"),r(n)])]),_6]),t("tr",null,[t("td",d6,[t("a",g6,[e("nlp"),r(n)])]),u6]),t("tr",null,[t("td",p6,[t("a",y6,[e("paicehusk"),r(n)])]),x6]),t("tr",null,[t("td",b6,[t("a",f6,[e("petrovich"),r(n)])]),m6]),t("tr",null,[t("td",k6,[t("a",G6,[e("porter"),r(n)])]),v6]),t("tr",null,[t("td",E6,[t("a",S6,[e("porter2"),r(n)])]),A6]),t("tr",null,[t("td",w6,[t("a",P6,[e("prose"),r(n)])]),C6]),t("tr",null,[t("td",T6,[t("a",M6,[e("RAKE.go"),r(n)])]),j6]),t("tr",null,[t("td",I6,[t("a",B6,[e("segment"),r(n)])]),F6]),t("tr",null,[t("td",O6,[t("a",N6,[e("sentences"),r(n)])]),D6]),t("tr",null,[t("td",z6,[t("a",R6,[e("shamoji"),r(n)])]),L6]),t("tr",null,[t("td",H6,[t("a",J6,[e("snowball"),r(n)])]),q6]),t("tr",null,[t("td",U6,[t("a",W6,[e("stemmer"),r(n)])]),V6]),t("tr",null,[t("td",X6,[t("a",K6,[e("textcat"),r(n)])]),Q6]),t("tr",null,[t("td",Z6,[t("a",Y6,[e("whatlanggo"),r(n)])]),$6]),t("tr",null,[t("td",t7,[t("a",e7,[e("when"),r(n)])]),n7])])]),r7,o7,t("table",null,[l7,t("tbody",null,[t("tr",null,[t("td",s7,[t("a",i7,[e("arp"),r(n)])]),a7]),t("tr",null,[t("td",c7,[t("a",h7,[e("buffstreams"),r(n)])]),_7]),t("tr",null,[t("td",d7,[t("a",g7,[e("canopus"),r(n)])]),u7]),t("tr",null,[t("td",p7,[t("a",y7,[e("cidranger"),r(n)])]),x7]),t("tr",null,[t("td",b7,[t("a",f7,[e("dhcp6"),r(n)])]),m7]),t("tr",null,[t("td",k7,[t("a",G7,[e("dns"),r(n)])]),v7]),t("tr",null,[t("td",E7,[t("a",S7,[e("ether"),r(n)])]),A7]),t("tr",null,[t("td",w7,[t("a",P7,[e("ethernet"),r(n)])]),C7]),t("tr",null,[t("td",T7,[t("a",M7,[e("fasthttp"),r(n)])]),j7]),t("tr",null,[t("td",I7,[t("a",B7,[e("fortio"),r(n)])]),F7]),t("tr",null,[t("td",O7,[t("a",N7,[e("ftp"),r(n)])]),D7]),t("tr",null,[t("td",z7,[t("a",R7,[e("gev"),r(n)])]),L7]),t("tr",null,[t("td",H7,[t("a",J7,[e("gmqtt"),r(n)])]),q7]),t("tr",null,[t("td",U7,[t("a",W7,[e("gnet"),r(n)])]),V7]),t("tr",null,[t("td",X7,[t("a",K7,[e("gNxI"),r(n)])]),Q7]),t("tr",null,[t("td",Z7,[t("a",Y7,[e("go-getter"),r(n)])]),$7]),t("tr",null,[t("td",t0,[t("a",e0,[e("go-powerdns"),r(n)])]),n0]),t("tr",null,[t("td",r0,[t("a",o0,[e("go-stun"),r(n)])]),l0]),t("tr",null,[t("td",s0,[t("a",i0,[e("gobgp"),r(n)])]),a0]),t("tr",null,[t("td",c0,[t("a",h0,[e("golibwireshark"),r(n)])]),_0]),t("tr",null,[t("td",d0,[t("a",g0,[e("gopacket"),r(n)])]),u0]),t("tr",null,[t("td",p0,[t("a",y0,[e("gopcap"),r(n)])]),x0]),t("tr",null,[t("td",b0,[t("a",f0,[e("goshark"),r(n)])]),m0]),t("tr",null,[t("td",k0,[t("a",G0,[e("gosnmp"),r(n)])]),v0]),t("tr",null,[t("td",E0,[t("a",S0,[e("gosocsvr"),r(n)])]),A0]),t("tr",null,[t("td",w0,[t("a",P0,[e("gotcp"),r(n)])]),C0]),t("tr",null,[t("td",T0,[t("a",M0,[e("grab"),r(n)])]),j0]),t("tr",null,[t("td",I0,[t("a",B0,[e("graval"),r(n)])]),F0]),t("tr",null,[t("td",O0,[t("a",N0,[e("HTTPLab"),r(n)])]),D0]),t("tr",null,[t("td",z0,[t("a",R0,[e("iplib"),r(n)])]),L0]),t("tr",null,[t("td",H0,[t("a",J0,[e("jazigo"),r(n)])]),q0]),t("tr",null,[t("td",U0,[t("a",W0,[e("kcp-go"),r(n)])]),V0]),t("tr",null,[t("td",X0,[t("a",K0,[e("kcptun"),r(n)])]),Q0]),t("tr",null,[t("td",Z0,[t("a",Y0,[e("lhttp"),r(n)])]),$0]),t("tr",null,[t("td",t9,[t("a",e9,[e("linkio"),r(n)])]),n9]),t("tr",null,[t("td",r9,[t("a",o9,[e("llb"),r(n)])]),l9]),t("tr",null,[t("td",s9,[t("a",i9,[e("mdns"),r(n)])]),a9]),t("tr",null,[t("td",c9,[t("a",h9,[e("mqttPaho"),r(n)])]),_9]),t("tr",null,[t("td",d9,[t("a",g9,[e("NFF-Go"),r(n)])]),u9]),t("tr",null,[t("td",p9,[t("a",y9,[e("packet"),r(n)])]),x9]),t("tr",null,[t("td",b9,[t("a",f9,[e("peerdiscovery"),r(n)])]),m9]),t("tr",null,[t("td",k9,[t("a",G9,[e("portproxy"),r(n)])]),v9]),t("tr",null,[t("td",E9,[t("a",S9,[e("publicip"),r(n)])]),A9]),t("tr",null,[t("td",w9,[t("a",P9,[e("quic-go"),r(n)])]),C9]),t("tr",null,[t("td",T9,[t("a",M9,[e("raw"),r(n)])]),j9]),t("tr",null,[t("td",I9,[t("a",B9,[e("sftp"),r(n)])]),t("td",F9,[e("程序包sftp实现SSH文件传输协议，如"),t("a",O9,[e("https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt"),r(n)])])]),t("tr",null,[t("td",N9,[t("a",D9,[e("ssh"),r(n)])]),z9]),t("tr",null,[t("td",R9,[t("a",L9,[e("sslb"),r(n)])]),H9]),t("tr",null,[t("td",J9,[t("a",q9,[e("stun"),r(n)])]),U9]),t("tr",null,[t("td",W9,[t("a",V9,[e("tcp_server"),r(n)])]),X9]),t("tr",null,[t("td",K9,[t("a",Q9,[e("tspool"),r(n)])]),Z9]),t("tr",null,[t("td",Y9,[t("a",$9,[e("utp"),r(n)])]),tG]),t("tr",null,[t("td",eG,[t("a",nG,[e("water"),r(n)])]),rG]),t("tr",null,[t("td",oG,[t("a",lG,[e("webrtc"),r(n)])]),sG]),t("tr",null,[t("td",iG,[t("a",aG,[e("winrm"),r(n)])]),cG]),t("tr",null,[t("td",hG,[t("a",_G,[e("xtcp"),r(n)])]),dG])])]),gG,uG,t("table",null,[pG,t("tbody",null,[t("tr",null,[t("td",yG,[t("a",xG,[e("go-astisub"),r(n)])]),bG]),t("tr",null,[t("td",fG,[t("a",mG,[e("go-astits"),r(n)])]),kG]),t("tr",null,[t("td",GG,[t("a",vG,[e("go-m3u8"),r(n)])]),EG]),t("tr",null,[t("td",SG,[t("a",AG,[e("goav"),r(n)])]),wG]),t("tr",null,[t("td",PG,[t("a",CG,[e("gst"),r(n)])]),TG]),t("tr",null,[t("td",MG,[t("a",jG,[e("libgosubs"),r(n)])]),IG]),t("tr",null,[t("td",BG,[t("a",FG,[e("libvlc-go"),r(n)])]),OG]),t("tr",null,[t("td",NG,[t("a",DG,[e("m3u8"),r(n)])]),zG]),t("tr",null,[t("td",RG,[t("a",LG,[e("v4l"),r(n)])]),HG])])]),JG])}const KG=l(c,[["render",qG],["__file","常用包大全.html.vue"]]),QG=JSON.parse('{"path":"/golang/%E5%B8%B8%E7%94%A8%E5%8C%85%E5%A4%A7%E5%85%A8.html","title":"常用包和第三方包介绍","lang":"zh-CN","frontmatter":{"description":"常用包和第三方包介绍 包 常用官方包说明 常用第三方包说明 常用框架 完整标准库列表 优秀的第三方库 音频和音乐 数据结构:Go中的通用数据结构和算法 分布式系统:Go中的通用数据结构和算法 电子邮件:实现电子邮件创建和发送的库和工具 嵌入式脚本语言:在go代码中嵌入其他语言 错误处理 处理文件和文件系统的库 金融:会计和财务软件包 游戏开发:游戏开发...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E5%B8%B8%E7%94%A8%E5%8C%85%E5%A4%A7%E5%85%A8.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"常用包和第三方包介绍"}],["meta",{"property":"og:description","content":"常用包和第三方包介绍 包 常用官方包说明 常用第三方包说明 常用框架 完整标准库列表 优秀的第三方库 音频和音乐 数据结构:Go中的通用数据结构和算法 分布式系统:Go中的通用数据结构和算法 电子邮件:实现电子邮件创建和发送的库和工具 嵌入式脚本语言:在go代码中嵌入其他语言 错误处理 处理文件和文件系统的库 金融:会计和财务软件包 游戏开发:游戏开发..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-22T10:29:27.000Z"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:modified_time","content":"2024-02-22T10:29:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用包和第三方包介绍\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-22T10:29:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/golang/%E5%B8%B8%E7%94%A8%E5%8C%85%E5%A4%A7%E5%85%A8.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E5%B8%B8%E7%94%A8%E5%8C%85%E5%A4%A7%E5%85%A8.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"常用包和第三方包介绍"}],["meta",{"property":"og:description","content":"常用包和第三方包介绍 包 常用官方包说明 常用第三方包说明 常用框架 完整标准库列表 优秀的第三方库 音频和音乐 数据结构:Go中的通用数据结构和算法 分布式系统:Go中的通用数据结构和算法 电子邮件:实现电子邮件创建和发送的库和工具 嵌入式脚本语言:在go代码中嵌入其他语言 错误处理 处理文件和文件系统的库 金融:会计和财务软件包 游戏开发:游戏开发..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-22T10:29:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-22T10:29:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常用包和第三方包介绍\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-22T10:29:27.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"常用包","slug":"常用包","link":"#常用包","children":[]},{"level":2,"title":"常用第三方包","slug":"常用第三方包","link":"#常用第三方包","children":[]},{"level":2,"title":"必看项目","slug":"必看项目","link":"#必看项目","children":[]},{"level":2,"title":"完整标准库列表","slug":"完整标准库列表","link":"#完整标准库列表","children":[]},{"level":2,"title":"其他优秀的开源工具分类","slug":"其他优秀的开源工具分类","link":"#其他优秀的开源工具分类","children":[{"level":3,"title":"音频和音乐","slug":"音频和音乐","link":"#音频和音乐","children":[]},{"level":3,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":3,"title":"分布式系统","slug":"分布式系统","link":"#分布式系统","children":[]},{"level":3,"title":"电子邮件","slug":"电子邮件","link":"#电子邮件","children":[]},{"level":3,"title":"嵌入式脚本语言","slug":"嵌入式脚本语言","link":"#嵌入式脚本语言","children":[]},{"level":3,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[]},{"level":3,"title":"文件","slug":"文件","link":"#文件","children":[]},{"level":3,"title":"金融","slug":"金融","link":"#金融","children":[]},{"level":3,"title":"游戏开发","slug":"游戏开发","link":"#游戏开发","children":[]},{"level":3,"title":"地理位置","slug":"地理位置","link":"#地理位置","children":[]},{"level":3,"title":"编译器","slug":"编译器","link":"#编译器","children":[]},{"level":3,"title":"Goroutines","slug":"goroutines","link":"#goroutines","children":[]},{"level":3,"title":"图形界面","slug":"图形界面","link":"#图形界面","children":[]},{"level":3,"title":"图片","slug":"图片","link":"#图片","children":[]},{"level":3,"title":"物联网","slug":"物联网","link":"#物联网","children":[]},{"level":3,"title":"JSON格式","slug":"json格式","link":"#json格式","children":[]},{"level":3,"title":"机器学习","slug":"机器学习","link":"#机器学习","children":[]},{"level":3,"title":"金融","slug":"金融-1","link":"#金融-1","children":[]},{"level":3,"title":"自然语言处理","slug":"自然语言处理","link":"#自然语言处理","children":[]},{"level":3,"title":"网络","slug":"网络","link":"#网络","children":[]},{"level":3,"title":"视频库","slug":"视频库","link":"#视频库","children":[]}]}],"git":{"createdTime":1708597767000,"updatedTime":1708597767000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":1}]},"readingTime":{"minutes":44.15,"words":13246},"filePathRelative":"golang/常用包大全.md","localizedDate":"2024年2月22日","autoDesc":true}');export{KG as comp,QG as data};
