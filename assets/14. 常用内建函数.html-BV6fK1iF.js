import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as e}from"./app-tVbECiG6.js";const t={},p=e(`<h1 id="_14-常用内建函数" tabindex="-1"><a class="header-anchor" href="#_14-常用内建函数"><span>14. 常用内建函数</span></a></h1><p>今天我们要聊聊 Python 中一些相当实用的东西—— <strong>常用内建函数</strong> 。这些函数就像是你日常生活中的多功能工具，能帮你处理各种不同类型的任务。</p><h2 id="什么是常用内建函数" tabindex="-1"><a class="header-anchor" href="#什么是常用内建函数"><span>什么是常用内建函数？</span></a></h2><p>首先，让我给你们普及一下基础知识。在 Python 中，<strong>内建函数</strong> 意味着这些函数是 Python 自带的，你无需额外安装任何模块或库，就可以直接使用它们。</p><p>这些函数就像是工具箱里的各种工具，能帮你在编程中更高效地完成任务。</p><h2 id="常用内建函数的分类" tabindex="-1"><a class="header-anchor" href="#常用内建函数的分类"><span>常用内建函数的分类</span></a></h2><p>我们要介绍的这些内建函数可以分成几个类别，包括：</p><h3 id="数字操作" tabindex="-1"><a class="header-anchor" href="#数字操作"><span>数字操作</span></a></h3><p>这类函数可以帮你轻松处理数字。</p><ul><li><code>abs(x)</code>：返回 x 的绝对值。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">10</span>
result <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>max(iterable)</code>：返回可迭代对象中的最大值。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
result <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>min(iterable)</code>：返回可迭代对象中的最小值。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
result <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>round(x, n)</code>：将 x 四舍五入到 n 位小数。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">3.1415926</span>
result <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 3.14</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="字符串处理" tabindex="-1"><a class="header-anchor" href="#字符串处理"><span>字符串处理</span></a></h3><p>这些函数可以帮你处理字符串。</p><ul><li><code>len(s)</code>：返回字符串的长度。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>text <span class="token operator">=</span> <span class="token string">&quot;Hello, Python!&quot;</span>
result <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 13</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>str(x)</code>：将对象 x 转换为字符串。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>number <span class="token operator">=</span> <span class="token number">123</span>
text <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>  <span class="token comment"># 输出 &quot;123&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>upper()</code>：将字符串中的字母变为大写。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>text <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span>
result <span class="token operator">=</span> text<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 &quot;HELLO&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>lower()</code>：将字符串中的字母变为小写。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>text <span class="token operator">=</span> <span class="token string">&quot;WORLD&quot;</span>
result <span class="token operator">=</span> text<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 &quot;world&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="列表和集合处理" tabindex="-1"><a class="header-anchor" href="#列表和集合处理"><span>列表和集合处理</span></a></h3><p>这类函数可以让你更灵活地处理列表和集合。</p><ul><li><code>len(iterable)</code>：返回列表或集合的元素个数。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
result <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>sum(iterable)</code>：返回可迭代对象的所有元素的和。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
result <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>sorted(iterable)</code>：返回一个排好序的列表，但不会改变原列表。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
result <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token comment"># 输出 [1, 2, 5, 7, 9]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="文件和输入输出" tabindex="-1"><a class="header-anchor" href="#文件和输入输出"><span>文件和输入输出</span></a></h3><p>这类函数让你更轻松地处理文件和用户输入。</p><ul><li><code>open(file, mode)</code>：打开文件。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;example.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Hello, Python!&quot;</span><span class="token punctuation">)</span>
<span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>input(prompt)</code>：接受用户输入。<br> 示例：<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的名字：&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;你好, </span><span class="token interpolation"><span class="token punctuation">{</span>user_input<span class="token punctuation">}</span></span><span class="token string">!&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="实战例子-统计字符个数" tabindex="-1"><a class="header-anchor" href="#实战例子-统计字符个数"><span>实战例子：统计字符个数</span></a></h2><p>让我们用一个实际的例子来巩固所学知识。我们将编写一个程序来统计用户输入的字符串中的字符个数。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">count_characters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一段文字：&quot;</span><span class="token punctuation">)</span>
    char_count <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;你输入的文字共有 </span><span class="token interpolation"><span class="token punctuation">{</span>char_count<span class="token punctuation">}</span></span><span class="token string"> 个字符。&quot;</span></span><span class="token punctuation">)</span>

count_characters<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过学习本文，你了解了一些 Python 的常用内建函数，它们可以让你在编程过程中更高效地处理各种任务。我们介绍了数字、字符串、列表、集合以及文件和输入输出相关的函数。</p><p>希望这篇文章能帮助你在编程中更得心应手！</p>`,25),o=[p];function l(i,c){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","14. 常用内建函数.html.vue"]]),k=JSON.parse('{"path":"/golang-base/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/14.%20%E5%B8%B8%E7%94%A8%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0.html","title":"14. 常用内建函数","lang":"zh-CN","frontmatter":{"description":"14. 常用内建函数 今天我们要聊聊 Python 中一些相当实用的东西—— 常用内建函数 。这些函数就像是你日常生活中的多功能工具，能帮你处理各种不同类型的任务。 什么是常用内建函数？ 首先，让我给你们普及一下基础知识。在 Python 中，内建函数 意味着这些函数是 Python 自带的，你无需额外安装任何模块或库，就可以直接使用它们。 这些函数就...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang-base/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/14.%20%E5%B8%B8%E7%94%A8%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"14. 常用内建函数"}],["meta",{"property":"og:description","content":"14. 常用内建函数 今天我们要聊聊 Python 中一些相当实用的东西—— 常用内建函数 。这些函数就像是你日常生活中的多功能工具，能帮你处理各种不同类型的任务。 什么是常用内建函数？ 首先，让我给你们普及一下基础知识。在 Python 中，内建函数 意味着这些函数是 Python 自带的，你无需额外安装任何模块或库，就可以直接使用它们。 这些函数就..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-12T10:05:49.000Z"}],["meta",{"property":"article:author","content":"Golang全栈程序员"}],["meta",{"property":"article:modified_time","content":"2024-02-12T10:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"14. 常用内建函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-12T10:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Golang全栈程序员\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"]]},"headers":[{"level":2,"title":"什么是常用内建函数？","slug":"什么是常用内建函数","link":"#什么是常用内建函数","children":[]},{"level":2,"title":"常用内建函数的分类","slug":"常用内建函数的分类","link":"#常用内建函数的分类","children":[{"level":3,"title":"数字操作","slug":"数字操作","link":"#数字操作","children":[]},{"level":3,"title":"字符串处理","slug":"字符串处理","link":"#字符串处理","children":[]},{"level":3,"title":"列表和集合处理","slug":"列表和集合处理","link":"#列表和集合处理","children":[]},{"level":3,"title":"文件和输入输出","slug":"文件和输入输出","link":"#文件和输入输出","children":[]}]},{"level":2,"title":"实战例子：统计字符个数","slug":"实战例子-统计字符个数","link":"#实战例子-统计字符个数","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1707732349000,"updatedTime":1707732349000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":1}]},"readingTime":{"minutes":2.71,"words":813},"filePathRelative":"golang-base/第1章：Python 基础知识/14. 常用内建函数.md","localizedDate":"2024年2月12日","autoDesc":true}');export{d as comp,k as data};
