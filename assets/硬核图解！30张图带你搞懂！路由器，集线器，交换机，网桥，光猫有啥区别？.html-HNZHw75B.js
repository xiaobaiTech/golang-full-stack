import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c as g,a as t,b as n,d as e,e as r}from"./app-CpmdvI11.js";const s={},d=t("figure",null,[t("img",{src:"https://cdn.xiaobaidebug.top/image/image-20210404152601935.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),l={href:"https://github.com/xiaobaiTech/golangFamily",target:"_blank",rel:"noopener noreferrer"},c=r(`<p>故事就从一个车轱辘说起吧。先来看一个车轱辘。</p><figure><img src="https://cdn.xiaobaidebug.top/image/车轮.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>辐条从车轱辘边缘，一直汇聚到 中心的轴，这个轴在英文里叫<strong>hub</strong>。</p><p>而我们今天要讲到的<strong>集线器</strong>，英文里也叫<strong>hub</strong>。</p><p>都叫<strong>hub</strong>，多少有点关系，看下这面这个图大概能明白，其实两者有点像。</p><figure><img src="https://cdn.xiaobaidebug.top/image/hub的由来2.png" alt="hub的由来" tabindex="0" loading="lazy"><figcaption>hub的由来</figcaption></figure><p>大概想表达的意思是，它是汇聚网线的中心，因此就叫<strong>集线器</strong>。</p><p>所以可以理解，大家常逛的 <strong>Github，Docker Hub, 还有 P**hub</strong> ，都是为了表达它们是<strong>某类资源的中心</strong>了吧。</p><figure><img src="https://cdn.xiaobaidebug.top/image/9e02d8ba2ebbd4a5.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>那么<strong>集线器是什么</strong>呢？那就要从<strong>电脑是怎么互联的</strong>这个话题说起。</p><p>小学的时候，有一种网吧，它其实是不能上外网的。也就是不能打开度娘，不能搜索资料。</p><p>不能上网的网吧还能叫网吧？</p><figure><img src="https://cdn.xiaobaidebug.top/image/e18d20c94006dfe0-7524faeb6c8ff751-a0be6febc4215ebabfd22cf9ea5b4be8.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>能</strong>。虽然不能上外网，但网吧老板可以把很多台机子连起来，实现网吧内互联，形成一个<strong>局域网</strong>（<strong>L</strong>ocal <strong>A</strong>rea <strong>N</strong>etwork，简称<strong>LAN</strong>）。</p><p>网吧内互联之后，就可以放上各种游戏，比如 CS，实现网吧内对线。</p><p>这种网吧有种好处，<strong>没有那么多键盘侠</strong>。</p><figure><img src="https://cdn.xiaobaidebug.top/image/5c93b203960156ee.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>毕竟你不知道什么时候键着键着，对方就<s>顺着网线</s><strong>找过来了</strong>。</p><p>对战直接<strong>从线上转移到线下</strong>了。</p><p>因此大家打游戏都很和谐，客气，场面十分感人就是了。</p><figure><img src="https://cdn.xiaobaidebug.top/image/7be71adb6ffe357e.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>那么网吧内的电脑是怎么互联呢？</p><h2 id="一根网线互联电脑" tabindex="-1"><a class="header-anchor" href="#一根网线互联电脑"><span>一根网线互联电脑</span></a></h2><p>从最简单的场景说起，假设网吧内只有<strong>两台</strong>电脑</p><figure><img src="https://cdn.xiaobaidebug.top/image/两台电脑互联.png" alt="两台电脑互联" tabindex="0" loading="lazy"><figcaption>两台电脑互联</figcaption></figure><p>随便连根网线就能实现互联吗？</p><p><strong>当然不是。</strong></p><p>还记得网络分层吗?</p><figure><img src="https://cdn.xiaobaidebug.top/image/五层网络协议对应的消息体变化.png" alt="网络分层" tabindex="0" loading="lazy"><figcaption>网络分层</figcaption></figure><p>数据如果要进行传输，会从 A 电脑经过这些网络分层把消息组装好，再到 B 电脑层层解包。</p><p>网线，只是代替了上面的<strong>灰色部分</strong>，实现<strong>物理层</strong>上互联。</p><p>如果想要两台电脑互联成功，还需要确保每一层所需要的步骤都要做到位，这样数据才能确保正确投送并返回。</p><p>我们自顶向下，从细节开始说一下实现互联需要做什么。</p><h3 id="应用层" tabindex="-1"><a class="header-anchor" href="#应用层"><span>应用层</span></a></h3><p>该层的网络功能由应用本身保证。</p><p>假设两台电脑是打算用游戏进行联网，那么该应用层的功能由游戏程序保证。</p><h3 id="传输层" tabindex="-1"><a class="header-anchor" href="#传输层"><span>传输层</span></a></h3><p>绝大部分游戏用的传输层协议都是 TCP，我们可以看下<strong>TCP 报头</strong>。</p><figure><img src="https://cdn.xiaobaidebug.top/image/tcp报头3.png" alt="TCP报头" tabindex="0" loading="lazy"><figcaption>TCP报头</figcaption></figure><p>这里面我们需要关注的是<strong>源和目的端口</strong>，这个可以定位到这台电脑上哪个进程在收发数据。</p><p>这两个端口信息一般是游戏内部已经填好。</p><p>AB 两台电脑，其中一台作为服务端启动，比如 A，起了个<strong>服务器</strong>进程。</p><figure><img src="https://cdn.xiaobaidebug.top/image/image-20210330070559257.png" alt="建立服务器" tabindex="0" loading="lazy"><figcaption>建立服务器</figcaption></figure><p>服务器会开放一个<strong>固定的端口</strong>，比如 27015。这就是<strong>目的端口</strong>。</p><p>这时候 A 和 B 都可以搜索到这个服务器。启动一个<strong>客户端</strong>进程，连接进入 A 的<strong>服务器</strong>进程。</p><p>而源端口，则由 A 和 B 自己生成。</p><figure><img src="https://cdn.xiaobaidebug.top/image/image-20210330071609786.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="网络层" tabindex="-1"><a class="header-anchor" href="#网络层"><span>网络层</span></a></h3><p>上图除了端口，我们还看到一个<code>192.168.0.105</code>，这个就是 A 的<strong>IP 地址</strong>。</p><p>我们看一下 IP 层的报文头。</p><figure><img src="https://cdn.xiaobaidebug.top/image/ip报头3.png" alt="IP报头" tabindex="0" loading="lazy"><figcaption>IP报头</figcaption></figure><p>这里面需要关注是<strong>源和目的 IP 地址</strong>。</p><p>如果两台电脑想通过一根网线进行消息通信，那么他们需要在一个<strong>局域网</strong>内。</p><p>这意味着，他们的子网掩码需要一致。局域网内，假设子网掩码是 <code>225.225.225.0</code>，会认为 <code>192.168.0.x</code> 这些 IP 都属于一个局域网。所以当 A 的 IP 地址是<code>192.168.0.105</code> 时，那么 B 的 IP 地址可以配成<code>192.168.0.106</code> 。</p><p>关于 IP 这一块是啥，后面会细讲，大家如果没明白我说的是啥，不要急。</p><p>组装好网络层报头后，数据包传入到数据链路据层。</p><h3 id="数据链路层" tabindex="-1"><a class="header-anchor" href="#数据链路层"><span>数据链路层</span></a></h3><p>以上解决了网络层的互联，而在数据链路层，数据包里需要拼接上<strong>MAC 报头</strong>。先看下 MAC 报头长什么样子。</p><figure><img src="https://cdn.xiaobaidebug.top/image/mac报头1.png" alt="MAC报头" tabindex="0" loading="lazy"><figcaption>MAC报头</figcaption></figure><p>其中需要关心的是标红的<strong>源和目的 MAC 地址</strong>。MAC 地址可以粗略理解是这台电脑网卡的唯一标识。大概长这样</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">28</span>:f9:d3:62:7d:31
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>源和目的地址，在发送消息的时候就会被填上。</p><p>但是 A 只知道自己的 MAC 地址，怎么才能知道 B 的 MAC 地址呢？</p><p>这时候需要 ARP 协议。</p><p><strong>ARP</strong>（<strong>A</strong>ddress <strong>R</strong>esolution <strong>P</strong>rotocal），即地址解析协议。用于将 IP 地址解析为以太网的 MAC 地址的协议。</p><p>在局域网中，当主机 A 有数据要发送给主机 B 时，A 必须知道 B 的 IP 地址。</p><p>但是仅仅有 IP 地址还是不够的，因为 IP 数据报文还需要在<strong>数据链路层</strong>封装成<strong>帧</strong>才能通过物理网络发送。因为发送端还必须有接收端的 MAC 地址，所以需要一个从 IP 地址到 MAC 地址的映射。ARP 就是干这事情的协议。</p><figure><img src="https://cdn.xiaobaidebug.top/image/ARP流程1.png" alt="ARP流程" tabindex="0" loading="lazy"><figcaption>ARP流程</figcaption></figure><ul><li><p>A 查本地 ARP 表发现 B 的 IP 和 MAC 映射关系不存在</p></li><li><p>A 通过 ARP 广播的形式向局域网发出消息，询问某 IP 对应的 MAC 地址是多少。比如 A 此时知道 B 的 IP，但并不知道 B 的 MAC 地址是多少，就会尝试在局域网内发起 ARP 广播，询问局域网下所有机器，哪个机器的 IP 与 B 的 IP 一致。</p></li><li><p>B 收到这个 ARP 消息，发现 A 要问的 IP 与自己的 IP 一致，就会把自己的 MAC 地址作为应答返回给 A。</p></li><li><p>此时 A 就知道了 B 的 MAC 地址，顺便把消息记录到本地 ARP 表里，下次直接用表里的关系就行，不需要每次都去问。</p></li></ul><h3 id="物理层" tabindex="-1"><a class="header-anchor" href="#物理层"><span>物理层</span></a></h3><p>从数据链路层到物理层，数据会被转为<strong>01 比特流</strong>。</p><p>此时需要把比特流传到另一台电脑。</p><p>通过一根网线，两段水晶头插入网口，把两台电脑连起来。</p><p>但对网线有一些要求。</p><p>这根网线两端的水晶头需要采用<strong>交叉互联法</strong>。</p><figure><img src="https://cdn.xiaobaidebug.top/image/交叉互联法1.png" alt="交叉互联法" tabindex="0" loading="lazy"><figcaption>交叉互联法</figcaption></figure><p>水晶头里有 8 根线，<strong>注意上图里的颜色</strong>，是有顺序的。第 1、2 根线起着收信号的作用，而第 3、6 脚发信号的作用。将一端的 1 号和 3 号线、2 号和 6 号线互换一下位置，就能够在物理层实现一端发送的信号，另一端能收到。</p><p>当然，现在有些网卡有<strong>自适应</strong>的功能，就算是<strong>直连互联法</strong>的线，也能有<strong>交叉互联法</strong>的效果。如果你用的是这种网卡，就<strong>当我物理层这块什么都没说吧</strong>。</p><h3 id="互联" tabindex="-1"><a class="header-anchor" href="#互联"><span>互联</span></a></h3><p>此时，在确保<strong>关闭防火墙</strong>的前提下，可以尝试从 A 电脑中 ping 一下 B，再从 B 电脑中 ping 一下 A。如无意外，都能 ping 通。</p><p>A 给 B 发个消息，从应用层到数据链路层，会分别加上 A 和 B 的各种&#39;&#39;身份信息&quot;。比如在传输层会加上 A 和 B 的应用端口号，在网络层加上源和目的 IP，在数据链路层会加上源和目的网卡的 MAC 头部信息。</p><p>B 收到消息后逐层解包，验证，最后顺利到达应用层。实现 AB 两台机器消息互通。</p><p>至此游戏就能正常联机对线，两台电脑互联成功！</p><figure><img src="https://cdn.xiaobaidebug.top/image/2ffcf90e51d0ab39.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="什么是集线器" tabindex="-1"><a class="header-anchor" href="#什么是集线器"><span>什么是集线器</span></a></h2><p>两个人打 cs，总会觉得无聊，但是每台电脑又只有一个网线口。</p><p>想要邀请更多的人一起玩，怎么办？</p><figure><img src="https://cdn.xiaobaidebug.top/image/三台电脑互联.png" alt="三台电脑互联" tabindex="0" loading="lazy"><figcaption>三台电脑互联</figcaption></figure><p>那就要回到文章开头提到的**集线器（hub）**了。</p><p>这是个工作在<strong>物理层</strong>的设备。</p><p>有<strong>多个网口</strong>，很好的解决了电脑上只有一个网口的问题，可以做到多台电脑的网线都插入到集线器上。</p><p>同时工作原理也非常简单，会把某个端口收到的数据，输入到<strong>中继电路</strong>。</p><p>中继电路的基本功能是将输入的信号广播到集线器的所有端口上。</p><p>简单来说就是无脑复制 N 份到其余 N 个端口上。</p><figure><img src="https://cdn.xiaobaidebug.top/image/集线器互联.png" alt="集线器互联" tabindex="0" loading="lazy"><figcaption>集线器互联</figcaption></figure><p>数据复制到 N 个端口后。对应转发到 N 台机器里。</p><h3 id="集线器内部结构" tabindex="-1"><a class="header-anchor" href="#集线器内部结构"><span>集线器内部结构</span></a></h3><p>说到这里，已经对集线器有个大概认识了。</p><p>接下来，我们看下集线器的内部结构。</p><figure><img src="https://cdn.xiaobaidebug.top/image/集线器内部结构.png" alt="集线器内部结构" tabindex="0" loading="lazy"><figcaption>集线器内部结构</figcaption></figure><p>从 A 网口进入集线器的消息，此时还是电信号。这里经过一个 PHY 模块。</p><blockquote><p>要理解 PHY 模块的作用，首先要先了解每个网口，都可能接着网线（<s>废话</s>），而每根网线的传输的格式都是有可能不同的。而 PHY 的作用，就是把这些格式转化为一个通用的格式。</p><p>举个例子。PHY 就好比一个翻译器，有的人说英文，有的人说日文。但是 PHY，会把它统一转为普通话，给内部电路处理。内部电路处理完之后，再经过 PHY 模块，转为英语，或日文从对应网口里输出。</p></blockquote><p>经过 PHY 的处理后，以电信号的形式输入到中继电路，被无脑广播，再次经过 PHY 模块后变成 BCD 网口的格式输出。</p><p>这里面的电信号，是会受噪声干扰，导致信号形变出错的。</p><p>但就算是错了，也还是会<strong>原封不动</strong>的广播出去，这就是上面提到<strong>无脑</strong>的精髓所在。</p><figure><img src="https://cdn.xiaobaidebug.top/image/f650357e0bdd3258.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>那信号如果出错了怎么办？</p><p>只能让接收方收到消息后进行校验。</p><p>还记得上文里提到的数据链路层的 MAC 报头里最末尾有个<strong>FCS</strong>吗？</p><p>FCS 里存放的是发送方通过循环冗余校验 CRC 计算得到的值。</p><p><strong>接收方</strong>用收到的数据算一次 CRC，与 FCS 里的值进行对比。</p><p>如果一致，那证明数据没问题。如果出错，则<strong>直接丢弃</strong>。</p><blockquote><p>当然，丢弃包并不会影响数据的传输， 因为丢弃的包不会触发确认响应。因此协议栈的 TCP 模块会检测到丢包， 并对该包进行重传。</p></blockquote><p>如果消息没出错，但是因为无脑广播，C 也能收到 A 发给 B 的数据包。</p><p>此时 C 会在接受到数据包后一层层的&quot;剥开&quot;。</p><p>正常情况下，在数据链路层时，识别到目的 MAC 地址跟 C 的不一致时，也会把<strong>数据丢弃</strong>。</p><figure><img src="https://cdn.xiaobaidebug.top/image/集线器互联时广播消息.png" alt="集线器互联时广播消息" tabindex="0" loading="lazy"><figcaption>集线器互联时广播消息</figcaption></figure><h2 id="什么是交换机" tabindex="-1"><a class="header-anchor" href="#什么是交换机"><span>什么是交换机</span></a></h2><p>目前只有 ABC 三台机器，每次都是广播发消息倒还好。</p><p>如果机器越来越多，每台机器发一条消息，都会被广播，就有点顶不住了。</p><p>举个例子。</p><p>假设 N 台机器，其中两台机器 A 和 B，A 发到 B 和 B 发给 A，共两条消息。</p><p>如果这 N 台机器，用的是集线器。还是 AB 之间互发消息，每条消息都是广播的话，就是(N-1)+(N-1)条消息，差距有些大，对网络资源浪费就有些严重了。</p><p>那么，有没有可能做到，A 发给 B 的消息，就不要转发给 C 呢？</p><p>可以的，把集线器换成交换机。</p><p><strong>交换机</strong>，又叫<strong>switch</strong>，跟集线器长得很像。</p><p>但是功能更强一些，从网络分层上来说，属于<strong>数据链路层</strong>，比集线器所在的<strong>物理层</strong>还要高一层。</p><p>所有发到交换机的数据，都会先进入交换机的缓存区。接着消息再被<strong>转发</strong>到对应机器上。</p><p>注意这里用的是<strong>转发</strong>，而不是<strong>集线器的广播</strong>，交换机是怎么做到转发的呢？</p><h3 id="mac-地址表" tabindex="-1"><a class="header-anchor" href="#mac-地址表"><span>MAC 地址表</span></a></h3><p>交换机内部维护了一张<strong>MAC 地址表</strong>。</p><p>记录了 端口号和 MAC 地址的对应关系。</p><p>这个表的数据是交换机<strong>不断学习</strong>的结果。</p><p>当 A 发消息到交换机时，交换机发现消息是从 1 号端口进来的，则会在 MAC 地址表上，记录 A 的 MAC 地址对应 1 号端口。</p><p>如果 A 没有很长时间没发消息到这个 1 号端口，那这条记录就会<strong>过期并被删除</strong>。</p><p>那么，当时间足够长，ABC 都发过消息给交换机后，地址表就会有完整的关系信息。</p><figure><img src="https://cdn.xiaobaidebug.top/image/交换机互联时转发消息1.png" alt="交换机互联时转发消息1" tabindex="0" loading="lazy"><figcaption>交换机互联时转发消息1</figcaption></figure><ul><li>A 准备发送消息给 B，此时 A 会把 B 的 MAC 地址，放入要发送的数据里。数据顺着网线发出。</li><li>交换机从端口收到数据，会把数据里的源和目的 MAC 地址提出来，跟 MAC 地址表进行对比。</li><li>发现<strong>B 的 MAC 地址正好在 2 号端口</strong>，那么就把数据转发给 2 号端口。</li><li>此时 B 电脑从网线收到来自交换机 2 号端口的数据。</li></ul><h3 id="两种特殊情况" tabindex="-1"><a class="header-anchor" href="#两种特殊情况"><span>两种特殊情况</span></a></h3><p>正常流程很清楚了，看两个<strong>特殊情况</strong>：</p><ol><li>交换机查询地址表时，发现目的 MAC 地址的目标端口和这个包的源端口，是同一个端口，怎么办？</li></ol><p>先说结论，<strong>会直接丢弃这个包</strong>。</p><p>我们看下，假设它不丢弃，会发生什么情况。</p><figure><img src="https://cdn.xiaobaidebug.top/image/交换机源和目的端口一致时.png" alt="交换机源和目的端口一致时" tabindex="0" loading="lazy"><figcaption>交换机源和目的端口一致时</figcaption></figure><ul><li>A 发了个消息给 B，中间经过一个<strong>集线器</strong>，此时消息会被<strong>广播</strong>到 B 和交换机。</li><li>此时 B 收到<strong>第一条</strong>A 发给它的消息</li><li>交换机从 1 号端口收到 A 的消息后，解包，获得目的 MAC 地址是 BB-BB-BB-BB-BB-BB。查 MAC 地址表，发现要发到 1 号端口。此时，源和目的端口都是同一个，<strong>如果交换机不丢弃这个消息</strong>，B 会收到<strong>第二条</strong>A 发给它的消息。</li></ul><p>A 只发了<strong>一次</strong>消息，B 却收到<strong>两条</strong>消息，明显不对。</p><p>因此，当交换机查询地址表时，发现目标端口和源端口，是同一个端口时，会丢弃这个包。</p><ol start="2"><li>MAC 地址表里找不到对应的 MAC 地址，怎么办？</li></ol><p>这可能是因为具有该地址的设备，还没有向交换机发送过包，或者这个设备一段时间没有工作，导致地址被从地址表中删除了。</p><p>这种情况下，交换机无法判断应该把包转发到哪个端口，只能将包转发到除了源端口之外的所有端口上，无论该设备连接在哪个端口上，都能收到这个包。</p><p>此时，交换机就会跟集线器一样进行<strong>广播</strong>。</p><p>发送了包之后目标设备会作出响应，只要返回了响应包，交换机就可以将它的地址写入地址表，下次也就不需要把包 发到所有端口了。</p><h3 id="交换机内部结构" tabindex="-1"><a class="header-anchor" href="#交换机内部结构"><span>交换机内部结构</span></a></h3><p>再看下交换机内部结构。</p><figure><img src="https://cdn.xiaobaidebug.top/image/交换机内部结构.png" alt="交换机内部结构" tabindex="0" loading="lazy"><figcaption>交换机内部结构</figcaption></figure><p>其实对比可以发现，交换机和集线器内部结构很像。</p><p>重点需要提到的是 MAC 模块。消息以<strong>电信号</strong>的形式从网口进入，到了 PHY 会被转成<strong>通用格式</strong>的电信号。而 MAC 模块的作用是把这个电信号转为<strong>数字信号</strong>，这样就能提取出 MAC 包头，并通过 MAC 数据帧末尾的<strong>FCS 校验</strong>这个包有没有问题，如果没问题，则把数据放到<strong>内存缓冲区</strong>里，否则直接丢弃。</p><p>另外，这个 MAC 模块，虽然这么叫。但其实<strong>交换机 MAC 模块不具有 MAC 地址</strong>。因此交换机的端口不核对接收方 MAC 地址，而是直接接收所有的包并存放到缓冲区中。</p><p>放入到内存缓冲区后，还会把 MAC 地址和端口号记录到 MAC 地址表中。同时检查<strong>目的 MAC 地址</strong>在不在 MAC 地址表中，在的话则会<strong>转发</strong>到对应端口。否则<strong>广播</strong>。</p><h3 id="交换机与网桥的区别" tabindex="-1"><a class="header-anchor" href="#交换机与网桥的区别"><span>交换机与网桥的区别</span></a></h3><p>网桥，本质上可以理解为<strong>两个网线口的交换机</strong>，正好可以把两台电脑给连起来，也叫<strong>桥接</strong>。而交换机，则是<strong>多网线口的网桥</strong>，可以把多台电脑给连（桥接）起来。</p><p>其他功能方面，大差不差，不必太过纠结。</p><h3 id="交换机和二层交换机和三层交换机有什么区别" tabindex="-1"><a class="header-anchor" href="#交换机和二层交换机和三层交换机有什么区别"><span>交换机和二层交换机和三层交换机有什么区别</span></a></h3><p>这一部分提到的<strong>交换机</strong>，其实就是<strong>二层交换机</strong>，也就是工作在第二层（<strong>数据链路层</strong>）的交换机，二者<strong>没区别</strong>。</p><p>而<strong>三层交换机</strong>，是工作在第三层（<strong>网络层</strong>）的交换机，其实就是接下来要提到的<strong>路由器</strong>。</p><h2 id="什么是路由器" tabindex="-1"><a class="header-anchor" href="#什么是路由器"><span>什么是路由器</span></a></h2><p>有了交换机之后，小网吧里的电脑就都可以被连起来了。交换机网口不够？那就再接个交换机。</p><p>但世界上电脑这么多，交换机里的 MAC 地址表难道全都要记住吗?</p><p>显然做不到。为了解决这个问题。</p><p>于是就有了<strong>路由器</strong>，工作在<strong>网络层</strong>，比数据链路层更高一层。</p><p>网络层引入了 IP 的概念。</p><h3 id="什么是-ip" tabindex="-1"><a class="header-anchor" href="#什么是-ip"><span>什么是 IP</span></a></h3><p>比如前面提到的 <code>192.168.0.105</code> 就是一个 IP，同一个<strong>局域网</strong>内还可能会有一个 IP 是<code>192.168.0.106</code>。有没有发现，它们都是<code>192.168.0.xxx</code>。</p><p>像极了 <code>上海市.黄浦区.南京东路.105号</code>，这样的地址。现实生活中，我们可以通过一个地址定位到要去哪。到了 <code>上海市.黄浦区.南京东路.105号</code>楼里，我们就可以再去找某个叫身份证为<code>xiaobaixxxxx</code>的人。</p><p>那互联网世界里，我们也就可以通过 IP 地址，定位到某个广域网段，再通过广域网内部的局域网的 MAC 地址定位到具体某个电脑。</p><p><code>上海市.黄浦区.南京东路.105号</code>可以帮助我们定位到在南京东路上的第 105 号楼的位置。但还有些路，比如南京西路，可能不止 105 号，可能要到 257 号。</p><p>实际上一个 IP 由网络号和主机号组成，共 32 位组成。如果拿了前面 24 位做网络号，那主机号就剩 8 位了，2 的 8 次方=256，最多表示表示 256 号楼。因此为了多表示几个楼，可以向网络号多挪几位过来作为主机号。</p><p>那么具体多少位作为网络号呢？可以在 IP 后面加一个数字，用来表明这一点。</p><p>于是就有了 <code>192.168.0.105/24</code>这种表示方法，表明前 24 位<code>192.168.0.0</code>是网络号，105 是主机号。</p><figure><img src="https://cdn.xiaobaidebug.top/image/网络号和主机号.png" alt="网络号和主机号" tabindex="0" loading="lazy"><figcaption>网络号和主机号</figcaption></figure><p><strong>有了网段，就可以一次性表示一大批地址。就不需要像交换机那样苦哈哈的一条一条 MAC 地址记录在表里。</strong></p><h3 id="路由表" tabindex="-1"><a class="header-anchor" href="#路由表"><span>路由表</span></a></h3><p>路由器的作用，可以帮助我们在互联网世界里转发消息到对应的 IP。</p><p>对比一下。</p><p>交换机，是通过 MAC 头部中，接收方 MAC 地址，来判断转发目标的。</p><p>路由器，则是根据 IP 头部中， IP 地址来判断的。</p><p>由于使用的地址不同，记录转发信息的表也会不同。</p><p>类似交换机的 MAC 地址表，路由器也维护了一张<strong>路由表</strong>。</p><p>而路由表，是用于告诉路由器，什么样的消息该转发到什么端口。</p><figure><img src="https://cdn.xiaobaidebug.top/image/路由互联时.png" alt="路由互联时" tabindex="0" loading="lazy"><figcaption>路由互联时</figcaption></figure><p>假设 A 要发消息到 D。也就是<code>192.168.0.105/24</code>要发消息到<code>192.168.1.11/24</code>。</p><p>那么 A 会把消息经过交换机发到路由器。</p><p>路由器通过<code>192.168.0.105/24</code>获得其网络号是 <code>192.168.0.0</code> ，而目的地的网络号是<code>192.168.1.0</code>，二者网络号不同，处于不同局域网。</p><p>查<strong>路由表</strong>，发现<code>192.168.1.0</code>,在 e2 端口，那么就会把消息从 e2 端口发出，到达交换机，交换机发现 MAC 地址是它局域网下的 D 机器，就把消息打过去。</p><p>当然，如果路由表里找不到，那就打到默认<strong>网关</strong>吧，也就是从 e1 口发出，发到 IP<code>192.0.2.1</code>。<strong>这个路由器的路由表不知道该去哪，说不定其他路由器知道</strong>。</p><h3 id="路由器的内部结构" tabindex="-1"><a class="header-anchor" href="#路由器的内部结构"><span>路由器的内部结构</span></a></h3><figure><img src="https://cdn.xiaobaidebug.top/image/路由器内部结构1.png" alt="路由器内部结构" tabindex="0" loading="lazy"><figcaption>路由器内部结构</figcaption></figure><p>路由器内部，分为<strong>控制平面和数据平面</strong>，说白了就是对应<strong>软件部分和硬件部分</strong>。</p><p>硬件部分跟交换机很像。数据从 A<strong>网口</strong>进入，此时数据还是网线上格式的电信号，会被<strong>PHY 模块</strong>转为通用信号格式，再被<strong>MAC 模块</strong>转为数字信号，通过 FCS 进行错误校验，同时<strong>校验 MAC 地址是否是自己</strong>，通过校验则进入<strong>内存</strong>缓冲区，否则丢弃。</p><p>再进入<strong>软件部分</strong>，由路由选择处理器，通过一定规则（软件逻辑），查询<strong>路由表</strong>判断转发目标和对应<strong>转发口</strong>，再经由<strong>硬件部分</strong>的<strong>交换结构</strong>转发出去。</p><p>如果路由表中<strong>无法找到</strong>匹配记录，路由器会丢弃这个包，并通过<strong>ICMP</strong>消息告知发送方。</p><h3 id="路由器和交换机的主要区别" tabindex="-1"><a class="header-anchor" href="#路由器和交换机的主要区别"><span>路由器和交换机的主要区别</span></a></h3><h4 id="mac-模块的区别" tabindex="-1"><a class="header-anchor" href="#mac-模块的区别"><span>MAC 模块的区别</span></a></h4><p>路由器和交换机不同点在于，它的<strong>每个网口下，都有一个 MAC 地址和 IP 地址</strong>。</p><p>正因为路由器具有 MAC 地址，因此它能够成为数据链路层的的<strong>发送方和接收方</strong>。</p><p>怎么理解这句话？</p><p>前面提到交换机，是不具备 MAC 地址的，而<strong>MAC 报头</strong>是需要填上目的 MAC 地址的。因此交换机从来都不是数据的目的地，它只简单转发数据帧到<strong>目的地</strong>。</p><p>但路由器，是有 MAC 地址的，因此 MAC 报头就可以写上，下一站目的地就是 xx 路由。</p><p>到了路由器后，路由器可以再次组装下一站的目的 MAC 地址是再下一个路由，通过这一点，让数据在路由和路由之间传输。</p><p>而同时因为交换机不具有 MAC 地址，因此也不会校验收到的数据帧的 MAC 地址是不是自己的，全部收下做转发。而路由器则会校验数据帧的 MAC 报头里的目的 MAC 地址是不是自己，是的话才会收入内存缓冲区，否则丢弃。</p><h4 id="找不到转发目的地时的处理方式有区别" tabindex="-1"><a class="header-anchor" href="#找不到转发目的地时的处理方式有区别"><span>找不到转发目的地时的处理方式有区别</span></a></h4><p>如果在路由表中无法找到匹配的记录，路由器会丢弃这个包，并通过 ICMP 消息告知发送方。</p><p>而交换机在<strong>MAC 地址表</strong>里找不到转发端口时会选择广播。</p><p>这里的处理方式两者是不同的，原因在于网络规模的大小。</p><p>交换机连接的网络最多也就是几千台设备的规模，这个规模并 不大。如果只有几千台设备，遇到不知道应该转发到哪里的包，交换机可以将包发送到所有的端口上，虽然这个方法很简单粗暴，但不会引发什么 问题。</p><p>但路由器工作的网络环境就是互联网，全世界所有的设备都连接在互联网上，规模非常大，并且这个规模还在持续扩大中。如果此时它的操作跟交换机一样，将不知道应该转发到哪里的包发送到整个网络上，那就会产生大量的网络包，造成网络拥塞。因此，路由器遇到不知道该转发到哪里的包， 就会直接丢弃。</p><h3 id="路由器和光猫有什么区别" tabindex="-1"><a class="header-anchor" href="#路由器和光猫有什么区别"><span>路由器和光猫有什么区别</span></a></h3><p>不管是交换机还是路由器，前面都是提到网口输入的是<strong>电信号</strong>。但现在流行的是<strong>光纤传输</strong>，传输的是<strong>光信号</strong>。</p><p>而<strong>光猫</strong>（modem），是一种调制解调器，其实就是用于<strong>光电信号转换</strong>的设备。</p><p>接收数据时，可以将光纤里的<strong>光信号转化为电信号</strong>，发给路由器，路由器内部再转成数字信号，并在此基础上做各种处理。</p><p>相反，也会把路由器传来的<strong>电信号转为光信号</strong>，发到光纤，并进入互联网。</p><figure><img src="https://cdn.xiaobaidebug.top/image/光猫和路由器的区别2.png" alt="光猫和路由器的区别2" tabindex="0" loading="lazy"><figcaption>光猫和路由器的区别2</figcaption></figure><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li>两台电脑可以通过一根网线直接连接，进行通信。</li><li>机器一多，可以把网线都接到<strong>集线器</strong>（物理层）上，但是集线器会不管三七二十一进行<strong>广播</strong>。</li><li>不想广播，可以用（二层）<strong>交换机</strong>（数据链路层），又叫多端口网桥，它比较聪明，会自我学习生产 MAC 地址表，知道消息发到哪，那就<strong>不需要广播</strong>啦</li><li>互联网电脑这么多，交换机 MAC 地址表总不能全放下吧。改用<strong>路由器</strong>（网络层），也叫三层交换机，通过网段的方式定位要把消息转发到哪，就不需要像交换机那样苦哈哈一条条记录 MAC 地址啦。</li><li>路由器和光猫之间是好搭档，<strong>光猫</strong>负责把光纤里的光信号转换成电信号给路由器。</li><li>现在一般情况下，家里已经不用集线器和交换机了，大部分路由器也支持交换机的功能。所以可以看到，家里的台式机电脑一般就连到一个路由器，再连个光猫就够能快乐上网了。</li></ul><h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后"><span>最后</span></a></h2><p>以前整个班的同学家里都不见得有一台电脑，都喜欢偷偷跑去网吧玩电脑。改革开放的春风，把电脑吹进了每家每户，也把网吧给吹成了网咖。</p><p>从前的我晚上偷偷上网，现在的我，接到报警，也能在大半夜爬起来网上冲浪。</p><p>没想到我以这种方式保持了当初最纯粹的质朴。</p><figure><img src="https://cdn.xiaobaidebug.top/image/2602a035ddaa4d72.jpeg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我是小白，<strong>看下右下角，你懂我意思的</strong>。</p><p>夏天快来了，我们下期见。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p>网络是怎么连接的 - 户根勤</p><p>趣谈网络协议- 极客时间</p><h2 id="文章推荐" tabindex="-1"><a class="header-anchor" href="#文章推荐"><span>文章推荐：</span></a></h2>`,235),E=t("li",null,[t("p",null,[t("a",{href:"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%EF%BC%81%E6%BC%AB%E7%94%BB%E5%9B%BE%E8%A7%A3HTTP%E7%9F%A5%E8%AF%86%E7%82%B9_%E9%9D%A2%E8%AF%95%E9%A2%98"},"硬核！漫画图解 HTTP 知识点+面试题")])],-1),A={href:"https://mp.weixin.qq.com/s/0H8WL6QeZ2VbO1hHPkn8Ug",target:"_blank",rel:"noopener noreferrer"},h=t("h5",{id:"别说了-一起在知识的海洋里呛水吧",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#别说了-一起在知识的海洋里呛水吧"},[t("span",null,"别说了，一起在知识的海洋里呛水吧")])],-1),B=t("p",null,"关注公众号:【小白 debug】",-1);function b(u,m){const a=p("ExternalLinkIcon");return o(),g("div",null,[d,t("blockquote",null,[t("p",null,[n("文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获免费面试题集。本文已经收录在 GitHub "),t("a",l,[n("https://github.com/xiaobaiTech/golangFamily"),e(a)]),n(" , 有大厂面试完整考点和成长路线，欢迎 Star。")])]),c,t("ul",null,[E,t("li",null,[t("p",null,[t("a",A,[n("硬核图解，TCP 粘包是什么？为什么 UDP 不粘包？"),e(a)])])])]),h,B])}const x=i(s,[["render",b],["__file","硬核图解！30张图带你搞懂！路由器，集线器，交换机，网桥，光猫有啥区别？.html.vue"]]),F=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3%EF%BC%8130%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E6%90%9E%E6%87%82%EF%BC%81%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E9%9B%86%E7%BA%BF%E5%99%A8%EF%BC%8C%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E7%BD%91%E6%A1%A5%EF%BC%8C%E5%85%89%E7%8C%AB%E6%9C%89%E5%95%A5%E5%8C%BA%E5%88%AB%EF%BC%9F.html","title":"硬核！阿里面试就是不一样！30张图带你搞懂路由器，集线器，交换机，网桥，光猫有啥区别？","lang":"zh-CN","frontmatter":{"title":"硬核！阿里面试就是不一样！30张图带你搞懂路由器，集线器，交换机，网桥，光猫有啥区别？","date":"2021-04-25T22:57:55.000Z","tags":null,"categories":"图解网络","description":" 文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获免费面试题集。本文已经收录在 GitHub https://github.com/xiaobaiTech/golangFamily , 有大厂面试完整考点和成长路线，欢迎 Star。 故事就从一个车轱辘说起吧。先来看一个车轱辘。 辐条从车轱辘边缘，一直汇聚到 中心的轴，这个轴...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3%EF%BC%8130%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E6%90%9E%E6%87%82%EF%BC%81%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E9%9B%86%E7%BA%BF%E5%99%A8%EF%BC%8C%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E7%BD%91%E6%A1%A5%EF%BC%8C%E5%85%89%E7%8C%AB%E6%9C%89%E5%95%A5%E5%8C%BA%E5%88%AB%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"硬核！阿里面试就是不一样！30张图带你搞懂路由器，集线器，交换机，网桥，光猫有啥区别？"}],["meta",{"property":"og:description","content":" 文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获免费面试题集。本文已经收录在 GitHub https://github.com/xiaobaiTech/golangFamily , 有大厂面试完整考点和成长路线，欢迎 Star。 故事就从一个车轱辘说起吧。先来看一个车轱辘。 辐条从车轱辘边缘，一直汇聚到 中心的轴，这个轴..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.xiaobaidebug.top/image/image-20210404152601935.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T13:55:00.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"硬核！阿里面试就是不一样！30张图带你搞懂路由器，集线器，交换机，网桥，光猫有啥区别？"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:published_time","content":"2021-04-25T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-12T13:55:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"硬核！阿里面试就是不一样！30张图带你搞懂路由器，集线器，交换机，网桥，光猫有啥区别？\\",\\"image\\":[\\"https://cdn.xiaobaidebug.top/image/image-20210404152601935.png\\",\\"https://cdn.xiaobaidebug.top/image/%E8%BD%A6%E8%BD%AE.jpeg\\",\\"https://cdn.xiaobaidebug.top/image/hub%E7%9A%84%E7%94%B1%E6%9D%A52.png\\",\\"https://cdn.xiaobaidebug.top/image/9e02d8ba2ebbd4a5.jpeg\\",\\"https://cdn.xiaobaidebug.top/image/e18d20c94006dfe0-7524faeb6c8ff751-a0be6febc4215ebabfd22cf9ea5b4be8.jpg\\",\\"https://cdn.xiaobaidebug.top/image/5c93b203960156ee.jpeg\\",\\"https://cdn.xiaobaidebug.top/image/7be71adb6ffe357e.jpeg\\",\\"https://cdn.xiaobaidebug.top/image/%E4%B8%A4%E5%8F%B0%E7%94%B5%E8%84%91%E4%BA%92%E8%81%94.png\\",\\"https://cdn.xiaobaidebug.top/image/五层网络协议对应的消息体变化.png\\",\\"https://cdn.xiaobaidebug.top/image/tcp%E6%8A%A5%E5%A4%B43.png\\",\\"https://cdn.xiaobaidebug.top/image/image-20210330070559257.png\\",\\"https://cdn.xiaobaidebug.top/image/image-20210330071609786.png\\",\\"https://cdn.xiaobaidebug.top/image/ip%E6%8A%A5%E5%A4%B43.png\\",\\"https://cdn.xiaobaidebug.top/image/mac报头1.png\\",\\"https://cdn.xiaobaidebug.top/image/ARP%E6%B5%81%E7%A8%8B1.png\\",\\"https://cdn.xiaobaidebug.top/image/%E4%BA%A4%E5%8F%89%E4%BA%92%E8%81%94%E6%B3%951.png\\",\\"https://cdn.xiaobaidebug.top/image/2ffcf90e51d0ab39.jpeg\\",\\"https://cdn.xiaobaidebug.top/image/%E4%B8%89%E5%8F%B0%E7%94%B5%E8%84%91%E4%BA%92%E8%81%94.png\\",\\"https://cdn.xiaobaidebug.top/image/%E9%9B%86%E7%BA%BF%E5%99%A8%E4%BA%92%E8%81%94.png\\",\\"https://cdn.xiaobaidebug.top/image/%E9%9B%86%E7%BA%BF%E5%99%A8%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84.png\\",\\"https://cdn.xiaobaidebug.top/image/f650357e0bdd3258.jpeg\\",\\"https://cdn.xiaobaidebug.top/image/%E9%9B%86%E7%BA%BF%E5%99%A8%E4%BA%92%E8%81%94%E6%97%B6%E5%B9%BF%E6%92%AD%E6%B6%88%E6%81%AF.png\\",\\"https://cdn.xiaobaidebug.top/image/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%BA%92%E8%81%94%E6%97%B6%E8%BD%AC%E5%8F%91%E6%B6%88%E6%81%AF1.png\\",\\"https://cdn.xiaobaidebug.top/image/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%BA%90%E5%92%8C%E7%9B%AE%E7%9A%84%E7%AB%AF%E5%8F%A3%E4%B8%80%E8%87%B4%E6%97%B6.png\\",\\"https://cdn.xiaobaidebug.top/image/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84.png\\",\\"https://cdn.xiaobaidebug.top/image/%E7%BD%91%E7%BB%9C%E5%8F%B7%E5%92%8C%E4%B8%BB%E6%9C%BA%E5%8F%B7.png\\",\\"https://cdn.xiaobaidebug.top/image/%E8%B7%AF%E7%94%B1%E4%BA%92%E8%81%94%E6%97%B6.png\\",\\"https://cdn.xiaobaidebug.top/image/%E8%B7%AF%E7%94%B1%E5%99%A8%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%841.png\\",\\"https://cdn.xiaobaidebug.top/image/%E5%85%89%E7%8C%AB%E5%92%8C%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E5%8C%BA%E5%88%AB2.png\\",\\"https://cdn.xiaobaidebug.top/image/2602a035ddaa4d72.jpeg\\"],\\"datePublished\\":\\"2021-04-25T22:57:55.000Z\\",\\"dateModified\\":\\"2024-05-12T13:55:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3%EF%BC%8130%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E6%90%9E%E6%87%82%EF%BC%81%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E9%9B%86%E7%BA%BF%E5%99%A8%EF%BC%8C%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E7%BD%91%E6%A1%A5%EF%BC%8C%E5%85%89%E7%8C%AB%E6%9C%89%E5%95%A5%E5%8C%BA%E5%88%AB%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3%EF%BC%8130%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E6%90%9E%E6%87%82%EF%BC%81%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E9%9B%86%E7%BA%BF%E5%99%A8%EF%BC%8C%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E7%BD%91%E6%A1%A5%EF%BC%8C%E5%85%89%E7%8C%AB%E6%9C%89%E5%95%A5%E5%8C%BA%E5%88%AB%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"硬核！阿里面试就是不一样！30张图带你搞懂路由器，集线器，交换机，网桥，光猫有啥区别？"}],["meta",{"property":"og:description","content":" 文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获免费面试题集。本文已经收录在 GitHub https://github.com/xiaobaiTech/golangFamily , 有大厂面试完整考点和成长路线，欢迎 Star。 故事就从一个车轱辘说起吧。先来看一个车轱辘。 辐条从车轱辘边缘，一直汇聚到 中心的轴，这个轴..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T13:55:00.000Z"}],["meta",{"property":"article:published_time","content":"2021-04-25T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-12T13:55:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"硬核！阿里面试就是不一样！30张图带你搞懂路由器，集线器，交换机，网桥，光猫有啥区别？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-04-25T22:57:55.000Z\\",\\"dateModified\\":\\"2024-05-12T13:55:00.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一根网线互联电脑","slug":"一根网线互联电脑","link":"#一根网线互联电脑","children":[{"level":3,"title":"应用层","slug":"应用层","link":"#应用层","children":[]},{"level":3,"title":"传输层","slug":"传输层","link":"#传输层","children":[]},{"level":3,"title":"网络层","slug":"网络层","link":"#网络层","children":[]},{"level":3,"title":"数据链路层","slug":"数据链路层","link":"#数据链路层","children":[]},{"level":3,"title":"物理层","slug":"物理层","link":"#物理层","children":[]},{"level":3,"title":"互联","slug":"互联","link":"#互联","children":[]}]},{"level":2,"title":"什么是集线器","slug":"什么是集线器","link":"#什么是集线器","children":[{"level":3,"title":"集线器内部结构","slug":"集线器内部结构","link":"#集线器内部结构","children":[]}]},{"level":2,"title":"什么是交换机","slug":"什么是交换机","link":"#什么是交换机","children":[{"level":3,"title":"MAC 地址表","slug":"mac-地址表","link":"#mac-地址表","children":[]},{"level":3,"title":"两种特殊情况","slug":"两种特殊情况","link":"#两种特殊情况","children":[]},{"level":3,"title":"交换机内部结构","slug":"交换机内部结构","link":"#交换机内部结构","children":[]},{"level":3,"title":"交换机与网桥的区别","slug":"交换机与网桥的区别","link":"#交换机与网桥的区别","children":[]},{"level":3,"title":"交换机和二层交换机和三层交换机有什么区别","slug":"交换机和二层交换机和三层交换机有什么区别","link":"#交换机和二层交换机和三层交换机有什么区别","children":[]}]},{"level":2,"title":"什么是路由器","slug":"什么是路由器","link":"#什么是路由器","children":[{"level":3,"title":"什么是 IP","slug":"什么是-ip","link":"#什么是-ip","children":[]},{"level":3,"title":"路由表","slug":"路由表","link":"#路由表","children":[]},{"level":3,"title":"路由器的内部结构","slug":"路由器的内部结构","link":"#路由器的内部结构","children":[]},{"level":3,"title":"路由器和交换机的主要区别","slug":"路由器和交换机的主要区别","link":"#路由器和交换机的主要区别","children":[]},{"level":3,"title":"路由器和光猫有什么区别","slug":"路由器和光猫有什么区别","link":"#路由器和光猫有什么区别","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"最后","slug":"最后","link":"#最后","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]},{"level":2,"title":"文章推荐：","slug":"文章推荐","link":"#文章推荐","children":[]}],"git":{"createdTime":1708315055000,"updatedTime":1715522100000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":3},{"name":"xiaobai-tech","email":"948485496@qq.com","commits":1}]},"readingTime":{"minutes":24.24,"words":7271},"filePathRelative":"计算机基础/网络基础/核心知识点/硬核图解！30张图带你搞懂！路由器，集线器，交换机，网桥，光猫有啥区别？.md","localizedDate":"2021年4月25日","autoDesc":true}');export{x as comp,F as data};
