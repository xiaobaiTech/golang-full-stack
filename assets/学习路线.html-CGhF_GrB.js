import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as a,c as s,a as l,b as i,d as e,w as B,e as n}from"./app-D8yNzzsR.js";const A={},g=n('<h1 id="学习路线" tabindex="-1"><a class="header-anchor" href="#学习路线"><span>学习路线</span></a></h1><p>【超全golang面试题合集+golang学习指南+golang知识图谱+成长路线】 一份涵盖大部分golang程序员所需要掌握的核心知识。</p><p align="center"><a href="#公众号"><img src="https://img.shields.io/badge/公众号-小白debug-blue" alt="公众号"></a><a href="https://juejin.cn/user/4001878057422087"><img src="https://img.shields.io/badge/掘金-小白debug-yellow" alt="公众号"></a><a href="https://www.zhihu.com/people/jin-ji-de-ren-shan-ren"><img src="https://img.shields.io/badge/知乎-小白debug-yellowgreen" alt="投稿"></a><a href="https://blog.csdn.net/ilini"><img src="https://img.shields.io/badge/csdn-CSDN-red.svg" alt="投稿"></a><a href="https://xiaobaidebug.top/"><img src="https://img.shields.io/badge/博客-小白debug-brightgreen" alt="博客"></a></p><figure><img src="https://cdn.jsdelivr.net/gh/xiaobaiTech/image/后端成长路线.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',4),c={href:"https://www.processon.com/view/link/5ff500aa1e08531de81e1288",target:"_blank",rel:"noopener noreferrer"},h=l("br",null,null,-1),_={href:"https://github.com/xiaobaiTech/golangFamily",target:"_blank",rel:"noopener noreferrer"},p=l("br",null,null,-1),d=n('<p>最近花了些时间整理了一下后端程序员成长路线和高频面试题，这是一份涵盖大部分后端程序员所需要掌握的<strong>核心知识</strong>。</p><p>这些面试题从<strong>能力模型上对标字节资深后端开发</strong>，因为字节主要使用GO语言，因此语言方面的面试题，主要是面向go相关的题目。但除了语言这块，其他中间件和工程能力相关的面试题，<strong>对于所有后端开发都适用！！</strong></p><figure><img src="https://cdn.jsdelivr.net/gh/xiaobaiTech/image/image-20220314193617293.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>面试题集PDF还会<strong>不断迭代更新</strong>，后续最新版本都会在我的个人公众号「<strong>小白debug</strong>」里第一时间发布！</p><p>在公众号里回复【<strong>面试</strong>】即可获得！！</p><p>如果大家看完电子书，觉得内容还不错，强烈希望大家能在<strong>微信公众号</strong>里搜索关注，并<strong>星标</strong>我的公众号，第一时间获取最新更新内容！</p><img src="https://cdn.xiaobaidebug.top/1696560465663.jpeg" style="zoom:30%;"><p>还有<strong>技术划水【交流群】</strong>，点击公众号右下角【<strong>联系我</strong>】或<strong>扫描以下二维码</strong>，备注“<strong>进群</strong>”，欢迎大家进群交流~。</p><p>如果大家对网络基础感兴趣的话，公众号里也有非常多相关的文章，也欢迎关注收看哈。<strong>图解网络相关</strong>的文章，已经重新整理成一份的电子书。<strong>在公众号内回复【网络】，就可以获得整理的PDF电子书。</strong></p><p>同时我也为公众号粉丝准备了一些学习资料，关注公众号并回复【<strong>go</strong>】、【<strong>操作系统</strong>】、【<strong>网络</strong>】即可获得相应学习资料！<br> 并且，学习资料也会<strong>不断更新</strong>，后续会根据读者需求整理更多相关资源，有需要的读者也可以在公众号内留言。</p><br><br><h3 id="最后" tabindex="-1"><a class="header-anchor" href="#最后"><span>最后</span></a></h3>',13),u={href:"https://yatibao.debuger.top/",target:"_blank",rel:"noopener noreferrer"},F=l("strong",null,"想快速成为中大厂Go/Java工程师",-1),C={href:"https://bds8bsueoz.feishu.cn/docx/Soo1dyKwJovEjcx95RbcixCqnmh",target:"_blank",rel:"noopener noreferrer"},m=l("strong",null,"博客",-1),f={href:"https://xiaobaidebug.top/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://xiaobaidebug.top/",target:"_blank",rel:"noopener noreferrer"},D=l("strong",null,"B站",-1),y={href:"https://space.bilibili.com/302188068",target:"_blank",rel:"noopener noreferrer"},x=n("<li>在公众号内回复【<strong>面试</strong>】，可以获得整理的<strong>golang面试PDF电子书</strong>，适合快速备战面试查漏补缺。</li><li>在公众号内回复【<strong>网络</strong>】，可以获得整理的<strong>图解PDF电子书</strong>，适合巩固基础。</li><li>在公众号内回复【<strong>视频</strong>】，可以获得整理的有趣好玩的<strong>视频教程</strong>，适合小白上路。</li>",3),T=l("h1",{id:"目录-善用ctrl-f",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#目录-善用ctrl-f"},[l("span",null,"目录(善用Ctrl+F)")])],-1),P=l("p",null,"基础入门",-1),k=l("p",null,"新手",-1),w={href:"https://blog.csdn.net/gezhonglei2007/article/details/52237582",target:"_blank",rel:"noopener noreferrer"},L=l("p",null,"数据类型",-1),S=l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E8%BF%9Enil%E5%88%87%E7%89%87%E5%92%8C%E7%A9%BA%E5%88%87%E7%89%87%E4%B8%80%E4%B8%8D%E4%B8%80%E6%A0%B7%E9%83%BD%E4%B8%8D%E6%B8%85%E6%A5%9A%EF%BC%9F%E9%82%A3BAT%E9%9D%A2%E8%AF%95%E5%AE%98%E5%8F%AA%E5%A5%BD%E8%AE%A9%E4%BD%A0%E5%9B%9E%E5%8E%BB%E7%AD%89%E9%80%9A%E7%9F%A5%E4%BA%86%E3%80%82"},"连nil切片和空切片一不一样都不清楚？那BAT面试官只好让你回去等通知了。")],-1),I=l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%88%90byte%E6%95%B0%E7%BB%84%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E5%86%85%E5%AD%98%E6%8B%B7%E8%B4%9D%E5%90%97%EF%BC%9F"},"golang面试题：字符串转成byte数组，会发生内存拷贝吗？")],-1),q=n('<li><a href="/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E6%8B%B7%E8%B4%9D%E5%A4%A7%E5%88%87%E7%89%87%E4%B8%80%E5%AE%9A%E6%AF%94%E5%B0%8F%E5%88%87%E7%89%87%E4%BB%A3%E4%BB%B7%E5%A4%A7%E5%90%97%EF%BC%9F">golang面试题：拷贝大切片一定比小切片代价大吗？</a></li><li>map不初始化使用会怎么样</li><li>map不初始化长度和初始化长度的区别</li><li>map承载多大，大了怎么办</li><li>map的iterator是否安全？能不能一边delete一边遍历？</li><li>字符串不能改，那转成数组能改吗，怎么改</li><li>怎么判断一个数组是否已经排序</li><li>普通map如何不用锁解决协程安全问题</li><li>array和slice的区别</li><li><a href="/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Ajson%E5%8C%85%E5%8F%98%E9%87%8F%E4%B8%8D%E5%8A%A0tag%E4%BC%9A%E6%80%8E%E4%B9%88%E6%A0%B7%EF%BC%9F">golang面试题：json包变量不加tag会怎么样？</a></li><li><a href="/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%20%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Areflect%EF%BC%88%E5%8F%8D%E5%B0%84%E5%8C%85%EF%BC%89%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AD%97%E6%AE%B5%20tag%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%20json%20%E5%8C%85%E4%B8%8D%E8%83%BD%E5%AF%BC%E5%87%BA%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F%E7%9A%84%20tag%EF%BC%9F">golang面试题：reflect（反射包）如何获取字段tag？为什么json包不能导出私有变量的tag？</a></li><li>零切片、空切片、nil切片是什么</li><li>slice深拷贝和浅拷贝</li><li>map触发扩容的时机，满足什么条件时扩容？</li><li>map扩容策略是什么</li><li>自定义类型切片转字节切片和字节切片转回自动以类型切片</li><li>make和new什么区别</li><li>slice ，map，chanel创建的时候的几个参数什么含义</li><li>slice，len，cap，共享，扩容</li><li>线程安全的map怎么实现</li><li>go slice 和 array 区别</li><li>go struct能不能比较？</li><li>map如何顺序读取？</li><li>go中怎么实现set</li><li>map 的扩容机制是什么？</li><li>使用值为 nil 的 sice、map 会发生什么？</li><li>Golang 有没有 this 指针？</li><li>Golang 语言中局部变量和全局变量的缺省值是什么</li><li>Golang 中的引用类型包含哪些?</li><li>使用range 迭代 map 是有序的吗?</li><li>slice 的扩容机制是什么？</li><li>Golang 中指针运算有哪些?</li><li>类型的值可以修改吗？</li><li>解析 JSON 数据时，默认将数值当做哪种类型</li><li>array 类型的值作为函数参数是引用传递还是值传递？</li>',35),M=n('<li><p>流程控制</p><ul><li><a href="/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%98%A8%E5%A4%A9%E9%82%A3%E4%B8%AA%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E9%87%8Cappend%E5%85%83%E7%B4%A0%E7%9A%84%E5%90%8C%E4%BA%8B%EF%BC%8C%E4%BB%8A%E5%A4%A9%E8%BF%98%E5%9C%A8%E4%B9%88%EF%BC%9F">昨天那个在for循环里append元素的同事，今天还在么？</a></li><li><a href="/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/for%20select%E6%97%B6%EF%BC%8C%E5%A6%82%E6%9E%9C%E9%80%9A%E9%81%93%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E4%BC%9A%E6%80%8E%E4%B9%88%E6%A0%B7%EF%BC%9F%E5%A6%82%E6%9E%9C%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AAcase%E5%91%A2%EF%BC%9F">golang面试官：for select时，如果通道已经关闭会怎么样？如果只有一个case呢？</a></li><li>go defer（for defer）</li><li>select可以用于什么？</li><li>context包的用途？</li><li>select 可以用于实现哪些功能？</li><li>在循杯内执行 defer 语句会发生什么?</li><li>switch 中如何强制执行下一个 case 代码块?</li><li>如何从 panic 中恢复?</li></ul></li>',1),G=l("p",null,"进阶",-1),v=l("br",null,null,-1),N={href:"https://studygolang.com/articles/27293",target:"_blank",rel:"noopener noreferrer"},j=l("p",null,"优化",-1),z=l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E6%80%8E%E4%B9%88%E9%81%BF%E5%85%8D%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%EF%BC%9F"},"golang面试题：怎么避免内存逃逸？")],-1),Q=l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E7%AE%80%E5%8D%95%E8%81%8A%E8%81%8A%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%EF%BC%9F"},"golang面试题：简单聊聊内存逃逸？")],-1),O=l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%BB%99%E5%A4%A7%E5%AE%B6%E4%B8%A2%E8%84%B8%E4%BA%86%EF%BC%8C%E7%94%A8%E4%BA%86%E4%B8%89%E5%B9%B4golang%EF%BC%8C%E6%88%91%E8%BF%98%E6%98%AF%E6%B2%A1%E7%AD%94%E5%AF%B9%E8%BF%99%E9%81%93%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E9%A2%98"},"给大家丢脸了，用了三年golang，我还是没答对这道内存泄漏题")],-1),U=l("li",null,"内存碎片化问题",-1),R=l("li",null,"chan相关的goroutine泄露的问题",-1),H=l("li",null,"string相关的goroutine泄露的问题",-1),Z={href:"https://colobu.com/2019/08/28/go-memory-leak-i-dont-think-so/",target:"_blank",rel:"noopener noreferrer"},W=l("li",null,"sync.Pool的适用场景",-1),J=l("li",null,"go1.13sync.Pool对比go1.12版本优化点",-1),K=n('<li><p>并发编程</p><ul><li><a href="/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AF%B9%E5%B7%B2%E7%BB%8F%E5%85%B3%E9%97%AD%E7%9A%84%E7%9A%84chan%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%EF%BC%8C%E4%BC%9A%E6%80%8E%E4%B9%88%E6%A0%B7%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F">golang面试题：对已经关闭的的chan进行读写，会怎么样？为什么？</a></li><li><a href="/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AF%B9%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E7%9A%84chan%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%EF%BC%8C%E4%BC%9A%E6%80%8E%E4%B9%88%E6%A0%B7%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F">golang面试题：对未初始化的的chan进行读写，会怎么样？为什么？</a></li><li>sync.map 的优缺点和使用场景</li><li>sync.Map的优化点</li><li>主协程如何等其余协程完再操作</li><li>有缓存的channel和没有缓存的channel区别是什么？</li><li>协程通信方式有哪些？</li><li>channel底层实现</li><li>读写锁底层是怎么实现的？</li><li>请你说说golang的CSP思想</li><li>channel 是怎么保证线程安全？</li></ul></li>',1),V=l("p",null,"高级特性",-1),Y={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492750&idx=1&sn=aafed552e01a3ebb61233f318bc9d6dc&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},X=l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%20%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Areflect%EF%BC%88%E5%8F%8D%E5%B0%84%E5%8C%85%EF%BC%89%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AD%97%E6%AE%B5%20tag%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%20json%20%E5%8C%85%E4%B8%8D%E8%83%BD%E5%AF%BC%E5%87%BA%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F%E7%9A%84%20tag%EF%BC%9F"},"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？")],-1),$=l("li",null,"协程和线程的差别",-1),ll=l("li",null,"垃圾回收的过程是怎么样的？",-1),il=l("li",null,"什么是写屏障、混合写屏障，如何实现？",-1),el=l("li",null,[i("开源库里会有一些类似下面这种奇怪的用法："),l("code",null,"var _ io.Writer = (*myWriter)(nil)"),i("，是为什么？")],-1),tl={href:"https://zboya.github.io/post/go_scheduler/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io",target:"_blank",rel:"noopener noreferrer"},nl=l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E5%8A%A8%E5%9B%BE%E5%9B%BE%E8%A7%A3%EF%BC%8CGMP%E9%87%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%9C%89P"},"动图图解，GMP里为什么要有P")],-1),ol=l("li",null,"协程之间是怎么调度的",-1),El=l("li",null,"gc的stw是怎么回事",-1),rl=l("li",null,"利用golang特性，设计一个QPS为500的服务器",-1),al=l("li",null,"为什么gc会让程序变慢",-1),sl=l("li",null,"开多个线程和开多个协程会有什么区别",-1),Bl=l("li",null,"两个interface{} 能不能比较",-1),Al=l("li",null,"必须要手动对齐内存的情况",-1),gl={href:"https://segmentfault.com/a/1190000019570427",target:"_blank",rel:"noopener noreferrer"},cl=l("li",null,"golang怎么做代码优化",-1),hl={href:"https://www.jianshu.com/p/7b3638b47845",target:"_blank",rel:"noopener noreferrer"},_l=n("<li>协程可以自己主动让出 CPU 吗？</li><li>断言时会发生拷贝吗</li><li>接口是怎么实现的？</li><li>协程与进程，线程的区别是什么？协程有什么优势？</li><li>为什么小对象多了会造成 gc 压力?</li><li>一个协程能保证绑定在一个内核线程上吗？</li><li>闭包怎么实现的,闭包的主要应用场景</li><li>两次 GC 周期重叠会引发什么问题，GC 触发机制是什么样的？</li><li>Goroutinue 什么时候会被挂起？</li><li>Data Race 问题怎么检测？怎么解决?</li><li>Golang 触发异常的场景有哪些?</li><li>net/http包中client如何实现长连接？</li><li>net/http怎么做连接池和长链接？</li>",13),pl=l("p",null,"问题排查",-1),dl={href:"https://mp.weixin.qq.com/s?__biz=MzA4ODg0NDkzOA==&mid=2247487157&idx=1&sn=cbf1c87efe98433e07a2e58ee6e9899e&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},ul={href:"https://mp.weixin.qq.com/s/d0olIiZgZNyZsO-OZDiEoA",target:"_blank",rel:"noopener noreferrer"},Fl=l("li",null,"什么是 goroutine 泄漏?",-1),Cl=l("li",null,"当go服务部署到线上了，发现有内存泄露，该怎么处理",-1),ml=l("p",null,"源码阅读",-1),fl={href:"https://qcrao.com/2020/05/06/dive-into-go-sync-map/",target:"_blank",rel:"noopener noreferrer"},bl=l("li",null,[i("net/http "),l("ul",null,[l("li",null,[l("a",{href:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/io_timeout%EF%BC%8C%E5%B8%8C%E6%9C%9B%E4%BD%A0%E4%B8%8D%E8%A6%81%E8%B8%A9%E5%88%B0%E8%BF%99%E4%B8%AAhttp%E5%8C%85%E7%9A%84%E5%9D%91"},"i/o timeout ， 希望你不要踩到这个net/http包的坑")])])],-1),Dl={href:"https://mp.weixin.qq.com/s/MntwgIJ2ynOAdwnypWUjZw",target:"_blank",rel:"noopener noreferrer"},yl={href:"https://draveness.me/golang/docs/part3-runtime/ch06-concurrency/golang-channel/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io",target:"_blank",rel:"noopener noreferrer"},xl={href:"https://draveness.me/golang/docs/part3-runtime/ch06-concurrency/golang-context/",target:"_blank",rel:"noopener noreferrer"},Tl={href:"https://mp.weixin.qq.com/s/9-eLJqYZrOpNLoiTGpBrKA",target:"_blank",rel:"noopener noreferrer"},Pl=l("li",null,"main函数背后的启动过程",-1),kl={href:"https://mp.weixin.qq.com/s?__biz=Mzg2MDU1Mjc3MQ==&mid=2247489860&idx=1&sn=2d3fa235f6768ad5a0c820b6241b9e99&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},wl={href:"https://segmentfault.com/a/1190000020086769",target:"_blank",rel:"noopener noreferrer"},Ll={href:"https://pengrl.com/p/62835/",target:"_blank",rel:"noopener noreferrer"},Sl=l("p",null,"汇编",-1),Il={href:"https://juejin.cn/post/6844903929713524744",target:"_blank",rel:"noopener noreferrer"},ql=l("li",null,[l("p",null,[l("a",{href:"#%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8D"},"推荐书籍")])],-1),Ml=l("li",null,[l("p",null,[l("a",{href:"#%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B"},"视频教程")])],-1),Gl=l("p",null,"实践常用工具",-1),vl={href:"https://marketplace.visualstudio.com/items?itemName=wandecilenio-martins.ddl-2-go-struct",target:"_blank",rel:"noopener noreferrer"},Nl={href:"https://oktools.net/json2go",target:"_blank",rel:"noopener noreferrer"},jl={href:"https://xuri.me/toml-to-go/",target:"_blank",rel:"noopener noreferrer"},zl={href:"https://yaml.to-go.online/",target:"_blank",rel:"noopener noreferrer"},Ql=l("p",null,"图解网络基础",-1),Ol=n('<li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%EF%BC%81%E6%BC%AB%E7%94%BB%E5%9B%BE%E8%A7%A3HTTP%E7%9F%A5%E8%AF%86%E7%82%B9_%E9%9D%A2%E8%AF%95%E9%A2%98">漫画图解HTTP知识点+面试题</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/TCP%E7%B2%98%E5%8C%85%EF%BC%81%E6%95%B0%E6%8D%AE%E5%8C%85%EF%BC%9A%E6%88%91%E5%8F%AA%E6%98%AF%E7%8A%AF%E4%BA%86%E6%AF%8F%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%8C%85%E9%83%BD%E4%BC%9A%E7%8A%AF%E7%9A%84%E9%94%99%EF%BC%8C%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3">TCP粘包 数据包：我只是犯了每个数据包都会犯的错</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3%EF%BC%8130%E5%BC%A0%E5%9B%BE%E5%B8%A6%E4%BD%A0%E6%90%9E%E6%87%82%EF%BC%81%E8%B7%AF%E7%94%B1%E5%99%A8%EF%BC%8C%E9%9B%86%E7%BA%BF%E5%99%A8%EF%BC%8C%E4%BA%A4%E6%8D%A2%E6%9C%BA%EF%BC%8C%E7%BD%91%E6%A1%A5%EF%BC%8C%E5%85%89%E7%8C%AB%E6%9C%89%E5%95%A5%E5%8C%BA%E5%88%AB%EF%BC%9F">30张图带你搞懂！路由器，集线器，交换机，网桥，光猫有啥区别？</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E5%8A%A8%E5%9B%BE%E5%9B%BE%E8%A7%A3%EF%BC%81%E6%97%A2%E7%84%B6IP%E5%B1%82%E4%BC%9A%E5%88%86%E7%89%87%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88TCP%E5%B1%82%E4%B9%9F%E8%BF%98%E8%A6%81%E5%88%86%E6%AE%B5%EF%BC%9F">既然IP层会分片，为什么TCP层也还要分段？</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3%EF%BC%81%E6%96%AD%E7%BD%91%E4%BA%86%EF%BC%8C%E8%BF%98%E8%83%BDping%E9%80%9A%E5%9B%9E%E7%8E%AF%E5%9C%B0%E5%9D%80%E5%90%97%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88">断网了，还能ping通 127.0.0.1 吗？为什么？</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E8%BF%9E%E6%8E%A5%E4%B8%80%E4%B8%AAIP%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E4%B8%BB%E6%9C%BA%E6%97%B6%EF%BC%8C%E6%8F%A1%E6%89%8B%E8%BF%87%E7%A8%8B%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84">连接一个 IP 不存在的主机时，握手过程是怎样的？</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E5%8A%A8%E5%9B%BE%E5%9B%BE%E8%A7%A3%EF%BC%81%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8Csend%E6%88%90%E5%8A%9F%E5%90%8E%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%B0%B1%E5%8F%91%E5%87%BA%E5%8E%BB%E4%BA%86%E5%90%97%EF%BC%9F">动图图解！代码执行send成功后，数据就发出去了吗？</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%B4%BB%E4%B9%85%E8%A7%81%EF%BC%81TCP%E4%B8%A4%E6%AC%A1%E6%8C%A5%E6%89%8B%EF%BC%8C%E4%BD%A0%E8%A7%81%E8%BF%87%E5%90%97%EF%BC%9F%E9%82%A3%E5%9B%9B%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%91%A2%EF%BC%9F">活久见！TCP两次挥手，你见过吗？那四次握手呢？</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E5%8A%A8%E5%9B%BE%E5%9B%BE%E8%A7%A3%EF%BC%81%E6%94%B6%E5%88%B0RST%EF%BC%8C%E5%B0%B1%E4%B8%80%E5%AE%9A%E4%BC%9A%E6%96%AD%E5%BC%80TCP%E8%BF%9E%E6%8E%A5%E5%90%97%EF%BC%9F">动图图解！收到RST，就一定会断开TCP连接吗？</a></li><li><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%B2%A1%E6%9C%89accept%E8%83%BD%E5%BB%BA%E7%AB%8BTCP%E8%BF%9E%E6%8E%A5%E5%90%97">动图图解！没有accept，能建立TCP连接吗？</a></li>',10),Ul={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492941&idx=1&sn=47c95e0ec6bf3c679073a8fa6f1576fc&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Rl=n("<li>HTTP 是无状态的吗？需要保持状态的场景应该怎么做？</li><li>粘包如何解决</li><li>RestFul 是什么？RestFul 请求的 URL 有什么特点？</li><li>一次url访问会经历哪些过程</li><li>TCP 三次握手以及四次挥手的流程。为什么需要三次握手以及四次挥手？</li><li>TCP的拥塞控制具体是怎么实现的？UDP有拥塞控制吗？</li><li>是否了解中间人劫持原理</li><li>TCP 与 UDP 在网络协议中的哪一层，他们之间有什么区别？</li><li>HTTP 与 HTTPS 有哪些区别？</li><li>select和epoll区别</li><li>TCP 如何实现数据有序性？</li><li>TCP长连接和短连接有那么不同的使用场景？</li><li>TIME_WAIT时长，为什么？</li><li>什么是零拷贝？</li><li>HTTP 简述 HTTP 的 keepalive 的原理和使用场景</li><li>Cookie 和 Session 的关系和区别是什么？</li><li>DNS 查询服务器的基本流程是什么？DNS 劫持是什么？</li><li>libevent结构，内部实现</li><li>简述对称与非对称加密的概念</li><li>epoll中的ET和LT模式</li><li>JWT 的原理和校验机制</li><li>TCP 怎么保证可靠传输？</li><li>介绍下proactor和reactor</li><li>Accept发生在三次握手哪个阶段</li><li>RPC 的调用过程</li><li>tcp的可靠性体现在哪里</li><li>如何解决 TCP 传输丢包问题？</li><li>什么是 ARP 协议？简述其使用场景</li><li>http和https区别</li><li>DDOS 攻击原理，如何防范它？</li><li>如何防止传输内容被篡改？</li><li>介绍下滑动窗口</li><li>三次握手四次握手详细过程，越详细越好</li><li>什么是中间人攻击？如何防止攻击？</li><li>TCP 半连接发生场景</li><li>reactor的组成</li><li>udp包长度</li><li>IP为什么要分片</li><li>OSI 七层模型，TCP，IP 属于哪一层？</li><li>数据包乱序会处理？</li><li>什么是 SYN flood，如何防止这类攻击？</li><li>WebSocket 是如何进行传输的</li><li>为什么需要序列化？有什么序列化的方式？</li><li>有chunked的时候contentlength是什么样子</li><li>如何设计一个可靠的udp</li><li>TCP 中常见的拥塞控制算法有哪些？</li><li>如何设置非阻塞</li><li>什么是跨域，什么情况下会发生跨域请求？</li><li>Udp的接收缓冲区和发送缓冲区和tcp的区别</li><li>什么时候需要TCP四次挥手？</li><li>traceroute 有什么作用？</li><li>HTTP 的方法有哪些？</li><li>TIME_WAIT危害</li><li>select什么情况返回0</li><li>半连接在哪个阶段</li><li>TCP 的 keepalive 了解吗？说一说它和 HTTP 的 keepalive 的区别？</li><li>简述常见的 HTTP 状态码的含义（30从系统层面上，UDP 如何保证尽量可靠？</li><li>指针与引用的区别</li><li>iPv4 和 iPv6 的区别</li><li>项目中说用到线程池，开多大，为什么运用线程池？</li><li>如何设计 API 接口使其实现幂等性？</li><li>TCP 的 TIME_WAIT 和 CLOSE_WAIT</li><li>HTTP 报文头部的组成结构</li><li>RestFul 与 RPC 的区别是什么？RestFul 的优点在哪里？</li><li>从输入 URL 到展现页面的全过程</li><li>什么是 TCP 粘包和拆包？</li><li>HTTP 中 GET 和 POST 区别</li><li>讲一下拥塞控制和流量控制</li><li>TCP 协议的延迟 ACK 和累计应答</li><li>TCP 挥手时出现大量 CLOSE_WAIT 或 TIME_WAIT 怎么解决？</li><li>ARP协议工作流程</li><li>tcp与udp的区别以及应用场景</li><li>HTTPS 的加密与认证过程</li><li>TCP 中 SYN 攻击是什么？如何防止？</li><li>HTTP 短链接与长链接的区别</li><li>TCP 的报文头部结构</li><li>http长连接与短连接的区别</li><li>TCP 滑动窗口以及重传机制</li><li>seq为1000，发送了1000个数据，下一个seq是多少?</li><li>chunked块了解？介绍下</li><li>BGP 协议和 OSPF 协议的区别</li><li>简述在四层和七层网络协议中负载均衡的原理</li><li>http协议格式，几种方法，功能是什么</li><li>syn如果丢了，重传多少次</li><li>epoll可读情况有哪些</li>",85),Hl=n("<li><p>操作系统</p><ul><li>创建线程有多少种方式？</li><li>如何调试服务器内存占用过高的问题？</li><li>简述操作系统如何进行内存管理</li><li>简述创建进程的流程</li><li>简述操作系统中 malloc 的实现原理</li><li>简述僵尸进程和孤儿进程及其危害和处理</li><li>两个线程交替打印一个共享变量</li><li>进程通信中的管道实现原理是什么？</li><li>简述同步与异步的区别，阻塞与非阻塞的区别</li><li>malloc 创建的对象在堆还是栈中？</li><li>死锁产生的条件、死锁避免方法</li><li>进程的三状态模型、五状态模型、七状态模型</li><li>什么情况下，进程会进行切换？</li><li>Linux 系统态与用户态，什么时候会进入系统态？</li><li>Linux 下如何查看端口被哪个进程占用？</li><li>共享内存是如何实现的？</li><li>进程有多少种状态？</li><li>线程间有哪些通信方式？</li><li>Linux 下如何排查 CPU 以及 内存占用过多？</li><li>操作系统中，虚拟地址与物理地址之间如何映射？</li><li>CPU L1, L2缓存是什么</li><li>信号量是如何实现的？</li><li>什么时候会由用户态陷入内核态？</li><li>Linux 如何查看实时的滚动日志？</li><li>Linux 进程调度的算法</li><li>简述分页与分段，分页与分段的区别</li><li>Linux 虚拟内存的页面置换算法</li><li>Linux 中虚拟内存和物理内存有什么区别？有什么优点？</li><li>traceroute 命令的原理</li><li>操作系统是通过什么机制触发系统调用的？</li><li>Linux 零拷贝的原理</li><li>系统调用的过程是怎样的？</li><li>Linux 的 IO模型有哪些</li><li>简述自旋锁与互斥锁的使用场景</li><li>多线程和多进程的区别是什么？</li><li>简述几个常用的 Linux 命令以及他们的功能</li><li>进程空间从高位到低位都有些什么？</li><li>简述缓冲区溢出及其危害</li><li>mmap 的使用场景以及原理</li><li>BIO、NIO 有什么区别？怎么判断写文件时 Buffer 已经写满？</li><li>线程有多少种状态，状态之间如何转换</li><li>简述操作系统中的缺页中断</li><li>Linux 下如何查看 CPU 荷载，正在运行的进程，某个端口对应的进程？</li><li>进程和线程之间有什么区别？</li><li>进程间有哪些通信方式？</li><li>为什么进程切换慢，线程切换快？</li><li>线程从进程继承了哪些资源？线程独享哪些资源？</li><li>Linux 页大小是多少？</li><li>select, poll, epoll 的使用场景以及区别，epoll 中水平触发以及边缘触发有什么不同？</li></ul></li><li><p>数据库</p><ul><li>数据库三大范式是什么</li><li>mysql有关权限的表都有哪几个</li><li>MySQL的binlog有有几种录入格式？分别有什么区别？</li><li>mysql有哪些数据类型</li><li>MySQL存储引擎MyISAM与InnoDB区别</li><li>MyISAM索引与InnoDB索引的区别？</li><li>InnoDB引擎的4大特性</li><li>存储引擎选择</li><li>什么是索引？</li><li>索引有哪些优缺点？</li><li>索引使用场景（重点）</li><li>索引有哪几种类型？</li><li>索引的数据结构（b树，hash）</li><li>索引的基本原理</li><li>索引算法有哪些？</li><li>索引设计的原则？</li><li>创建索引的原则</li><li>创建索引的三种方式，删除索引</li><li>创建索引时需要注意什么？</li><li>使用索引查询一定能提高查询的性能吗？为什么</li><li>百万级别或以上的数据如何删除</li><li>前缀索引</li><li>什么是最左前缀原则？什么是最左匹配原则</li><li>B树和B+树的区别</li><li>使用B树的好处</li><li>使用B+树的好处</li><li>Hash索引和B+树所有有什么区别或者说优劣呢?</li><li>数据库为什么使用B+树而不是B树</li><li>B+树在满足聚簇索引和覆盖索引的时候不需要回表查询数据，</li><li>什么是聚簇索引？何时使用聚簇索引与非聚簇索引</li><li>非聚簇索引一定会回表查询吗？</li><li>联合索引是什么？为什么需要注意联合索引中的顺序？</li><li>什么是数据库事务？</li><li>事物的四大特性(ACID)介绍一下?</li><li>什么是脏读？幻读？不可重复读？</li><li>什么是事务的隔离级别？MySQL的默认隔离级别是什么？</li><li>对MySQL的锁了解吗</li><li>隔离级别与锁的关系</li><li>按照锁的粒度分数据库锁有哪些？锁机制与InnoDB锁算法</li><li>从锁的类别上分MySQL都有哪些锁呢？像上面那样子进行锁定岂不是有点阻碍并发效率了</li><li>MySQL中InnoDB引擎的行锁是怎么实现的？</li><li>InnoDB存储引擎的锁的算法有三种</li><li>什么是死锁？怎么解决？</li><li>数据库的乐观锁和悲观锁是什么？怎么实现的？</li><li>为什么要使用视图？什么是视图？</li><li>视图有哪些特点？</li><li>视图的使用场景有哪些？</li><li>视图的优点</li><li>视图的缺点</li><li>什么是游标？</li><li>存储过程与函数</li><li>什么是存储过程？有哪些优缺点？</li><li>什么是触发器？触发器的使用场景有哪些？</li><li>MySQL中都有哪些触发器？</li><li>常用SQL语句</li><li>SQL语句主要分为哪几类</li><li>超键、候选键、主键、外键分别是什么？</li><li>SQL 约束有哪几种？</li><li>六种关联查询</li><li>什么是子查询</li><li>子查询的三种情况</li><li>mysql中 in 和 exists 区别</li><li>varchar与char的区别</li><li>varchar(50)中50的涵义</li><li>int(20)中20的涵义</li><li>mysql为什么这么设计</li><li>mysql中int(10)和char(10)以及varchar(10)的区别</li><li>FLOAT和DOUBLE的区别是什么？</li><li>drop、delete与truncate的区别</li><li>UNION与UNION ALL的区别？</li><li>如何定位及优化SQL语句的性能问题？创建的索引有没有被使用到?或者说怎么才可以知道这条语句运行很慢的原因？</li><li>SQL的生命周期？</li><li>大表数据查询，怎么优化</li><li>超大分页怎么处理？</li><li>mysql 分页怎么实现</li><li>慢查询日志怎么看</li><li>关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？</li><li>为什么要尽量设定一个主键？</li><li>主键使用自增ID还是UUID？</li><li>字段为什么要求定义为not null？</li><li>如果要存储用户的密码散列，应该使用什么字段进行存储？</li><li>优化查询过程中的数据访问</li><li>优化长难的查询语句</li><li>优化特定类型的查询语句</li><li>优化关联查询</li><li>优化子查询</li><li>优化LIMIT分页</li><li>优化UNION查询</li><li>优化WHERE子句</li><li>数据库优化</li><li>为什么要优化</li><li>数据库结构优化</li><li>MySQL数据库cpu飙升到500%的话他怎么处理？</li><li>大表怎么优化？某个表有近千万数据，CRUD比较慢，如何优化？分库分表了是怎么做的？分表分库了有什么问题？有用到中间件么？他们的原理知道么？</li><li>垂直分表适用场景</li><li>水平分表适用场景</li><li>水平切分的缺点</li><li>MySQL的复制原理以及流程</li><li>读写分离有哪些解决方案？</li><li>备份计划，mysqldump以及xtranbackup的实现原理</li><li>数据表损坏的修复方式有哪些？</li></ul></li>",2),Zl=l("p",null,"骚话连篇",-1),Wl={href:"https://mp.weixin.qq.com/s/PP80aD-GQp7VtgyfHj392g",target:"_blank",rel:"noopener noreferrer"},Jl={href:"https://mp.weixin.qq.com/s/lpmCHabbFarXwR1ZJwJ_kg",target:"_blank",rel:"noopener noreferrer"},Kl={href:"https://mp.weixin.qq.com/s/K9a_TTYRmw5vQzCsCQTQrw",target:"_blank",rel:"noopener noreferrer"},Vl={href:"https://mp.weixin.qq.com/s/9_Au8hb-_5fNDiN4s0tNHw",target:"_blank",rel:"noopener noreferrer"},Yl={href:"https://mp.weixin.qq.com/s/xawnze8S1SGmtK6rQ6bkMQ",target:"_blank",rel:"noopener noreferrer"},Xl=l("p",null,[l("a",{name:"推荐书籍"}),i(),l("a",{name:"推荐书籍"})],-1),$l=l("h2",{id:"开源书籍",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#开源书籍"},[l("span",null,"开源书籍")])],-1),li=l("thead",null,[l("tr",null,[l("th",{style:{"text-align":"center"}},"书籍名"),l("th",{style:{"text-align":"center"}},"推荐理由")])],-1),ii={style:{"text-align":"center"}},ei={href:"https://play.golang.org/",target:"_blank",rel:"noopener noreferrer"},ti=l("td",{style:{"text-align":"center"}},"不用搭建本地 Go 环境，在线就编写 Go 的代码",-1),ni={style:{"text-align":"center"}},oi={href:"https://github.com/astaxie/go-best-practice",target:"_blank",rel:"noopener noreferrer"},Ei=l("td",{style:{"text-align":"center"}},"作者是著名的 Go 开源项目 beego 的作者，他的最佳实践非常值得阅读",-1),ri={style:{"text-align":"center"}},ai={href:"https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md",target:"_blank",rel:"noopener noreferrer"},si=l("td",{style:{"text-align":"center"}},"跟前面一本书作者是同一位，讲的是web开发",-1),Bi={style:{"text-align":"center"}},Ai={href:"https://books.studygolang.com/The-Golang-Standard-Library-by-Example",target:"_blank",rel:"noopener noreferrer"},gi=l("td",{style:{"text-align":"center"}},"对标准库的介绍",-1),ci={style:{"text-align":"center"}},hi={href:"https://github.com/Unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md",target:"_blank",rel:"noopener noreferrer"},_i=l("td",{style:{"text-align":"center"}},"比较适合新手，内容相对基础一些",-1),pi={style:{"text-align":"center"}},di={href:"http://shouce.jb51.net/gopl-zh/ch1/ch1-01.html",target:"_blank",rel:"noopener noreferrer"},ui=l("td",{style:{"text-align":"center"}},"书如其名",-1),Fi={style:{"text-align":"center"}},Ci={href:"https://studygolang.com/topics",target:"_blank",rel:"noopener noreferrer"},mi=l("td",{style:{"text-align":"center"}},"找对圈子，学的更快",-1),fi={style:{"text-align":"center"}},bi={href:"https://www.runoob.com/go/go-environment.html",target:"_blank",rel:"noopener noreferrer"},Di=l("td",{style:{"text-align":"center"}},"这个网站非常适合快速上手某门语言",-1),yi={style:{"text-align":"center"}},xi={href:"https://chai2010.cn/advanced-go-programming-book",target:"_blank",rel:"noopener noreferrer"},Ti=l("td",{style:{"text-align":"center"}},"内容适合进阶",-1),Pi={style:{"text-align":"center"}},ki={href:"https://golang.design/under-the-hood/",target:"_blank",rel:"noopener noreferrer"},wi=l("td",{style:{"text-align":"center"}},"欧神出品，虽然号称进度只有9.9%/100%，但不妨碍它的优秀，值得一看",-1),Li={style:{"text-align":"center"}},Si={href:"https://github.com/senghoo/golang-design-pattern",target:"_blank",rel:"noopener noreferrer"},Ii=l("td",{style:{"text-align":"center"}},"设计模式 Golang实现，《研磨设计模式》的golang实现",-1),qi={style:{"text-align":"center"}},Mi={href:"https://github.com/ffhelicopter/Go42",target:"_blank",rel:"noopener noreferrer"},Gi=l("td",{style:{"text-align":"center"}},"可以对比查漏补缺",-1),vi=l("br",null,null,-1),Ni=l("br",null,null,-1),ji=l("br",null,null,-1);function zi(Qi,Oi){const t=o("ExternalLinkIcon"),E=o("RouteLink");return a(),s("div",null,[g,l("p",null,[l("a",c,[i("脑图持续不断更新中，在线查看地址"),e(t)]),h,i(" 后续文章和内容会不断更新到 "),l("a",_,[i("github项目"),e(t)]),i(" 中，欢迎关注。")]),p,i(" 大家好，我是小白。大家知道，我一直以来都是golang的忠实粉丝，在学习和参与面试的过程中遇到过很多golang的问题。 "),d,l("ul",null,[l("li",null,[i("不满足于看八股文，可以尝试拿着岗位要求来进行ai押题。"),l("a",u,[i("押题宝"),e(t)])]),l("li",null,[i("基础不牢，缺乏实战项目，"),F,i("？后端训练营了解一下。"),l("a",C,[i("后端训练营介绍文档"),e(t)])]),l("li",null,[i("欢迎大家访问我的"),m,i(" [点这里]("),l("a",f,[i("https://xiaobaidebug.top/"),e(t)]),i("]("),l("a",b,[i("https://xiaobaidebug.top/"),e(t)]),i(")。")]),l("li",null,[i("欢迎大家访问我的"),D,i(),l("a",y,[i("点这里"),e(t)]),i(" 。")]),x]),T,l("ul",null,[l("li",null,[P,l("ul",null,[l("li",null,[k,l("ul",null,[l("li",null,[l("a",w,[i("Golang开发新手常犯的50个错误"),e(t)])])])]),l("li",null,[L,l("ul",null,[S,I,l("li",null,[e(E,{to:"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E7%BF%BB%E8%BD%AC%E5%90%AB%E6%9C%89%E4%B8%AD%E6%96%87%E3%80%81%E6%95%B0%E5%AD%97%E3%80%81%E8%8B%B1%E6%96%87%E5%AD%97%E6%AF%8D%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:B(()=>[i("golang面试题：翻转含有中文、数字、英文字母的字符串")]),_:1})]),q])]),M])]),l("li",null,[G,l("ul",null,[l("li",null,[l("p",null,[i("包管理"),v,l("a",N,[i("学go mod就够了！"),e(t)])])]),l("li",null,[j,l("ul",null,[z,Q,O,U,R,H,l("li",null,[l("a",Z,[i("你一定会遇到的内存回收策略导致的疑似内存泄漏的问题"),e(t)])]),W,J])]),K,l("li",null,[V,l("ul",null,[l("li",null,[l("a",Y,[i("golang面试题：能说说uintptr和unsafe.Pointer的区别吗？"),e(t)])]),X,$,ll,il,el,l("li",null,[l("a",tl,[i("GMP模型"),e(t)])]),nl,ol,El,rl,al,sl,Bl,Al,l("li",null,[l("a",gl,[i("go栈扩容和栈缩容，连续栈的缺点"),e(t)])]),cl,l("li",null,[l("a",hl,[i("golang隐藏技能:怎么访问私有成员"),e(t)])]),_l])]),l("li",null,[pl,l("ul",null,[l("li",null,[l("a",dl,[i("trace"),e(t)])]),l("li",null,[l("a",ul,[i("pprof"),e(t)])]),Fl,Cl])]),l("li",null,[ml,l("ul",null,[l("li",null,[l("a",fl,[i("sync.map"),e(t)])]),bl,l("li",null,[l("a",Dl,[i("mutex"),e(t)])]),l("li",null,[l("a",yl,[i("channel"),e(t)])]),l("li",null,[l("a",xl,[i("context"),e(t)])]),l("li",null,[l("a",Tl,[i("select实现原理"),e(t)])]),Pl,l("li",null,[l("a",kl,[i("内存管理"),e(t)])]),l("li",null,[l("a",wl,[i("GC垃圾回收"),e(t)])]),l("li",null,[l("a",Ll,[i("timer"),e(t)])])])]),l("li",null,[Sl,l("ul",null,[l("li",null,[l("a",Il,[i("汇编入门"),e(t)])])])]),ql,Ml,l("li",null,[Gl,l("ul",null,[l("li",null,[l("a",vl,[i("mysql建表语句转golang struct"),e(t)])]),l("li",null,[l("a",Nl,[i("json转golang struct"),e(t)])]),l("li",null,[l("a",jl,[i("toml转golang struct"),e(t)])]),l("li",null,[l("a",zl,[i("yaml转golang struct"),e(t)])])])])])]),l("li",null,[Ql,l("ul",null,[Ol,l("li",null,[l("a",Ul,[i("来了来了！小白图解网络电子书和博客都来啦！"),e(t)])]),Rl])]),Hl,l("li",null,[Zl,l("ul",null,[l("li",null,[l("a",Wl,[i("程序员防猝死指南"),e(t)])]),l("li",null,[l("a",Jl,[i("妙啊！程序猿的第一本互联网黑话指南"),e(t)])]),l("li",null,[l("a",Kl,[i("我感觉，我可能要拿图灵奖了。。。"),e(t)])]),l("li",null,[l("a",Vl,[i("爷青回！最近很火的朋友圈怀旧小电视源码来啦！看到最后一个视频我大呼好家伙！"),e(t)])]),l("li",null,[l("a",Yl,[i("我要开留言啦！"),e(t)])])])])]),Xl,$l,l("table",null,[li,l("tbody",null,[l("tr",null,[l("td",ii,[l("a",ei,[i("Go palyground"),e(t)])]),ti]),l("tr",null,[l("td",ni,[l("a",oi,[i("Go实战开发"),e(t)])]),Ei]),l("tr",null,[l("td",ri,[l("a",ai,[i("Go Web 编程"),e(t)])]),si]),l("tr",null,[l("td",Bi,[l("a",Ai,[i("Go语言标准库"),e(t)])]),gi]),l("tr",null,[l("td",ci,[l("a",hi,[i("Go入门指南"),e(t)])]),_i]),l("tr",null,[l("td",pi,[l("a",di,[i("Go语言圣经"),e(t)])]),ui]),l("tr",null,[l("td",Fi,[l("a",Ci,[i("Go语言中文网"),e(t)])]),mi]),l("tr",null,[l("td",fi,[l("a",bi,[i("菜鸟教程"),e(t)])]),Di]),l("tr",null,[l("td",yi,[l("a",xi,[i("Go语言高级编程"),e(t)])]),Ti]),l("tr",null,[l("td",Pi,[l("a",ki,[i("go语言原本"),e(t)])]),wi]),l("tr",null,[l("td",Li,[l("a",Si,[i("golang设计模式"),e(t)])]),Ii]),l("tr",null,[l("td",qi,[l("a",Mi,[i("Go语言四十二章经"),e(t)])]),Gi])])]),vi,Ni,ji])}const Hi=r(A,[["render",zi],["__file","学习路线.html.vue"]]),Zi=JSON.parse('{"path":"/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html","title":"学习路线","lang":"zh-CN","frontmatter":{"description":"学习路线 【超全golang面试题合集+golang学习指南+golang知识图谱+成长路线】 一份涵盖大部分golang程序员所需要掌握的核心知识。 公众号 公众号 投稿 投稿 博客 脑图持续不断更新中，在线查看地址 后续文章和内容会不断更新到 github项目 中，欢迎关注。 大家好，我是小白。大家知道，我一直以来都是golang的忠实粉丝，在学习...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"学习路线"}],["meta",{"property":"og:description","content":"学习路线 【超全golang面试题合集+golang学习指南+golang知识图谱+成长路线】 一份涵盖大部分golang程序员所需要掌握的核心知识。 公众号 公众号 投稿 投稿 博客 脑图持续不断更新中，在线查看地址 后续文章和内容会不断更新到 github项目 中，欢迎关注。 大家好，我是小白。大家知道，我一直以来都是golang的忠实粉丝，在学习..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/xiaobaiTech/image/%E5%90%8E%E7%AB%AF%E6%88%90%E9%95%BF%E8%B7%AF%E7%BA%BF.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T13:59:36.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"学习路线"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:modified_time","content":"2024-05-12T13:59:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"学习路线\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/xiaobaiTech/image/%E5%90%8E%E7%AB%AF%E6%88%90%E9%95%BF%E8%B7%AF%E7%BA%BF.png\\",\\"https://cdn.jsdelivr.net/gh/xiaobaiTech/image/image-20220314193617293.png\\"],\\"dateModified\\":\\"2024-05-12T13:59:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"学习路线"}],["meta",{"property":"og:description","content":"学习路线 【超全golang面试题合集+golang学习指南+golang知识图谱+成长路线】 一份涵盖大部分golang程序员所需要掌握的核心知识。 公众号 公众号 投稿 投稿 博客 脑图持续不断更新中，在线查看地址 后续文章和内容会不断更新到 github项目 中，欢迎关注。 大家好，我是小白。大家知道，我一直以来都是golang的忠实粉丝，在学习..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T13:59:36.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-12T13:59:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"学习路线\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-12T13:59:36.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"最后","slug":"最后","link":"#最后","children":[]},{"level":2,"title":"开源书籍","slug":"开源书籍","link":"#开源书籍","children":[]}],"git":{"createdTime":1707842411000,"updatedTime":1715522376000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":2},{"name":"xiaobai-tech","email":"948485496@qq.com","commits":2}]},"readingTime":{"minutes":22.54,"words":6762},"filePathRelative":"golang/学习路线.md","localizedDate":"2024年2月13日","autoDesc":true}');export{Hi as comp,Zi as data};
