import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as i,c as a,a as t,b as e,d as r,e as o}from"./app-jCQZcvpD.js";const c={},_=o('<h1 id="学习路线" tabindex="-1"><a class="header-anchor" href="#学习路线"><span>学习路线</span></a></h1><p>【超全golang面试题合集+golang学习指南+golang知识图谱+成长路线】 一份涵盖大部分golang程序员所需要掌握的核心知识。</p><p align="center"><a href="#公众号"><img src="https://img.shields.io/badge/公众号-小白debug-blue" alt="公众号"></a><a href="https://juejin.cn/user/4001878057422087"><img src="https://img.shields.io/badge/掘金-小白debug-yellow" alt="公众号"></a><a href="https://www.zhihu.com/people/jin-ji-de-ren-shan-ren"><img src="https://img.shields.io/badge/知乎-小白debug-yellowgreen" alt="投稿"></a><a href="https://blog.csdn.net/ilini"><img src="https://img.shields.io/badge/csdn-CSDN-red.svg" alt="投稿"></a><a href="https://xiaobaidebug.top/"><img src="https://img.shields.io/badge/博客-小白debug-brightgreen" alt="博客"></a></p><figure><img src="https://cdn.jsdelivr.net/gh/xiaobaiTech/image/后端成长路线.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',4),h={href:"https://www.processon.com/view/link/5ff500aa1e08531de81e1288",target:"_blank",rel:"noopener noreferrer"},d=t("br",null,null,-1),g={href:"https://github.com/xiaobaiTech/golangFamily",target:"_blank",rel:"noopener noreferrer"},u=t("br",null,null,-1),p=o('<p>最近花了些时间整理了一下后端程序员成长路线和高频面试题，这是一份涵盖大部分后端程序员所需要掌握的<strong>核心知识</strong>。</p><p>这些面试题从<strong>能力模型上对标字节资深后端开发</strong>，因为字节主要使用GO语言，因此语言方面的面试题，主要是面向go相关的题目。但除了语言这块，其他中间件和工程能力相关的面试题，<strong>对于所有后端开发都适用！！</strong></p><figure><img src="https://cdn.jsdelivr.net/gh/xiaobaiTech/image/image-20220314193617293.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>面试题集PDF还会<strong>不断迭代更新</strong>，后续最新版本都会在我的个人公众号「<strong>小白debug</strong>」里第一时间发布！</p><p>在公众号里回复【<strong>面试</strong>】即可获得！！</p><p>如果大家看完电子书，觉得内容还不错，强烈希望大家能在<strong>微信公众号</strong>里搜索关注，并<strong>星标</strong>我的公众号，第一时间获取最新更新内容！</p><img src="https://cdn.xiaobaidebug.top/1696560465663.jpeg" style="zoom:30%;"><p>还有<strong>技术划水【交流群】</strong>，点击公众号右下角【<strong>联系我</strong>】或<strong>扫描以下二维码</strong>，备注“<strong>进群</strong>”，欢迎大家进群交流~。</p><p>如果大家对网络基础感兴趣的话，公众号里也有非常多相关的文章，也欢迎关注收看哈。<strong>图解网络相关</strong>的文章，已经重新整理成一份的电子书。<strong>在公众号内回复【网络】，就可以获得整理的PDF电子书。</strong></p><p>同时我也为公众号粉丝准备了一些学习资料，关注公众号并回复【<strong>go</strong>】、【<strong>操作系统</strong>】、【<strong>网络</strong>】即可获得相应学习资料！<br> 并且，学习资料也会<strong>不断更新</strong>，后续会根据读者需求整理更多相关资源，有需要的读者也可以在公众号内留言。</p><br><br><h3 id="最后" tabindex="-1"><a class="header-anchor" href="#最后"><span>最后</span></a></h3>',13),y={href:"https://yatibao.debuger.top/",target:"_blank",rel:"noopener noreferrer"},x=t("strong",null,"想快速成为中大厂Go/Java工程师",-1),b={href:"https://bds8bsueoz.feishu.cn/docx/Soo1dyKwJovEjcx95RbcixCqnmh",target:"_blank",rel:"noopener noreferrer"},f=t("strong",null,"博客",-1),m={href:"https://xiaobaidebug.top/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://xiaobaidebug.top/",target:"_blank",rel:"noopener noreferrer"},G=t("strong",null,"B站",-1),E={href:"https://space.bilibili.com/302188068",target:"_blank",rel:"noopener noreferrer"},w=o("<li>在公众号内回复【<strong>面试</strong>】，可以获得整理的<strong>golang面试PDF电子书</strong>，适合快速备战面试查漏补缺。</li><li>在公众号内回复【<strong>网络</strong>】，可以获得整理的<strong>图解PDF电子书</strong>，适合巩固基础。</li><li>在公众号内回复【<strong>视频</strong>】，可以获得整理的有趣好玩的<strong>视频教程</strong>，适合小白上路。</li>",3),T=t("h1",{id:"目录-善用ctrl-f",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#目录-善用ctrl-f"},[t("span",null,"目录(善用Ctrl+F)")])],-1),P=t("p",null,"基础入门",-1),A=t("p",null,"新手",-1),S={href:"https://blog.csdn.net/gezhonglei2007/article/details/52237582",target:"_blank",rel:"noopener noreferrer"},v=t("p",null,"数据类型",-1),C={href:"https://mp.weixin.qq.com/s/cp0xed7fC9uU0te00J8GIQ",target:"_blank",rel:"noopener noreferrer"},M={href:"https://mp.weixin.qq.com/s/Iol3UnphVtBwGyLd-tHz9w",target:"_blank",rel:"noopener noreferrer"},B={href:"https://mp.weixin.qq.com/s/ayfn4LUy3MHJy37hdRlo3Q",target:"_blank",rel:"noopener noreferrer"},I={href:"https://mp.weixin.qq.com/s/VaM4yJXHYyDyRY0XHIyhpQ",target:"_blank",rel:"noopener noreferrer"},j=t("li",null,"map不初始化使用会怎么样",-1),q=t("li",null,"map不初始化长度和初始化长度的区别",-1),F=t("li",null,"map承载多大，大了怎么办",-1),L=t("li",null,"map的iterator是否安全？能不能一边delete一边遍历？",-1),z=t("li",null,"字符串不能改，那转成数组能改吗，怎么改",-1),D=t("li",null,"怎么判断一个数组是否已经排序",-1),N=t("li",null,"普通map如何不用锁解决协程安全问题",-1),O=t("li",null,"array和slice的区别",-1),R={href:"https://mp.weixin.qq.com/s/vlE0KVOCt_a4nxP_1ar4Ow",target:"_blank",rel:"noopener noreferrer"},H={href:"https://mp.weixin.qq.com/s/IB_hAzxBbAIYdLV7ZIN-sw",target:"_blank",rel:"noopener noreferrer"},U=o("<li>零切片、空切片、nil切片是什么</li><li>slice深拷贝和浅拷贝</li><li>map触发扩容的时机，满足什么条件时扩容？</li><li>map扩容策略是什么</li><li>自定义类型切片转字节切片和字节切片转回自动以类型切片</li><li>make和new什么区别</li><li>slice ，map，chanel创建的时候的几个参数什么含义</li><li>slice，len，cap，共享，扩容</li><li>线程安全的map怎么实现</li><li>go slice 和 array 区别</li><li>go struct能不能比较？</li><li>map如何顺序读取？</li><li>go中怎么实现set</li><li>map 的扩容机制是什么？</li><li>使用值为 nil 的 sice、map 会发生什么？</li><li>Golang 有没有 this 指针？</li><li>Golang 语言中局部变量和全局变量的缺省值是什么</li><li>Golang 中的引用类型包含哪些?</li><li>使用range 迭代 map 是有序的吗?</li><li>slice 的扩容机制是什么？</li><li>Golang 中指针运算有哪些?</li><li>类型的值可以修改吗？</li><li>解析 JSON 数据时，默认将数值当做哪种类型</li><li>array 类型的值作为函数参数是引用传递还是值传递？</li>",24),J=t("p",null,"流程控制",-1),Q={href:"https://mp.weixin.qq.com/s/DOkdl9B3op4US_qHBLUNNw",target:"_blank",rel:"noopener noreferrer"},W={href:"https://mp.weixin.qq.com/s/TuuLYgvIkwREDLkALqTMXA",target:"_blank",rel:"noopener noreferrer"},V=t("li",null,"go defer（for defer）",-1),X=t("li",null,"select可以用于什么？",-1),K=t("li",null,"context包的用途？",-1),Z=t("li",null,"select 可以用于实现哪些功能？",-1),Y=t("li",null,"在循杯内执行 defer 语句会发生什么?",-1),$=t("li",null,"switch 中如何强制执行下一个 case 代码块?",-1),tt=t("li",null,"如何从 panic 中恢复?",-1),et=t("p",null,"进阶",-1),nt=t("br",null,null,-1),rt={href:"https://studygolang.com/articles/27293",target:"_blank",rel:"noopener noreferrer"},ot=t("p",null,"优化",-1),lt={href:"https://mp.weixin.qq.com/s/m4pqhfrEclG0vswedkCQ_Q",target:"_blank",rel:"noopener noreferrer"},st={href:"https://mp.weixin.qq.com/s/eqWFbwDcrL3zquEcGLgBGQ",target:"_blank",rel:"noopener noreferrer"},it={href:"https://mp.weixin.qq.com/s/9CZkq-Yc75VDwqjwriZYXA",target:"_blank",rel:"noopener noreferrer"},at=t("li",null,"内存碎片化问题",-1),ct=t("li",null,"chan相关的goroutine泄露的问题",-1),_t=t("li",null,"string相关的goroutine泄露的问题",-1),ht={href:"https://colobu.com/2019/08/28/go-memory-leak-i-dont-think-so/",target:"_blank",rel:"noopener noreferrer"},dt=t("li",null,"sync.Pool的适用场景",-1),gt=t("li",null,"go1.13sync.Pool对比go1.12版本优化点",-1),ut=t("p",null,"并发编程",-1),pt={href:"https://mp.weixin.qq.com/s/6cgrWfNBLiU8bAwmJY7pGg",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://xiaobaidebug.top/2020/06/11/golang%E9%9D%A2%E8%AF%95%E9%A2%98/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AF%B9%E6%9C%AA%E5%88%9D%E5%A7%8B%E5%8C%96%E7%9A%84%E7%9A%84chan%E8%BF%9B%E8%A1%8C%E8%AF%BB%E5%86%99%EF%BC%8C%E4%BC%9A%E6%80%8E%E4%B9%88%E6%A0%B7%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%EF%BC%9F/",target:"_blank",rel:"noopener noreferrer"},xt=t("li",null,"sync.map 的优缺点和使用场景",-1),bt=t("li",null,"sync.Map的优化点",-1),ft=t("li",null,"主协程如何等其余协程完再操作",-1),mt=t("li",null,"有缓存的channel和没有缓存的channel区别是什么？",-1),kt=t("li",null,"协程通信方式有哪些？",-1),Gt=t("li",null,"channel底层实现",-1),Et=t("li",null,"读写锁底层是怎么实现的？",-1),wt=t("li",null,"请你说说golang的CSP思想",-1),Tt=t("li",null,"channel 是怎么保证线程安全？",-1),Pt=t("p",null,"高级特性",-1),At={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492750&idx=1&sn=aafed552e01a3ebb61233f318bc9d6dc&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},St={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492754&idx=1&sn=9fb4360da097c81fe733ba48d3aca8a7&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},vt=t("li",null,"协程和线程的差别",-1),Ct=t("li",null,"垃圾回收的过程是怎么样的？",-1),Mt=t("li",null,"什么是写屏障、混合写屏障，如何实现？",-1),Bt=t("li",null,[e("开源库里会有一些类似下面这种奇怪的用法："),t("code",null,"var _ io.Writer = (*myWriter)(nil)"),e("，是为什么？")],-1),It={href:"https://zboya.github.io/post/go_scheduler/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492776&idx=1&sn=913a442965df4af86182f29fc6b8834d&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},qt=t("li",null,"协程之间是怎么调度的",-1),Ft=t("li",null,"gc的stw是怎么回事",-1),Lt=t("li",null,"利用golang特性，设计一个QPS为500的服务器",-1),zt=t("li",null,"为什么gc会让程序变慢",-1),Dt=t("li",null,"开多个线程和开多个协程会有什么区别",-1),Nt=t("li",null,"两个interface{} 能不能比较",-1),Ot=t("li",null,"必须要手动对齐内存的情况",-1),Rt={href:"https://segmentfault.com/a/1190000019570427",target:"_blank",rel:"noopener noreferrer"},Ht=t("li",null,"golang怎么做代码优化",-1),Ut={href:"https://www.jianshu.com/p/7b3638b47845",target:"_blank",rel:"noopener noreferrer"},Jt=o("<li>协程可以自己主动让出 CPU 吗？</li><li>断言时会发生拷贝吗</li><li>接口是怎么实现的？</li><li>协程与进程，线程的区别是什么？协程有什么优势？</li><li>为什么小对象多了会造成 gc 压力?</li><li>一个协程能保证绑定在一个内核线程上吗？</li><li>闭包怎么实现的,闭包的主要应用场景</li><li>两次 GC 周期重叠会引发什么问题，GC 触发机制是什么样的？</li><li>Goroutinue 什么时候会被挂起？</li><li>Data Race 问题怎么检测？怎么解决?</li><li>Golang 触发异常的场景有哪些?</li><li>net/http包中client如何实现长连接？</li><li>net/http怎么做连接池和长链接？</li>",13),Qt=t("p",null,"问题排查",-1),Wt={href:"https://mp.weixin.qq.com/s?__biz=MzA4ODg0NDkzOA==&mid=2247487157&idx=1&sn=cbf1c87efe98433e07a2e58ee6e9899e&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://mp.weixin.qq.com/s/d0olIiZgZNyZsO-OZDiEoA",target:"_blank",rel:"noopener noreferrer"},Xt=t("li",null,"什么是 goroutine 泄漏?",-1),Kt=t("li",null,"当go服务部署到线上了，发现有内存泄露，该怎么处理",-1),Zt=t("p",null,"源码阅读",-1),Yt={href:"https://qcrao.com/2020/05/06/dive-into-go-sync-map/",target:"_blank",rel:"noopener noreferrer"},$t={href:"https://mp.weixin.qq.com/s/7Fl5MuCl-G6wIQQiAqLAKA",target:"_blank",rel:"noopener noreferrer"},te={href:"https://mp.weixin.qq.com/s/MntwgIJ2ynOAdwnypWUjZw",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://draveness.me/golang/docs/part3-runtime/ch06-concurrency/golang-channel/?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://draveness.me/golang/docs/part3-runtime/ch06-concurrency/golang-context/",target:"_blank",rel:"noopener noreferrer"},re={href:"https://mp.weixin.qq.com/s/9-eLJqYZrOpNLoiTGpBrKA",target:"_blank",rel:"noopener noreferrer"},oe=t("li",null,"main函数背后的启动过程",-1),le={href:"https://mp.weixin.qq.com/s?__biz=Mzg2MDU1Mjc3MQ==&mid=2247489860&idx=1&sn=2d3fa235f6768ad5a0c820b6241b9e99&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},se={href:"https://segmentfault.com/a/1190000020086769",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://pengrl.com/p/62835/",target:"_blank",rel:"noopener noreferrer"},ae=t("p",null,"汇编",-1),ce={href:"https://juejin.cn/post/6844903929713524744",target:"_blank",rel:"noopener noreferrer"},_e=t("li",null,[t("p",null,[t("a",{href:"#%E6%8E%A8%E8%8D%90%E4%B9%A6%E7%B1%8D"},"推荐书籍")])],-1),he=t("li",null,[t("p",null,[t("a",{href:"#%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B"},"视频教程")])],-1),de=t("p",null,"实践常用工具",-1),ge={href:"https://marketplace.visualstudio.com/items?itemName=wandecilenio-martins.ddl-2-go-struct",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://oktools.net/json2go",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://xuri.me/toml-to-go/",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://yaml.to-go.online/",target:"_blank",rel:"noopener noreferrer"},xe=t("p",null,"图解网络基础",-1),be={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492766&idx=1&sn=1f38b243670a836d7ab4068993378466&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},fe={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492768&idx=1&sn=686087613bf6689e899b2cdb606ea780&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},me={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492769&idx=1&sn=cdf3b1c5524860e438a9fbb7dbce82d4&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://mp.weixin.qq.com/s/7kGFOOIV7-j-44U5RUcLRQ",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492808&idx=1&sn=491074589ccbd2e972a9ad216c39b46d&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Ee={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492837&idx=1&sn=d85cb3a7e86ab244247f52e282b93954&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},we={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492863&idx=1&sn=67009c9e4387c0b789304af9e77cebec&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492883&idx=1&sn=cc526b3a34c30def4d655f05506c2826&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492909&idx=1&sn=a0cdbe6e7497132f96c0d83716888cc5&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},Ae=t("li",null,[t("a",{href:"%5Bhttps://mp.weixin.qq.com/s/n17NjGRab1u5eXkOCro1gg%5D(https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492926&idx=1&sn=b6d254b5aa11ffaae093c919c1b1fab8&source=41#wechat_redirect)"},"动图图解！没有accept，能建立TCP连接吗？")],-1),Se={href:"https://mp.weixin.qq.com/s?__biz=MzkxNTU5MjE0MQ==&mid=2247492941&idx=1&sn=47c95e0ec6bf3c679073a8fa6f1576fc&source=41#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},ve=o("<li>HTTP 是无状态的吗？需要保持状态的场景应该怎么做？</li><li>粘包如何解决</li><li>RestFul 是什么？RestFul 请求的 URL 有什么特点？</li><li>一次url访问会经历哪些过程</li><li>TCP 三次握手以及四次挥手的流程。为什么需要三次握手以及四次挥手？</li><li>TCP的拥塞控制具体是怎么实现的？UDP有拥塞控制吗？</li><li>是否了解中间人劫持原理</li><li>TCP 与 UDP 在网络协议中的哪一层，他们之间有什么区别？</li><li>HTTP 与 HTTPS 有哪些区别？</li><li>select和epoll区别</li><li>TCP 如何实现数据有序性？</li><li>TCP长连接和短连接有那么不同的使用场景？</li><li>TIME_WAIT时长，为什么？</li><li>什么是零拷贝？</li><li>HTTP 简述 HTTP 的 keepalive 的原理和使用场景</li><li>Cookie 和 Session 的关系和区别是什么？</li><li>DNS 查询服务器的基本流程是什么？DNS 劫持是什么？</li><li>libevent结构，内部实现</li><li>简述对称与非对称加密的概念</li><li>epoll中的ET和LT模式</li><li>JWT 的原理和校验机制</li><li>TCP 怎么保证可靠传输？</li><li>介绍下proactor和reactor</li><li>Accept发生在三次握手哪个阶段</li><li>RPC 的调用过程</li><li>tcp的可靠性体现在哪里</li><li>如何解决 TCP 传输丢包问题？</li><li>什么是 ARP 协议？简述其使用场景</li><li>http和https区别</li><li>DDOS 攻击原理，如何防范它？</li><li>如何防止传输内容被篡改？</li><li>介绍下滑动窗口</li><li>三次握手四次握手详细过程，越详细越好</li><li>什么是中间人攻击？如何防止攻击？</li><li>TCP 半连接发生场景</li><li>reactor的组成</li><li>udp包长度</li><li>IP为什么要分片</li><li>OSI 七层模型，TCP，IP 属于哪一层？</li><li>数据包乱序会处理？</li><li>什么是 SYN flood，如何防止这类攻击？</li><li>WebSocket 是如何进行传输的</li><li>为什么需要序列化？有什么序列化的方式？</li><li>有chunked的时候contentlength是什么样子</li><li>如何设计一个可靠的udp</li><li>TCP 中常见的拥塞控制算法有哪些？</li><li>如何设置非阻塞</li><li>什么是跨域，什么情况下会发生跨域请求？</li><li>Udp的接收缓冲区和发送缓冲区和tcp的区别</li><li>什么时候需要TCP四次挥手？</li><li>traceroute 有什么作用？</li><li>HTTP 的方法有哪些？</li><li>TIME_WAIT危害</li><li>select什么情况返回0</li><li>半连接在哪个阶段</li><li>TCP 的 keepalive 了解吗？说一说它和 HTTP 的 keepalive 的区别？</li><li>简述常见的 HTTP 状态码的含义（30从系统层面上，UDP 如何保证尽量可靠？</li><li>指针与引用的区别</li><li>iPv4 和 iPv6 的区别</li><li>项目中说用到线程池，开多大，为什么运用线程池？</li><li>如何设计 API 接口使其实现幂等性？</li><li>TCP 的 TIME_WAIT 和 CLOSE_WAIT</li><li>HTTP 报文头部的组成结构</li><li>RestFul 与 RPC 的区别是什么？RestFul 的优点在哪里？</li><li>从输入 URL 到展现页面的全过程</li><li>什么是 TCP 粘包和拆包？</li><li>HTTP 中 GET 和 POST 区别</li><li>讲一下拥塞控制和流量控制</li><li>TCP 协议的延迟 ACK 和累计应答</li><li>TCP 挥手时出现大量 CLOSE_WAIT 或 TIME_WAIT 怎么解决？</li><li>ARP协议工作流程</li><li>tcp与udp的区别以及应用场景</li><li>HTTPS 的加密与认证过程</li><li>TCP 中 SYN 攻击是什么？如何防止？</li><li>HTTP 短链接与长链接的区别</li><li>TCP 的报文头部结构</li><li>http长连接与短连接的区别</li><li>TCP 滑动窗口以及重传机制</li><li>seq为1000，发送了1000个数据，下一个seq是多少?</li><li>chunked块了解？介绍下</li><li>BGP 协议和 OSPF 协议的区别</li><li>简述在四层和七层网络协议中负载均衡的原理</li><li>http协议格式，几种方法，功能是什么</li><li>syn如果丢了，重传多少次</li><li>epoll可读情况有哪些</li>",85),Ce=o("<li><p>操作系统</p><ul><li>创建线程有多少种方式？</li><li>如何调试服务器内存占用过高的问题？</li><li>简述操作系统如何进行内存管理</li><li>简述创建进程的流程</li><li>简述操作系统中 malloc 的实现原理</li><li>简述僵尸进程和孤儿进程及其危害和处理</li><li>两个线程交替打印一个共享变量</li><li>进程通信中的管道实现原理是什么？</li><li>简述同步与异步的区别，阻塞与非阻塞的区别</li><li>malloc 创建的对象在堆还是栈中？</li><li>死锁产生的条件、死锁避免方法</li><li>进程的三状态模型、五状态模型、七状态模型</li><li>什么情况下，进程会进行切换？</li><li>Linux 系统态与用户态，什么时候会进入系统态？</li><li>Linux 下如何查看端口被哪个进程占用？</li><li>共享内存是如何实现的？</li><li>进程有多少种状态？</li><li>线程间有哪些通信方式？</li><li>Linux 下如何排查 CPU 以及 内存占用过多？</li><li>操作系统中，虚拟地址与物理地址之间如何映射？</li><li>CPU L1, L2缓存是什么</li><li>信号量是如何实现的？</li><li>什么时候会由用户态陷入内核态？</li><li>Linux 如何查看实时的滚动日志？</li><li>Linux 进程调度的算法</li><li>简述分页与分段，分页与分段的区别</li><li>Linux 虚拟内存的页面置换算法</li><li>Linux 中虚拟内存和物理内存有什么区别？有什么优点？</li><li>traceroute 命令的原理</li><li>操作系统是通过什么机制触发系统调用的？</li><li>Linux 零拷贝的原理</li><li>系统调用的过程是怎样的？</li><li>Linux 的 IO模型有哪些</li><li>简述自旋锁与互斥锁的使用场景</li><li>多线程和多进程的区别是什么？</li><li>简述几个常用的 Linux 命令以及他们的功能</li><li>进程空间从高位到低位都有些什么？</li><li>简述缓冲区溢出及其危害</li><li>mmap 的使用场景以及原理</li><li>BIO、NIO 有什么区别？怎么判断写文件时 Buffer 已经写满？</li><li>线程有多少种状态，状态之间如何转换</li><li>简述操作系统中的缺页中断</li><li>Linux 下如何查看 CPU 荷载，正在运行的进程，某个端口对应的进程？</li><li>进程和线程之间有什么区别？</li><li>进程间有哪些通信方式？</li><li>为什么进程切换慢，线程切换快？</li><li>线程从进程继承了哪些资源？线程独享哪些资源？</li><li>Linux 页大小是多少？</li><li>select, poll, epoll 的使用场景以及区别，epoll 中水平触发以及边缘触发有什么不同？</li></ul></li><li><p>数据库</p><ul><li>数据库三大范式是什么</li><li>mysql有关权限的表都有哪几个</li><li>MySQL的binlog有有几种录入格式？分别有什么区别？</li><li>mysql有哪些数据类型</li><li>MySQL存储引擎MyISAM与InnoDB区别</li><li>MyISAM索引与InnoDB索引的区别？</li><li>InnoDB引擎的4大特性</li><li>存储引擎选择</li><li>什么是索引？</li><li>索引有哪些优缺点？</li><li>索引使用场景（重点）</li><li>索引有哪几种类型？</li><li>索引的数据结构（b树，hash）</li><li>索引的基本原理</li><li>索引算法有哪些？</li><li>索引设计的原则？</li><li>创建索引的原则</li><li>创建索引的三种方式，删除索引</li><li>创建索引时需要注意什么？</li><li>使用索引查询一定能提高查询的性能吗？为什么</li><li>百万级别或以上的数据如何删除</li><li>前缀索引</li><li>什么是最左前缀原则？什么是最左匹配原则</li><li>B树和B+树的区别</li><li>使用B树的好处</li><li>使用B+树的好处</li><li>Hash索引和B+树所有有什么区别或者说优劣呢?</li><li>数据库为什么使用B+树而不是B树</li><li>B+树在满足聚簇索引和覆盖索引的时候不需要回表查询数据，</li><li>什么是聚簇索引？何时使用聚簇索引与非聚簇索引</li><li>非聚簇索引一定会回表查询吗？</li><li>联合索引是什么？为什么需要注意联合索引中的顺序？</li><li>什么是数据库事务？</li><li>事物的四大特性(ACID)介绍一下?</li><li>什么是脏读？幻读？不可重复读？</li><li>什么是事务的隔离级别？MySQL的默认隔离级别是什么？</li><li>对MySQL的锁了解吗</li><li>隔离级别与锁的关系</li><li>按照锁的粒度分数据库锁有哪些？锁机制与InnoDB锁算法</li><li>从锁的类别上分MySQL都有哪些锁呢？像上面那样子进行锁定岂不是有点阻碍并发效率了</li><li>MySQL中InnoDB引擎的行锁是怎么实现的？</li><li>InnoDB存储引擎的锁的算法有三种</li><li>什么是死锁？怎么解决？</li><li>数据库的乐观锁和悲观锁是什么？怎么实现的？</li><li>为什么要使用视图？什么是视图？</li><li>视图有哪些特点？</li><li>视图的使用场景有哪些？</li><li>视图的优点</li><li>视图的缺点</li><li>什么是游标？</li><li>存储过程与函数</li><li>什么是存储过程？有哪些优缺点？</li><li>什么是触发器？触发器的使用场景有哪些？</li><li>MySQL中都有哪些触发器？</li><li>常用SQL语句</li><li>SQL语句主要分为哪几类</li><li>超键、候选键、主键、外键分别是什么？</li><li>SQL 约束有哪几种？</li><li>六种关联查询</li><li>什么是子查询</li><li>子查询的三种情况</li><li>mysql中 in 和 exists 区别</li><li>varchar与char的区别</li><li>varchar(50)中50的涵义</li><li>int(20)中20的涵义</li><li>mysql为什么这么设计</li><li>mysql中int(10)和char(10)以及varchar(10)的区别</li><li>FLOAT和DOUBLE的区别是什么？</li><li>drop、delete与truncate的区别</li><li>UNION与UNION ALL的区别？</li><li>如何定位及优化SQL语句的性能问题？创建的索引有没有被使用到?或者说怎么才可以知道这条语句运行很慢的原因？</li><li>SQL的生命周期？</li><li>大表数据查询，怎么优化</li><li>超大分页怎么处理？</li><li>mysql 分页怎么实现</li><li>慢查询日志怎么看</li><li>关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢查询都怎么优化过？</li><li>为什么要尽量设定一个主键？</li><li>主键使用自增ID还是UUID？</li><li>字段为什么要求定义为not null？</li><li>如果要存储用户的密码散列，应该使用什么字段进行存储？</li><li>优化查询过程中的数据访问</li><li>优化长难的查询语句</li><li>优化特定类型的查询语句</li><li>优化关联查询</li><li>优化子查询</li><li>优化LIMIT分页</li><li>优化UNION查询</li><li>优化WHERE子句</li><li>数据库优化</li><li>为什么要优化</li><li>数据库结构优化</li><li>MySQL数据库cpu飙升到500%的话他怎么处理？</li><li>大表怎么优化？某个表有近千万数据，CRUD比较慢，如何优化？分库分表了是怎么做的？分表分库了有什么问题？有用到中间件么？他们的原理知道么？</li><li>垂直分表适用场景</li><li>水平分表适用场景</li><li>水平切分的缺点</li><li>MySQL的复制原理以及流程</li><li>读写分离有哪些解决方案？</li><li>备份计划，mysqldump以及xtranbackup的实现原理</li><li>数据表损坏的修复方式有哪些？</li></ul></li>",2),Me=t("p",null,"骚话连篇",-1),Be={href:"https://mp.weixin.qq.com/s/PP80aD-GQp7VtgyfHj392g",target:"_blank",rel:"noopener noreferrer"},Ie={href:"https://mp.weixin.qq.com/s/lpmCHabbFarXwR1ZJwJ_kg",target:"_blank",rel:"noopener noreferrer"},je={href:"https://mp.weixin.qq.com/s/K9a_TTYRmw5vQzCsCQTQrw",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://mp.weixin.qq.com/s/9_Au8hb-_5fNDiN4s0tNHw",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://mp.weixin.qq.com/s/xawnze8S1SGmtK6rQ6bkMQ",target:"_blank",rel:"noopener noreferrer"},Le=o('<li><p>包</p><ul><li><a href="#%E5%B8%B8%E7%94%A8%E5%8C%85">常用官方包说明</a></li><li><a href="#%E4%B8%89%E6%96%B9%E5%8C%85">常用第三方包说明</a></li><li><a href="#%E6%A1%86%E6%9E%B6">常用框架</a></li><li><a href="#%E5%AE%8C%E6%95%B4%E5%8C%85">完整标准库列表</a></li><li><a href="#%E4%BC%98%E7%A7%80%E7%9A%84%E5%BC%80%E6%BA%90%E5%BA%93">优秀的第三方库</a><ul><li><a href="#%E9%9F%B3%E9%A2%91%E5%92%8C%E9%9F%B3%E4%B9%90">音频和音乐</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84">数据结构:Go中的通用数据结构和算法</a></li><li><a href="#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F">分布式系统:Go中的通用数据结构和算法</a></li><li><a href="#%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6">电子邮件:实现电子邮件创建和发送的库和工具</a></li><li><a href="#%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80">嵌入式脚本语言:在go代码中嵌入其他语言</a></li><li><a href="#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86">错误处理</a></li><li><a href="#%E6%96%87%E4%BB%B6">处理文件和文件系统的库</a></li><li><a href="#%E9%87%91%E8%9E%8D">金融:会计和财务软件包</a></li><li><a href="#%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91">游戏开发:游戏开发相关库</a></li><li><a href="#%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE">地理位置:地理相关的位置信息和工具库</a></li><li><a href="#%E7%BC%96%E8%AF%91%E5%99%A8">编译器相关:转到其他语言</a></li><li><a href="#Goroutines">Goroutines:用于管理和使用Goroutines的工具</a></li><li><a href="#%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2">图形界面:用于构建GUI应用程序的库</a></li><li><a href="#%E5%9B%BE%E7%89%87">图片:用于处理图像的库</a></li><li><a href="#%E7%89%A9%E8%81%94%E7%BD%91">物联网:物联网设备编程库</a></li><li><a href="#JSON%E6%A0%BC%E5%BC%8F">JSON格式:用于处理JSON的库</a></li><li><a href="#%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0">机器学习:常用机器学习库</a></li><li><a href="#%E5%BE%AE%E8%BD%AF%E5%8A%9E%E5%85%AC%E8%BD%AF%E4%BB%B6">微软办公软件</a></li><li><a href="#%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86">自然语言处理</a></li><li><a href="#%E7%BD%91%E7%BB%9C">网络:与网络各层配合使用的库</a></li><li><a href="#%E8%A7%86%E9%A2%91">视频:用于处理视频的库</a></li></ul></li></ul></li>',1),ze=o('<p><br></p><ul><li>其他</li></ul><ol><li>常用包<br><a name="常用包"></a> <a name="常用包"></a></li></ol><table><thead><tr><th style="text-align:center;">常用包</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">fmt</td><td style="text-align:center;">实现格式化的输入输出操作，其中的fmt.Printf()和fmt.Println()是开发者使用最为频繁的函数。</td></tr><tr><td style="text-align:center;">io</td><td style="text-align:center;">实现了一系列非平台相关的IO相关接口和实现，比如提供了对os中系统相关的IO功能的封装。我们在进行流式读写（比如读写文件）时，通常会用到该包。</td></tr><tr><td style="text-align:center;">bufio</td><td style="text-align:center;">它在io的基础上提供了缓存功能。在具备了缓存功能后， bufio可以比较方便地提供ReadLine之类的操作。</td></tr><tr><td style="text-align:center;">strconv</td><td style="text-align:center;">提供字符串与基本数据类型互转的能力。</td></tr><tr><td style="text-align:center;">os</td><td style="text-align:center;">本包提供了对操作系统功能的非平台相关访问接口。接口为Unix风格。提供的功能包括文件操作、进程管理、信号和用户账号等。</td></tr><tr><td style="text-align:center;">sync</td><td style="text-align:center;">它提供了基本的同步原语。在多个goroutine访问共享资源的时候，需要使用sync中提供的锁机制。</td></tr><tr><td style="text-align:center;">flag</td><td style="text-align:center;">它提供命令行参数的规则定义和传入参数解析的功能。绝大部分的命令行程序都需要用到这个包。</td></tr><tr><td style="text-align:center;">encoding/json</td><td style="text-align:center;">JSON目前广泛用做网络程序中的通信格式。本包提供了对JSON的基本支持，比如从一个对象序列化为JSON字符串，或者从JSON字符串反序列化出一个具体的对象等。</td></tr><tr><td style="text-align:center;">http</td><td style="text-align:center;">通过http包，只需要数行代码，即可实现一个爬虫或者一个Web服务器，这在传统语言中是无法想象的。</td></tr></tbody></table><p><br> <br><a name="三方包"></a> <a name="三方包"></a><br> 2. 常用第三方包</p>',5),De=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"地址")])],-1),Ne=t("td",{style:{"text-align":"center"}},"数据库操作",-1),Oe={style:{"text-align":"center"}},Re={href:"https://github.com/jinzhu/gorm",target:"_blank",rel:"noopener noreferrer"},He={href:"https://github.com/go-xorm/xorm",target:"_blank",rel:"noopener noreferrer"},Ue=t("td",{style:{"text-align":"center"}},"搜索es",-1),Je={style:{"text-align":"center"}},Qe={href:"https://github.com/olivere/elastic",target:"_blank",rel:"noopener noreferrer"},We=t("td",{style:{"text-align":"center"}},"rocketmq操作",-1),Ve={style:{"text-align":"center"}},Xe={href:"https://github.com/apache/rocketmq-client-go/v2",target:"_blank",rel:"noopener noreferrer"},Ke=t("td",{style:{"text-align":"center"}},"rabbitmq 操作",-1),Ze={style:{"text-align":"center"}},Ye={href:"https://github.com/streadway/amqp",target:"_blank",rel:"noopener noreferrer"},$e=t("td",{style:{"text-align":"center"}},"redis 操作",-1),tn={style:{"text-align":"center"}},en={href:"https://github.com/go-redis/redis",target:"_blank",rel:"noopener noreferrer"},nn=t("td",{style:{"text-align":"center"}},"etcd 操作",-1),rn={style:{"text-align":"center"}},on={href:"https://pkg.go.dev/go.etcd.io/etcd/clientv3",target:"_blank",rel:"noopener noreferrer"},ln=t("td",{style:{"text-align":"center"}},"kafka",-1),sn={style:{"text-align":"center"}},an={href:"https://github.com/Shopify/sarama",target:"_blank",rel:"noopener noreferrer"},cn={href:"https://github.com/bsm/sarama-cluster",target:"_blank",rel:"noopener noreferrer"},_n=t("td",{style:{"text-align":"center"}},"excel 操作",-1),hn={style:{"text-align":"center"}},dn={href:"https://github.com/360EntSecGroup-Skylar/excelize",target:"_blank",rel:"noopener noreferrer"},gn=t("td",{style:{"text-align":"center"}},"ppt 操作",-1),un={style:{"text-align":"center"}},pn={href:"https://golang.org/x/tools/cmd/present",target:"_blank",rel:"noopener noreferrer"},yn=t("td",{style:{"text-align":"center"}},"go-svg 操作",-1),xn={style:{"text-align":"center"}},bn={href:"https://github.com/ajstarks/svgo",target:"_blank",rel:"noopener noreferrer"},fn=t("td",{style:{"text-align":"center"}},"go 布隆过滤器实现",-1),mn={style:{"text-align":"center"}},kn={href:"https://github.com/AndreasBriese/bbloom",target:"_blank",rel:"noopener noreferrer"},Gn=t("td",{style:{"text-align":"center"}},"json相关",-1),En={style:{"text-align":"center"}},wn={href:"https://github.com/bitly/go-simplejson",target:"_blank",rel:"noopener noreferrer"},Tn=t("td",{style:{"text-align":"center"}},"LRU Cache实现",-1),Pn={style:{"text-align":"center"}},An={href:"https://github.com/bluele/gcache",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://github.com/hashicorp/golang-lru",target:"_blank",rel:"noopener noreferrer"},vn=t("td",{style:{"text-align":"center"}},"go运行时函数替换",-1),Cn={style:{"text-align":"center"}},Mn={href:"https://github.com/bouk/monkey",target:"_blank",rel:"noopener noreferrer"},Bn=t("td",{style:{"text-align":"center"}},"toml",-1),In={style:{"text-align":"center"}},jn={href:"https://github.com/toml-lang/toml",target:"_blank",rel:"noopener noreferrer"},qn={href:"https://github.com/naoina/toml",target:"_blank",rel:"noopener noreferrer"},Fn=t("td",{style:{"text-align":"center"}},"yaml",-1),Ln={style:{"text-align":"center"}},zn={href:"https://github.com/go-yaml/yaml",target:"_blank",rel:"noopener noreferrer"},Dn=t("td",{style:{"text-align":"center"}},"viper",-1),Nn={style:{"text-align":"center"}},On={href:"https://github.com/spf13/viper",target:"_blank",rel:"noopener noreferrer"},Rn=t("td",{style:{"text-align":"center"}},"go key/value存储",-1),Hn={style:{"text-align":"center"}},Un={href:"https://github.com/etcd-io/bbolt",target:"_blank",rel:"noopener noreferrer"},Jn=t("td",{style:{"text-align":"center"}},"基于ringbuffer的无锁golang workpool",-1),Qn={style:{"text-align":"center"}},Wn={href:"https://github.com/Dai0522/workpool",target:"_blank",rel:"noopener noreferrer"},Vn=t("td",{style:{"text-align":"center"}},"轻量级的协程池",-1),Xn={style:{"text-align":"center"}},Kn={href:"https://github.com/ivpusic/grpool",target:"_blank",rel:"noopener noreferrer"},Zn=t("td",{style:{"text-align":"center"}},"打印go的详细数据结构",-1),Yn={style:{"text-align":"center"}},$n={href:"https://github.com/davecgh/go-spew",target:"_blank",rel:"noopener noreferrer"},tr=t("td",{style:{"text-align":"center"}},"基于ringbuffer实现的队列",-1),er={style:{"text-align":"center"}},nr={href:"https://github.com/eapache/queue",target:"_blank",rel:"noopener noreferrer"},rr=t("td",{style:{"text-align":"center"}},"拼音",-1),or={style:{"text-align":"center"}},lr={href:"https://github.com/go-ego/gpy",target:"_blank",rel:"noopener noreferrer"},sr=t("td",{style:{"text-align":"center"}},"分词",-1),ir={style:{"text-align":"center"}},ar={href:"https://github.com/go-ego/gse",target:"_blank",rel:"noopener noreferrer"},cr=t("td",{style:{"text-align":"center"}},"搜索",-1),_r={style:{"text-align":"center"}},hr={href:"https://github.com/go-ego/riot",target:"_blank",rel:"noopener noreferrer"},dr=t("td",{style:{"text-align":"center"}},"windows COM",-1),gr={style:{"text-align":"center"}},ur={href:"https://github.com/go-ego/cedar",target:"_blank",rel:"noopener noreferrer"},pr=t("td",{style:{"text-align":"center"}},"session",-1),yr={style:{"text-align":"center"}},xr={href:"https://github.com/gorilla/sessions",target:"_blank",rel:"noopener noreferrer"},br=t("td",{style:{"text-align":"center"}},"路由",-1),fr={style:{"text-align":"center"}},mr={href:"https://github.com/gorilla/mux",target:"_blank",rel:"noopener noreferrer"},kr=t("td",{style:{"text-align":"center"}},"websocket",-1),Gr={style:{"text-align":"center"}},Er={href:"https://github.com/gorilla/websocket",target:"_blank",rel:"noopener noreferrer"},wr=t("td",{style:{"text-align":"center"}},"Action handler",-1),Tr={style:{"text-align":"center"}},Pr={href:"https://github.com/gorilla/handlers",target:"_blank",rel:"noopener noreferrer"},Ar=t("td",{style:{"text-align":"center"}},"csrf",-1),Sr={style:{"text-align":"center"}},vr={href:"https://github.com/gorilla/csrf",target:"_blank",rel:"noopener noreferrer"},Cr=t("td",{style:{"text-align":"center"}},"context",-1),Mr={style:{"text-align":"center"}},Br={href:"https://github.com/gorilla/context",target:"_blank",rel:"noopener noreferrer"},Ir=t("td",{style:{"text-align":"center"}},"过滤html标签",-1),jr={style:{"text-align":"center"}},qr={href:"https://github.com/grokify/html-strip-tags-go",target:"_blank",rel:"noopener noreferrer"},Fr=t("td",{style:{"text-align":"center"}},"可配置的HTML标签过滤",-1),Lr={style:{"text-align":"center"}},zr={href:"https://github.com/microcosm-cc/bluemonday",target:"_blank",rel:"noopener noreferrer"},Dr=t("td",{style:{"text-align":"center"}},"根据IP获取地理位置信息",-1),Nr={style:{"text-align":"center"}},Or={href:"https://github.com/ipipdotnet/ipdb-go",target:"_blank",rel:"noopener noreferrer"},Rr=t("td",{style:{"text-align":"center"}},"html转markdown",-1),Hr={style:{"text-align":"center"}},Ur={href:"https://github.com/jaytaylor/html2text",target:"_blank",rel:"noopener noreferrer"},Jr=t("td",{style:{"text-align":"center"}},"goroutine 本地存储",-1),Qr={style:{"text-align":"center"}},Wr={href:"https://github.com/jtolds/gls",target:"_blank",rel:"noopener noreferrer"},Vr=t("td",{style:{"text-align":"center"}},"彩色输出",-1),Xr={style:{"text-align":"center"}},Kr={href:"https://github.com/mgutz/ansi",target:"_blank",rel:"noopener noreferrer"},Zr=t("td",{style:{"text-align":"center"}},"表格打印",-1),Yr={style:{"text-align":"center"}},$r={href:"https://github.com/olekukonko/tablewriter",target:"_blank",rel:"noopener noreferrer"},to=t("td",{style:{"text-align":"center"}},"reflect 更高效的反射API",-1),eo={style:{"text-align":"center"}},no={href:"https://github.com/modern-go/reflect2",target:"_blank",rel:"noopener noreferrer"},ro=t("td",{style:{"text-align":"center"}},"msgfmt (格式化字符串，将%更换为变量名)",-1),oo={style:{"text-align":"center"}},lo={href:"https://github.com/modern-go/msgfmt",target:"_blank",rel:"noopener noreferrer"},so=t("td",{style:{"text-align":"center"}},"可取消的goroutine",-1),io={style:{"text-align":"center"}},ao={href:"https://github.com/modern-go/concurrent",target:"_blank",rel:"noopener noreferrer"},co=t("td",{style:{"text-align":"center"}},"深度拷贝",-1),_o={style:{"text-align":"center"}},ho={href:"https://github.com/mohae/deepcopy",target:"_blank",rel:"noopener noreferrer"},go=t("td",{style:{"text-align":"center"}},"安全的类型转换包",-1),uo={style:{"text-align":"center"}},po={href:"https://github.com/spf13/cast",target:"_blank",rel:"noopener noreferrer"},yo=t("td",{style:{"text-align":"center"}},"从文本中提取链接",-1),xo={style:{"text-align":"center"}},bo={href:"https://github.com/mvdan/xurls",target:"_blank",rel:"noopener noreferrer"},fo=t("td",{style:{"text-align":"center"}},"字符串格式处理（驼峰转换）",-1),mo={style:{"text-align":"center"}},ko={href:"https://godoc.org/github.com/naoina/go-stringutil",target:"_blank",rel:"noopener noreferrer"},Go=t("td",{style:{"text-align":"center"}},"文本diff实现",-1),Eo={style:{"text-align":"center"}},wo={href:"https://github.com/pmezard/go-difflib",target:"_blank",rel:"noopener noreferrer"},To=t("td",{style:{"text-align":"center"}},"uuid相关",-1),Po={style:{"text-align":"center"}},Ao={href:"https://github.com/satori/go.uuid",target:"_blank",rel:"noopener noreferrer"},So={href:"https://github.com/snluu/uuid",target:"_blank",rel:"noopener noreferrer"},vo=t("td",{style:{"text-align":"center"}},"去除UTF编码中的BOM",-1),Co={style:{"text-align":"center"}},Mo={href:"https://github.com/ssor/bom",target:"_blank",rel:"noopener noreferrer"},Bo=t("td",{style:{"text-align":"center"}},"图片缩放",-1),Io={style:{"text-align":"center"}},jo={href:"https://github.com/nfnt/resize",target:"_blank",rel:"noopener noreferrer"},qo=t("td",{style:{"text-align":"center"}},"生成 mock server",-1),Fo={style:{"text-align":"center"}},Lo={href:"https://github.com/otokaze/mock",target:"_blank",rel:"noopener noreferrer"},zo=t("td",{style:{"text-align":"center"}},"go 性能上报到influxdb",-1),Do={style:{"text-align":"center"}},No={href:"https://github.com/rcrowley/go-metrics",target:"_blank",rel:"noopener noreferrer"},Oo=t("td",{style:{"text-align":"center"}},"go zookeeper客户端",-1),Ro={style:{"text-align":"center"}},Ho={href:"https://github.com/samuel/go-zookeeper",target:"_blank",rel:"noopener noreferrer"},Uo=t("td",{style:{"text-align":"center"}},"go thrift",-1),Jo={style:{"text-align":"center"}},Qo={href:"https://github.com/samuel/go-thrift",target:"_blank",rel:"noopener noreferrer"},Wo=t("td",{style:{"text-align":"center"}},"MQTT 客户端",-1),Vo={style:{"text-align":"center"}},Xo={href:"https://github.com/shirou/mqttcli",target:"_blank",rel:"noopener noreferrer"},Ko=t("td",{style:{"text-align":"center"}},"hbase",-1),Zo={style:{"text-align":"center"}},Yo={href:"https://github.com/tsuna/gohbase",target:"_blank",rel:"noopener noreferrer"},$o=t("td",{style:{"text-align":"center"}},"go 性能上报到influxdb",-1),tl={style:{"text-align":"center"}},el={href:"https://github.com/rcrowley/go-metrics",target:"_blank",rel:"noopener noreferrer"},nl=t("td",{style:{"text-align":"center"}},"go 性能上报到prometheus",-1),rl={style:{"text-align":"center"}},ol={href:"https://github.com/deathowl/go-metrics-prometheus",target:"_blank",rel:"noopener noreferrer"},ll=t("td",{style:{"text-align":"center"}},"ps utils",-1),sl={style:{"text-align":"center"}},il={href:"https://github.com/shirou/gopsutil",target:"_blank",rel:"noopener noreferrer"},al=t("td",{style:{"text-align":"center"}},"小数处理",-1),cl={style:{"text-align":"center"}},_l={href:"https://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"},hl=t("td",{style:{"text-align":"center"}},"结构化日志处理(json)",-1),dl={style:{"text-align":"center"}},gl={href:"https://github.com/sirupsen/logrus",target:"_blank",rel:"noopener noreferrer"},ul=t("td",{style:{"text-align":"center"}},"命令行程序框架 cli",-1),pl={style:{"text-align":"center"}},yl={href:"https://github.com/urfave/cli",target:"_blank",rel:"noopener noreferrer"},xl=t("td",{style:{"text-align":"center"}},"命令行程序框架 cobra",-1),bl={style:{"text-align":"center"}},fl={href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"},ml=t("p",null,[t("br"),e(),t("br"),t("a",{name:"框架"}),e(),t("a",{name:"框架"}),t("br"),e(" 3. 必看项目")],-1),kl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"项目"),t("th",{style:{"text-align":"center"}},"地址"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Gl=t("td",{style:{"text-align":"center"}},"gin",-1),El={style:{"text-align":"center"}},wl={href:"https://github.com/gin-gonic/gin",target:"_blank",rel:"noopener noreferrer"},Tl=t("td",{style:{"text-align":"center"}},"轻量级web框架，很多公司都是基于它进行魔改",-1),Pl=t("td",{style:{"text-align":"center"}},"beego",-1),Al={style:{"text-align":"center"}},Sl={href:"https://github.com/beego/beego",target:"_blank",rel:"noopener noreferrer"},vl=t("td",{style:{"text-align":"center"}},"也是web框架，比较全能",-1),Cl=t("td",{style:{"text-align":"center"}},"kratos",-1),Ml={style:{"text-align":"center"}},Bl={href:"https://github.com/go-kratos/kratos",target:"_blank",rel:"noopener noreferrer"},Il=t("td",{style:{"text-align":"center"}},"bilibili开源的微服务框架，b站出品必属于精品",-1),jl=t("td",{style:{"text-align":"center"}},"TiDB",-1),ql={style:{"text-align":"center"}},Fl={href:"https://github.com/pingcap/tidb",target:"_blank",rel:"noopener noreferrer"},Ll=t("td",{style:{"text-align":"center"}},"见识过mysql性能瓶颈之后你会想要选择的一款数据库",-1),zl=t("p",null,[t("br"),e(),t("br"),t("a",{name:"完整包"}),e(),t("a",{name:"完整包"}),t("br"),e(" 4. 完整标准库列表")],-1),Dl=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"子包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Nl=t("tr",null,[t("td",{style:{"text-align":"center"}},"bufio"),t("td",{style:{"text-align":"center"}},"bytes"),t("td",{style:{"text-align":"center"}},"提供了对字节切片操作的函数")],-1),Ol=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"crypto"),t("td",{style:{"text-align":"center"}},"收集了常见的加密常数")],-1),Rl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"errors"),t("td",{style:{"text-align":"center"}},"实现了操作错误的函数")],-1),Hl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"Expvar"),t("td",{style:{"text-align":"center"}},"为公共变量提供了一个标准的接口，如服务器中的运算计数器")],-1),Ul=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"flag"),t("td",{style:{"text-align":"center"}},"实现了命令行标记解析")],-1),Jl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"fmt"),t("td",{style:{"text-align":"center"}},"实现了格式化输入输出")],-1),Ql=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"hash"),t("td",{style:{"text-align":"center"}},"提供了哈希函数接口")],-1),Wl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"html"),t("td",{style:{"text-align":"center"}},"实现了一个HTML5兼容的分词器和解析器")],-1),Vl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"image"),t("td",{style:{"text-align":"center"}},"实现了一个基本的二维图像库")],-1),Xl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"io"),t("td",{style:{"text-align":"center"}},"提供了对I/O原语的基本接口")],-1),Kl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"log"),t("td",{style:{"text-align":"center"}},"它是一个简单的记录包，提供最基本的日志功能")],-1),Zl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"math"),t("td",{style:{"text-align":"center"}},"提供了一些基本的常量和数学函数")],-1),Yl=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"mine"),t("td",{style:{"text-align":"center"}},"实现了部分的MIME规范")],-1),$l=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"net"),t("td",{style:{"text-align":"center"}},"提供了一个对UNIX网络套接字的可移植接口，包括TCP/IP、 UDP域名解析和UNIX域套接字")],-1),ts=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"os"),t("td",{style:{"text-align":"center"}},"为操作系统功能实现了一个平台无关的接口")],-1),es=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"path"),t("td",{style:{"text-align":"center"}},"实现了对斜线分割的文件名路径的操作")],-1),ns=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"reflect"),t("td",{style:{"text-align":"center"}},"实现了运行时反射，允许一个程序以任意类型操作对象")],-1),rs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"regexp"),t("td",{style:{"text-align":"center"}},"实现了一个简单的正则表达式库")],-1),os=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"runtime"),t("td",{style:{"text-align":"center"}},"包含与Go运行时系统交互的操作，如控制goroutine的函数")],-1),ls=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sort"),t("td",{style:{"text-align":"center"}},"提供对集合排序的基础函数集")],-1),ss=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"strconv"),t("td",{style:{"text-align":"center"}},"实现了在基本数据类型和字符串之间的转换")],-1),is=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"strings"),t("td",{style:{"text-align":"center"}},"实现了操作字符串的简单函数")],-1),as=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sync"),t("td",{style:{"text-align":"center"}},"提供了基本的同步机制，如互斥锁")],-1),cs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"syscall"),t("td",{style:{"text-align":"center"}},"包含一个低级的操作系统原语的接口")],-1),_s=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"testing"),t("td",{style:{"text-align":"center"}},"提供对自动测试Go包的支持")],-1),hs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"time"),t("td",{style:{"text-align":"center"}},"提供测量和显示时间的功能")],-1),ds=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"unicode"),t("td",{style:{"text-align":"center"}},"Unicode编码相关的基础函数")],-1),gs=t("tr",null,[t("td",{style:{"text-align":"center"}},"archive"),t("td",{style:{"text-align":"center"}},"tar"),t("td",{style:{"text-align":"center"}},"实现对tar压缩文档的访问")],-1),us=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"zip"),t("td",{style:{"text-align":"center"}},"提供对ZIP压缩文档的读和写支持")],-1),ps=t("tr",null,[t("td",{style:{"text-align":"center"}},"compress"),t("td",{style:{"text-align":"center"}},"bzip2"),t("td",{style:{"text-align":"center"}},"实现了bzip2解压缩")],-1),ys=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"flate"),t("td",{style:{"text-align":"center"}},"实现了RFC 1951中所定义的DEFLATE压缩数据格式")],-1),xs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gzip"),t("td",{style:{"text-align":"center"}},"实现了RFC 1951中所定义的gzip格式压缩文件的读和写")],-1),bs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"lzw"),t("td",{style:{"text-align":"center"}},"实现了 Lempel-Ziv-Welch编码格式的压缩的数据格式")],-1),fs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"zlib"),t("td",{style:{"text-align":"center"}},"实现了RFC 1950中所定义的zlib格式压缩数据的读和写")],-1),ms=t("tr",null,[t("td",{style:{"text-align":"center"}},"container"),t("td",{style:{"text-align":"center"}},"heap"),t("td",{style:{"text-align":"center"}},"提供了实现heap.Interface接口的任何类型的堆操作")],-1),ks=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"lsit"),t("td",{style:{"text-align":"center"}},"实现了一个双链表")],-1),Gs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"ring"),t("td",{style:{"text-align":"center"}},"实现了对循环链表的操作")],-1),Es=t("tr",null,[t("td",{style:{"text-align":"center"}},"crypto"),t("td",{style:{"text-align":"center"}},"aes"),t("td",{style:{"text-align":"center"}},"实现了AES加密（以前的Rijndael）")],-1),ws=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"cipher"),t("td",{style:{"text-align":"center"}},"实现了标准的密码块模式，该模式可包装进低级的块加密实现中")],-1),Ts=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"des"),t("td",{style:{"text-align":"center"}},"实现了数据加密标准（ Data Encryption Standard，DES）和三重数据加密算法（ TripleData Encryption Algorithm， TDEA）")],-1),Ps=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"dsa"),t("td",{style:{"text-align":"center"}},"实现了FIPS 186-3所定义的数据签名算法（ Digital Signature Algorithm）")],-1),As=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"ecdsa"),t("td",{style:{"text-align":"center"}},"实现了FIPS 186-3所定义的椭圆曲线数据签名算法（ Elliptic Curve Digital SignatureAlgorithm）")],-1),Ss=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"elliptic"),t("td",{style:{"text-align":"center"}},"实现了素数域上几个标准的椭圆曲线")],-1),vs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"hmac"),t("td",{style:{"text-align":"center"}},"实现了键控哈希消息身份验证码（ Keyed-Hash Message Authentication Code，HMAC）")],-1),Cs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"md5"),t("td",{style:{"text-align":"center"}},"实现了RFC 1321中所定义的MD5哈希算法")],-1),Ms=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rand"),t("td",{style:{"text-align":"center"}},"实现了一个加密安全的伪随机数生成器")],-1),Bs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rc4"),t("td",{style:{"text-align":"center"}},"实现了RC4加密，其定义见Bruce Schneier的应用密码学（ Applied Cryptography）")],-1),Is=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rsa"),t("td",{style:{"text-align":"center"}},"实现了PKCS#1中所定义的RSA加密")],-1),js=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sha1"),t("td",{style:{"text-align":"center"}},"实现了RFC 3174中所定义的SHA1哈希算法")],-1),qs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sha256"),t("td",{style:{"text-align":"center"}},"实现了FIPS 180-2中所定义的SHA224和SHA256哈希算法")],-1),Fs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sha512"),t("td",{style:{"text-align":"center"}},"实现了FIPS 180-2中所定义的SHA384和SHA512哈希算法")],-1),Ls=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"subtle"),t("td",{style:{"text-align":"center"}},"实现了一些有用的加密函数，但需要仔细考虑以便正确应用它们")],-1),zs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"tls"),t("td",{style:{"text-align":"center"}},"部分实现了RFC 4346所定义的TLS 1.1协议")],-1),Ds=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"x509"),t("td",{style:{"text-align":"center"}},"可解析X.509编码的键值和证书")],-1),Ns=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"x509/pkix"),t("td",{style:{"text-align":"center"}},"包含用于对X.509证书、 CRL和OCSP的ASN.1解析和序列化的共享的、低级的结构")],-1),Os=t("tr",null,[t("td",{style:{"text-align":"center"}},"database"),t("td",{style:{"text-align":"center"}},"sql"),t("td",{style:{"text-align":"center"}},"围绕SQL提供了一个通用的接口")],-1),Rs=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"sql/driver"),t("td",{style:{"text-align":"center"}},"定义了数据库驱动所需实现的接口，同sql包的使用方式")],-1),Hs=t("tr",null,[t("td",{style:{"text-align":"center"}},"debug"),t("td",{style:{"text-align":"center"}},"dwarf"),t("td",{style:{"text-align":"center"}},"提供了对从可执行文件加载的DWARF调试信息的访问，这个包对于实现Go语言的调试器非常有价值")],-1),Us=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"elf"),t("td",{style:{"text-align":"center"}},"实现了对ELF对象文件的访问。 ELF是一种常见的二进制可执行文件和共享库的文件格式。 Linux采用了ELF格式")],-1),Js=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gosym"),t("td",{style:{"text-align":"center"}},"访问Go语言二进制程序中的调试信息。对于可视化调试很有价值")],-1),Qs=t("td",{style:{"text-align":"center"}},null,-1),Ws=t("td",{style:{"text-align":"center"}},"macho",-1),Vs={style:{"text-align":"center"}},Xs={href:"http://developer.apple.com/mac/library/documentation/DeveloperTools/Conceptual/MachORuntime/Reference/reference.html",target:"_blank",rel:"noopener noreferrer"},Ks=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"pe"),t("td",{style:{"text-align":"center"}},"实现了对PE（ Microsoft Windows Portable Executable）文件的访问")],-1),Zs=t("tr",null,[t("td",{style:{"text-align":"center"}},"encoding"),t("td",{style:{"text-align":"center"}},"ascii85"),t("td",{style:{"text-align":"center"}},"实现了ascii85数据编码，用于btoa工具和Adobe’s PostScript以及PDF文档格式")],-1),Ys=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"asn1"),t("td",{style:{"text-align":"center"}},"实现了解析DER编码的ASN.1数据结构，其定义见ITU-T Rec X.690")],-1),$s=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"base32"),t("td",{style:{"text-align":"center"}},"实现了RFC 4648中所定义的base32编码")],-1),ti=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"base64"),t("td",{style:{"text-align":"center"}},"实现了RFC 4648中所定义的base64编码")],-1),ei=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"binary"),t("td",{style:{"text-align":"center"}},"实现了在无符号整数值和字节串之间的转化，以及对固定尺寸值的读和写")],-1),ni=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"csv"),t("td",{style:{"text-align":"center"}},"可读和写由逗号分割的数值（ csv）文件")],-1),ri=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gob"),t("td",{style:{"text-align":"center"}},"管理gob流——在编码器（发送者）和解码器（接收者）之间进行二进制值交换")],-1),oi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"hex"),t("td",{style:{"text-align":"center"}},"实现了十六进制的编码和解码")],-1),li=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"json"),t("td",{style:{"text-align":"center"}},"实现了定义于RFC 4627中的JSON对象的编码和解码")],-1),si=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"pem"),t("td",{style:{"text-align":"center"}},"实现了PEM（ Privacy Enhanced Mail）数据编码")],-1),ii=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"xml"),t("td",{style:{"text-align":"center"}},"实现了一个简单的可理解XML名字空间的XML 1.0解析器")],-1),ai=t("tr",null,[t("td",{style:{"text-align":"center"}},"go"),t("td",{style:{"text-align":"center"}},"ast"),t("td",{style:{"text-align":"center"}},"声明了用于展示Go包中的语法树类型")],-1),ci=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"build"),t("td",{style:{"text-align":"center"}},"提供了构建Go包的工具")],-1),_i=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"doc"),t("td",{style:{"text-align":"center"}},"从一个Go AST（抽象语法树）中提取源代码文档")],-1),hi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"parser"),t("td",{style:{"text-align":"center"}},"实现了一个Go源文件解析器")],-1),di=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"printer"),t("td",{style:{"text-align":"center"}},"实现了对AST（抽象语法树）的打印")],-1),gi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"scanner"),t("td",{style:{"text-align":"center"}},"实现了一个Go源代码文本的扫描器")],-1),ui=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"token"),t("td",{style:{"text-align":"center"}},"定义了代表Go编程语言中词法标记以及基本操作标记（ printing、 predicates）的常量")],-1),pi=t("tr",null,[t("td",{style:{"text-align":"center"}},"hash"),t("td",{style:{"text-align":"center"}},"adler32"),t("td",{style:{"text-align":"center"}},"实现了Adler-32校验和")],-1),yi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"crc32"),t("td",{style:{"text-align":"center"}},"实现了32位的循环冗余校验或CRC-32校验和")],-1),xi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"crc64"),t("td",{style:{"text-align":"center"}},"实现了64位的循环冗余校验或CRC-64校验和")],-1),bi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"fnv"),t("td",{style:{"text-align":"center"}},"实现了Glenn Fowler、 Landon Curt Noll和Phong Vo所创建的FNV-1和FNV-1a未加密哈希函数")],-1),fi=t("tr",null,[t("td",{style:{"text-align":"center"}},"html"),t("td",{style:{"text-align":"center"}},"template"),t("td",{style:{"text-align":"center"}},"它自动构建HTML输出，并可防止代码注入")],-1),mi=t("tr",null,[t("td",{style:{"text-align":"center"}},"image"),t("td",{style:{"text-align":"center"}},"color"),t("td",{style:{"text-align":"center"}},"实现了一个基本的颜色库")],-1),ki=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"draw"),t("td",{style:{"text-align":"center"}},"提供一些做图函数")],-1),Gi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"gif"),t("td",{style:{"text-align":"center"}},"实现了一个GIF图像解码器")],-1),Ei=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"jpeg"),t("td",{style:{"text-align":"center"}},"实现了一个JPEG图像解码器和编码器")],-1),wi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"png"),t("td",{style:{"text-align":"center"}},"实现了一个PNG图像解码器和编码器")],-1),Ti=t("tr",null,[t("td",{style:{"text-align":"center"}},"index"),t("td",{style:{"text-align":"center"}},"suffixarray"),t("td",{style:{"text-align":"center"}},"通过构建内存索引实现的高速字符串匹配查找算法")],-1),Pi=t("tr",null,[t("td",{style:{"text-align":"center"}},"io"),t("td",{style:{"text-align":"center"}},"ioutil"),t("td",{style:{"text-align":"center"}},"实现了一些实用的I/O函数")],-1),Ai=t("tr",null,[t("td",{style:{"text-align":"center"}},"log"),t("td",{style:{"text-align":"center"}},"syslog"),t("td",{style:{"text-align":"center"}},"提供了对系统日志服务的简单接口")],-1),Si=t("tr",null,[t("td",{style:{"text-align":"center"}},"math"),t("td",{style:{"text-align":"center"}},"big"),t("td",{style:{"text-align":"center"}},"实现了多精度的算术运算（大数）")],-1),vi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"cmplx"),t("td",{style:{"text-align":"center"}},"为复数提供了基本的常量和数学函数")],-1),Ci=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rand"),t("td",{style:{"text-align":"center"}},"实现了伪随机数生成器")],-1),Mi=t("tr",null,[t("td",{style:{"text-align":"center"}},"mime"),t("td",{style:{"text-align":"center"}},"multipart"),t("td",{style:{"text-align":"center"}},"实现了在RFC 2046中定义的MIME多个部分的解析")],-1),Bi=t("tr",null,[t("td",{style:{"text-align":"center"}},"net"),t("td",{style:{"text-align":"center"}},"http"),t("td",{style:{"text-align":"center"}},"提供了HTTP客户端和服务器的实现")],-1),Ii=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"mail"),t("td",{style:{"text-align":"center"}},"实现了对邮件消息的解析")],-1),ji=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rpc"),t("td",{style:{"text-align":"center"}},"提供了对一个来自网络或其他I/O连接的对象可导出的方法的访问")],-1),qi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"smtp"),t("td",{style:{"text-align":"center"}},"实现了定义于RFC 5321中的简单邮件传输协议（ Simple Mail Transfer Protocol)")],-1),Fi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"textproto"),t("td",{style:{"text-align":"center"}},"实现了在HTTP、 NNTP和SMTP中基于文本的通用的请求/响应协议")],-1),Li=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"url"),t("td",{style:{"text-align":"center"}},"解析URL并实现查询转义")],-1),zi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/cgi"),t("td",{style:{"text-align":"center"}},"实现了定义于RFC 3875中的CGI（通用网关接口）")],-1),Di=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/fcgi"),t("td",{style:{"text-align":"center"}},"实现了FastCGI协议")],-1),Ni=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/httptest"),t("td",{style:{"text-align":"center"}},"提供了一些HTTP测试应用")],-1),Oi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/httputil"),t("td",{style:{"text-align":"center"}},"提供了一些HTTP应用函数，这些是对net/http包中的东西的补充，只不过相对不太常用")],-1),Ri=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"http/pprof"),t("td",{style:{"text-align":"center"}},"通过其HTTP服务器运行时提供性能测试数据，该数据的格式正是pprof可视化工具需要的")],-1),Hi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"rpc/jsonrpc"),t("td",{style:{"text-align":"center"}},"为rpc包实现了一个JSON-RPC ClientCodec和ServerCodec")],-1),Ui=t("tr",null,[t("td",{style:{"text-align":"center"}},"os"),t("td",{style:{"text-align":"center"}},"exec"),t("td",{style:{"text-align":"center"}},"可运行外部命令")],-1),Ji=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"user"),t("td",{style:{"text-align":"center"}},"通过名称和id进行用户账户检查")],-1),Qi=t("tr",null,[t("td",{style:{"text-align":"center"}},"path"),t("td",{style:{"text-align":"center"}},"filepath"),t("td",{style:{"text-align":"center"}},"实现了以与目标操作系统定义文件路径相兼容的方式处理文件名路径")],-1),Wi=t("tr",null,[t("td",{style:{"text-align":"center"}},"regexp"),t("td",{style:{"text-align":"center"}},"syntax"),t("td",{style:{"text-align":"center"}},"将正则表达式解析为语法树")],-1),Vi=t("tr",null,[t("td",{style:{"text-align":"center"}},"runtime"),t("td",{style:{"text-align":"center"}},"debug"),t("td",{style:{"text-align":"center"}},"包含当程序在运行时调试其自身的功能")],-1),Xi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"pprof"),t("td",{style:{"text-align":"center"}},"以pprof可视化工具需要的格式写运行时性能测试数据")],-1),Ki=t("tr",null,[t("td",{style:{"text-align":"center"}},"sync"),t("td",{style:{"text-align":"center"}},"atomic"),t("td",{style:{"text-align":"center"}},"提供了低级的用于实现同步算法的原子级的内存机制")],-1),Zi=t("tr",null,[t("td",{style:{"text-align":"center"}},"testing"),t("td",{style:{"text-align":"center"}},"iotest"),t("td",{style:{"text-align":"center"}},"提供一系列测试目的的类型，实现了Reader和Writer标准接口")],-1),Yi=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"quick"),t("td",{style:{"text-align":"center"}},"实现了用于黑箱测试的实用函数")],-1),$i=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"script"),t("td",{style:{"text-align":"center"}},"帮助测试使用通道的代码")],-1),ta=t("tr",null,[t("td",{style:{"text-align":"center"}},"text"),t("td",{style:{"text-align":"center"}},"scanner"),t("td",{style:{"text-align":"center"}},"为UTF-8文本提供了一个扫描器和分词器")],-1),ea=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"tabwriter"),t("td",{style:{"text-align":"center"}},"实现了一个写筛选器（ tabwriter.Writer），它可将一个输入的tab分割的列翻译为适当对齐的文本")],-1),na=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"template"),t("td",{style:{"text-align":"center"}},"数据驱动的模板引擎，用于生成类似HTML的文本输出格式")],-1),ra=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"template/parse"),t("td",{style:{"text-align":"center"}},"为template构建解析树")],-1),oa=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"unicode/utf16"),t("td",{style:{"text-align":"center"}},"实现了UTF-16序列的的编码和解码")],-1),la=t("tr",null,[t("td",{style:{"text-align":"center"}}),t("td",{style:{"text-align":"center"}},"unicode/utf8"),t("td",{style:{"text-align":"center"}},"实现了支持以UTF-8编码的文本的函数和常数")],-1),sa=t("p",null,[t("br"),e(),t("br"),t("a",{name:"优秀的开源库"}),e(),t("a",{name:"优秀的开源库"}),t("br"),e(" 5. 其他优秀的开源工具分类")],-1),ia=t("ul",null,[t("li",null,[e("音频和音乐"),t("br"),t("a",{name:"音频和音乐"}),e(),t("a",{name:"音频和音乐"})])],-1),aa=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),ca={style:{"text-align":"center"}},_a={href:"https://github.com/algoGuy/EasyMIDI",target:"_blank",rel:"noopener noreferrer"},ha=t("td",{style:{"text-align":"center"}},"EasyMidi是一个简单可靠的库，用于处理标准Midi文件（SMF）。",-1),da={style:{"text-align":"center"}},ga={href:"https://github.com/mewkiz/flac",target:"_blank",rel:"noopener noreferrer"},ua=t("td",{style:{"text-align":"center"}},"支持FLAC流的Native Go FLAC编码器/解码器。",-1),pa={style:{"text-align":"center"}},ya={href:"https://github.com/Comcast/gaad",target:"_blank",rel:"noopener noreferrer"},xa=t("td",{style:{"text-align":"center"}},"本机Go AAC比特流解析器。",-1),ba={style:{"text-align":"center"}},fa={href:"https://github.com/krig/go-sox",target:"_blank",rel:"noopener noreferrer"},ma=t("td",{style:{"text-align":"center"}},"用于go的libsox绑定。",-1),ka={style:{"text-align":"center"}},Ga={href:"https://github.com/zhulik/go_mediainfo",target:"_blank",rel:"noopener noreferrer"},Ea=t("td",{style:{"text-align":"center"}},"用于go的libmediainfo绑定。",-1),wa={style:{"text-align":"center"}},Ta={href:"https://github.com/dh1tw/gosamplerate",target:"_blank",rel:"noopener noreferrer"},Pa=t("td",{style:{"text-align":"center"}},"用于go的libsamplerate绑定。",-1),Aa={style:{"text-align":"center"}},Sa={href:"https://github.com/bogem/id3v2",target:"_blank",rel:"noopener noreferrer"},va=t("td",{style:{"text-align":"center"}},"用于Go的快速，稳定的ID3解析和编写库。",-1),Ca={style:{"text-align":"center"}},Ma={href:"https://github.com/gen2brain/malgo",target:"_blank",rel:"noopener noreferrer"},Ba=t("td",{style:{"text-align":"center"}},"迷你音频库。",-1),Ia={style:{"text-align":"center"}},ja={href:"https://github.com/tosone/minimp3",target:"_blank",rel:"noopener noreferrer"},qa=t("td",{style:{"text-align":"center"}},"轻量级MP3解码器库。",-1),Fa={style:{"text-align":"center"}},La={href:"https://github.com/go-mix/mix",target:"_blank",rel:"noopener noreferrer"},za=t("td",{style:{"text-align":"center"}},"为音乐应用程序基于序列转到本地音频混合器。",-1),Da={style:{"text-align":"center"}},Na={href:"https://github.com/tcolgate/mp3",target:"_blank",rel:"noopener noreferrer"},Oa=t("td",{style:{"text-align":"center"}},"Native Go MP3解码器。",-1),Ra={style:{"text-align":"center"}},Ha={href:"https://github.com/go-music-theory/music-theory",target:"_blank",rel:"noopener noreferrer"},Ua=t("td",{style:{"text-align":"center"}},"Go中的音乐理论模型。",-1),Ja={style:{"text-align":"center"}},Qa={href:"https://github.com/hajimehoshi/oto",target:"_blank",rel:"noopener noreferrer"},Wa=t("td",{style:{"text-align":"center"}},"在多个平台上播放声音的低级库。",-1),Va={style:{"text-align":"center"}},Xa={href:"https://github.com/gordonklaus/portaudio",target:"_blank",rel:"noopener noreferrer"},Ka=t("td",{style:{"text-align":"center"}},"用于PortAudio音频I / O库的绑定。",-1),Za={style:{"text-align":"center"}},Ya={href:"https://github.com/rakyll/portmidi",target:"_blank",rel:"noopener noreferrer"},$a=t("td",{style:{"text-align":"center"}},"绑定PortMidi。",-1),tc={style:{"text-align":"center"}},ec={href:"https://github.com/wtolson/go-taglib",target:"_blank",rel:"noopener noreferrer"},nc=t("td",{style:{"text-align":"center"}},"为taglib绑定。",-1),rc={style:{"text-align":"center"}},oc={href:"https://github.com/mccoyst/vorbis",target:"_blank",rel:"noopener noreferrer"},lc=t("td",{style:{"text-align":"center"}},"“本机” Go Vorbis解码器（使用CGO，但没有依赖项）。",-1),sc={style:{"text-align":"center"}},ic={href:"https://github.com/mdlayher/waveform",target:"_blank",rel:"noopener noreferrer"},ac=t("td",{style:{"text-align":"center"}},"Go程序包，能够从音频流生成波形图像。",-1),cc=t("ul",null,[t("li",null,[e("数据结构"),t("br"),t("a",{name:"数据结构"}),e(),t("a",{name:"数据结构"})])],-1),_c=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),hc={style:{"text-align":"center"}},dc={href:"https://github.com/shady831213/algorithms",target:"_blank",rel:"noopener noreferrer"},gc=t("td",{style:{"text-align":"center"}},"算法和数据结构。CLRS研究。",-1),uc={style:{"text-align":"center"}},pc={href:"https://github.com/zhuangsirui/binpacker",target:"_blank",rel:"noopener noreferrer"},yc=t("td",{style:{"text-align":"center"}},"二进制打包程序和解包程序可帮助用户构建自定义二进制流。",-1),xc={style:{"text-align":"center"}},bc={href:"https://github.com/yourbasic/bit",target:"_blank",rel:"noopener noreferrer"},fc=t("td",{style:{"text-align":"center"}},"具有额外的位旋转功能的Golang设置数据结构。",-1),mc={style:{"text-align":"center"}},kc={href:"https://github.com/willf/bitset",target:"_blank",rel:"noopener noreferrer"},Gc=t("td",{style:{"text-align":"center"}},"实现位集的Go包。",-1),Ec={style:{"text-align":"center"}},wc={href:"https://github.com/zhenjl/bloom",target:"_blank",rel:"noopener noreferrer"},Tc=t("td",{style:{"text-align":"center"}},"在Go中实现的Bloom过滤器。",-1),Pc={style:{"text-align":"center"}},Ac={href:"https://github.com/yourbasic/bloom",target:"_blank",rel:"noopener noreferrer"},Sc=t("td",{style:{"text-align":"center"}},"Golang Bloom过滤器实现。",-1),vc={style:{"text-align":"center"}},Cc={href:"https://github.com/tylertreat/BoomFilters",target:"_blank",rel:"noopener noreferrer"},Mc=t("td",{style:{"text-align":"center"}},"用于处理连续无界流的概率数据结构。",-1),Bc={style:{"text-align":"center"}},Ic={href:"https://github.com/free/concurrent-writer",target:"_blank",rel:"noopener noreferrer"},jc=t("td",{style:{"text-align":"center"}},"高并发直接替换bufio.Writer。",-1),qc={style:{"text-align":"center"}},Fc={href:"https://github.com/InVisionApp/conjungo",target:"_blank",rel:"noopener noreferrer"},Lc=t("td",{style:{"text-align":"center"}},"一个小型，强大而灵活的合并库。",-1),zc={style:{"text-align":"center"}},Dc={href:"https://github.com/seiflotfy/count-min-log",target:"_blank",rel:"noopener noreferrer"},Nc=t("td",{style:{"text-align":"center"}},"执行Count-Min-Log草图：使用近似计数器进行近似计数（类似于Count-Min草图，但使用较少的内存）。",-1),Oc={style:{"text-align":"center"}},Rc={href:"https://github.com/superwhiskers/crunch",target:"_blank",rel:"noopener noreferrer"},Hc=t("td",{style:{"text-align":"center"}},"Go包实现了用于轻松处理各种数据类型的缓冲区。",-1),Uc={style:{"text-align":"center"}},Jc={href:"https://github.com/seiflotfy/cuckoofilter",target:"_blank",rel:"noopener noreferrer"},Qc=t("td",{style:{"text-align":"center"}},"Cuckoo过滤器：是Go中实现的计数布隆过滤器的很好替代。",-1),Wc={style:{"text-align":"center"}},Vc={href:"https://github.com/edwingeng/deque",target:"_blank",rel:"noopener noreferrer"},Xc=t("td",{style:{"text-align":"center"}},"高度优化的双端队列。",-1),Kc={style:{"text-align":"center"}},Zc={href:"https://github.com/gammazero/deque",target:"_blank",rel:"noopener noreferrer"},Yc=t("td",{style:{"text-align":"center"}},"快速的环形缓冲区双端队列（双端队列）。",-1),$c={style:{"text-align":"center"}},t_={href:"https://github.com/srfrog/dict",target:"_blank",rel:"noopener noreferrer"},e_=t("td",{style:{"text-align":"center"}},"Go的类似Python的字典（dict）。",-1),n_={style:{"text-align":"center"}},r_={href:"https://github.com/zhenjl/encoding",target:"_blank",rel:"noopener noreferrer"},o_=t("td",{style:{"text-align":"center"}},"Go的整数压缩库。",-1),l_={style:{"text-align":"center"}},s_={href:"https://github.com/plar/go-adaptive-radix-tree",target:"_blank",rel:"noopener noreferrer"},i_=t("td",{style:{"text-align":"center"}},"自适应基数树的 Go实现。",-1),a_={style:{"text-align":"center"}},c_={href:"https://github.com/Workiva/go-datastructures",target:"_blank",rel:"noopener noreferrer"},__=t("td",{style:{"text-align":"center"}},"有用，高性能和线程安全的数据结构的集合。",-1),h_={style:{"text-align":"center"}},d_={href:"https://github.com/amallia/go-ef",target:"_blank",rel:"noopener noreferrer"},g_=t("td",{style:{"text-align":"center"}},"Elias-Fano编码的Go实现。",-1),u_={style:{"text-align":"center"}},p_={href:"https://github.com/hailocab/go-geoindex",target:"_blank",rel:"noopener noreferrer"},y_=t("td",{style:{"text-align":"center"}},"内存中的地理索引。",-1),x_={style:{"text-align":"center"}},b_={href:"https://github.com/OrlovEvgeny/go-mcache",target:"_blank",rel:"noopener noreferrer"},f_=t("td",{style:{"text-align":"center"}},"快速内存键：值存储/缓存库。指针缓存。",-1),m_={style:{"text-align":"center"}},k_={href:"https://github.com/aurelien-rainone/go-rquad",target:"_blank",rel:"noopener noreferrer"},G_=t("td",{style:{"text-align":"center"}},"具有有效点定位和邻居发现功能的区域四叉树。",-1),E_={style:{"text-align":"center"}},w_={href:"https://github.com/eko/gocache",target:"_blank",rel:"noopener noreferrer"},T_=t("td",{style:{"text-align":"center"}},"具有多个存储（内存，memcache，redis等），可链接，可加载，指标缓存等的完整Go缓存库。",-1),P_={style:{"text-align":"center"}},A_={href:"https://github.com/enriquebris/goconcurrentqueue",target:"_blank",rel:"noopener noreferrer"},S_=t("td",{style:{"text-align":"center"}},"并发FIFO队列。",-1),v_={style:{"text-align":"center"}},C_={href:"https://github.com/emirpasic/gods",target:"_blank",rel:"noopener noreferrer"},M_=t("td",{style:{"text-align":"center"}},"数据结构。容器，集合，列表，堆栈，地图，BidiMap，树，HashSet等。",-1),B_={style:{"text-align":"center"}},I_={href:"https://github.com/xxjwxc/gofal",target:"_blank",rel:"noopener noreferrer"},j_=t("td",{style:{"text-align":"center"}},"Go的小数api。",-1),q_={style:{"text-align":"center"}},F_={href:"https://github.com/deckarep/golang-set",target:"_blank",rel:"noopener noreferrer"},L_=t("td",{style:{"text-align":"center"}},"Go的线程安全和非线程安全高性能集。",-1),z_={style:{"text-align":"center"}},D_={href:"https://github.com/zoumo/goset",target:"_blank",rel:"noopener noreferrer"},N_=t("td",{style:{"text-align":"center"}},"Go的有用的Set集合实现。",-1),O_={style:{"text-align":"center"}},R_={href:"https://github.com/ryszard/goskiplist",target:"_blank",rel:"noopener noreferrer"},H_=t("td",{style:{"text-align":"center"}},"Go中的跳过列表实现。",-1),U_={style:{"text-align":"center"}},J_={href:"https://github.com/kniren/gota",target:"_blank",rel:"noopener noreferrer"},Q_=t("td",{style:{"text-align":"center"}},"Go的数据框，序列和数据整理方法的实现。",-1),W_={style:{"text-align":"center"}},V_={href:"https://github.com/emvi/hide",target:"_blank",rel:"noopener noreferrer"},X_=t("td",{style:{"text-align":"center"}},"ID类型，将其编组进/出哈希以防止将ID发送给客户端。",-1),K_={style:{"text-align":"center"}},Z_={href:"https://github.com/google/hilbert",target:"_blank",rel:"noopener noreferrer"},Y_=t("td",{style:{"text-align":"center"}},"Go程序包，用于在空间填充曲线（例如Hilbert和Peano曲线）之间映射值。",-1),$_={style:{"text-align":"center"}},th={href:"https://github.com/axiomhq/hyperloglog",target:"_blank",rel:"noopener noreferrer"},eh=t("td",{style:{"text-align":"center"}},"HyperLogLog实施，具有稀疏，LogLog-Beta偏差校正和TailCut空间减少功能。",-1),nh={style:{"text-align":"center"}},rh={href:"https://github.com/disksing/iter",target:"_blank",rel:"noopener noreferrer"},oh=t("td",{style:{"text-align":"center"}},"C ++ STL迭代器和算法的实现。",-1),lh={style:{"text-align":"center"}},sh={href:"https://github.com/agext/levenshtein",target:"_blank",rel:"noopener noreferrer"},ih=t("td",{style:{"text-align":"center"}},"Levenshtein距离和相似性度量标准，具有可自定义的编辑费用和通用前缀的类似于Winkler的奖金。",-1),ah={style:{"text-align":"center"}},ch={href:"https://github.com/agnivade/levenshtein",target:"_blank",rel:"noopener noreferrer"},_h=t("td",{style:{"text-align":"center"}},"在Go中计算levenshtein距离的实现。",-1),hh={style:{"text-align":"center"}},dh={href:"https://github.com/smartystreets/mafsa",target:"_blank",rel:"noopener noreferrer"},gh=t("td",{style:{"text-align":"center"}},"具有最小完美散列的MA-FSA实现。",-1),uh={style:{"text-align":"center"}},ph={href:"https://github.com/cbergoon/merkletree",target:"_blank",rel:"noopener noreferrer"},yh=t("td",{style:{"text-align":"center"}},"merkle树的实现，可对数据结构的内容进行有效且安全的验证。",-1),xh={style:{"text-align":"center"}},bh={href:"https://github.com/BlackRabbitt/mspm",target:"_blank",rel:"noopener noreferrer"},fh=t("td",{style:{"text-align":"center"}},"用于信息检索的多字符串模式匹配算法。",-1),mh={style:{"text-align":"center"}},kh={href:"https://github.com/emvi/null",target:"_blank",rel:"noopener noreferrer"},Gh=t("td",{style:{"text-align":"center"}},"可空转到类型，可以被编组/解组到/从JSON。",-1),Eh={style:{"text-align":"center"}},wh={href:"https://github.com/MonaxGT/parsefields",target:"_blank",rel:"noopener noreferrer"},Th=t("td",{style:{"text-align":"center"}},"用于解析类似JSON的日志的工具，以收集唯一的字段和事件。",-1),Ph={style:{"text-align":"center"}},Ah={href:"https://github.com/hyfather/pipeline",target:"_blank",rel:"noopener noreferrer"},Sh=t("td",{style:{"text-align":"center"}},"具有扇入和扇出的管线的实现。",-1),vh={style:{"text-align":"center"}},Ch={href:"https://github.com/viant/ptrie",target:"_blank",rel:"noopener noreferrer"},Mh=t("td",{style:{"text-align":"center"}},"前缀树的实现。",-1),Bh={style:{"text-align":"center"}},Ih={href:"https://github.com/rocketlaunchr/remember-go",target:"_blank",rel:"noopener noreferrer"},jh=t("td",{style:{"text-align":"center"}},"缓存慢速数据库查询的通用接口（由redis，memcached，ristretto或内存支持）。",-1),qh={style:{"text-align":"center"}},Fh={href:"https://github.com/TheTannerRyan/ring",target:"_blank",rel:"noopener noreferrer"},Lh=t("td",{style:{"text-align":"center"}},"围棋实现了高性能，线程安全的布隆过滤器。",-1),zh={style:{"text-align":"center"}},Dh={href:"https://github.com/RoaringBitmap/roaring",target:"_blank",rel:"noopener noreferrer"},Nh=t("td",{style:{"text-align":"center"}},"实施压缩位集的软件包。",-1),Oh={style:{"text-align":"center"}},Rh={href:"https://github.com/StudioSol/set",target:"_blank",rel:"noopener noreferrer"},Hh=t("td",{style:{"text-align":"center"}},"使用LinkedHashMap的围棋设置简单的数据结构实现。",-1),Uh={style:{"text-align":"center"}},Jh={href:"https://github.com/MauriceGit/skiplist",target:"_blank",rel:"noopener noreferrer"},Qh=t("td",{style:{"text-align":"center"}},"非常快的Go Skiplist实施。",-1),Wh={style:{"text-align":"center"}},Vh={href:"https://github.com/gansidui/skiplist",target:"_blank",rel:"noopener noreferrer"},Xh=t("td",{style:{"text-align":"center"}},"Go中的跳过列表实现。",-1),Kh={style:{"text-align":"center"}},Zh={href:"https://github.com/zekroTJA/timedmap",target:"_blank",rel:"noopener noreferrer"},Yh=t("td",{style:{"text-align":"center"}},"具有过期的键/值对的地图。",-1),$h={style:{"text-align":"center"}},td={href:"https://github.com/perdata/treap",target:"_blank",rel:"noopener noreferrer"},ed=t("td",{style:{"text-align":"center"}},"使用树堆的持久快速排序的地图。",-1),nd={style:{"text-align":"center"}},rd={href:"https://github.com/derekparker/trie",target:"_blank",rel:"noopener noreferrer"},od=t("td",{style:{"text-align":"center"}},"Go中的Trie实现。",-1),ld={style:{"text-align":"center"}},sd={href:"https://github.com/diegobernardes/ttlcache",target:"_blank",rel:"noopener noreferrer"},id=t("td",{style:{"text-align":"center"}},"内存中的LRU字符串接口{}映射，其中包含golang的到期时间。",-1),ad={style:{"text-align":"center"}},cd={href:"https://github.com/gurukami/typ",target:"_blank",rel:"noopener noreferrer"},_d=t("td",{style:{"text-align":"center"}},"空类型，安全的原始类型转换和从复杂结构中获取值。",-1),hd={style:{"text-align":"center"}},dd={href:"https://github.com/willf/bloom",target:"_blank",rel:"noopener noreferrer"},gd=t("td",{style:{"text-align":"center"}},"Go包实现Bloom过滤器。",-1),ud=t("ul",null,[t("li",null,[e("分布式系统"),t("br"),t("a",{name:"分布式系统"}),e(),t("a",{name:"分布式系统"})])],-1),pd=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),yd={style:{"text-align":"center"}},xd={href:"https://github.com/svcavallar/celeriac.v1",target:"_blank",rel:"noopener noreferrer"},bd=t("td",{style:{"text-align":"center"}},"用于在Go中添加支持以交互和监视Celery工作者，任务和事件的库。",-1),fd={style:{"text-align":"center"}},md={href:"https://github.com/buraksezer/consistent",target:"_blank",rel:"noopener noreferrer"},kd=t("td",{style:{"text-align":"center"}},"具有受限负载的一致哈希",-1),Gd={style:{"text-align":"center"}},Ed={href:"https://github.com/anacrolix/dht",target:"_blank",rel:"noopener noreferrer"},wd=t("td",{style:{"text-align":"center"}},"BitTorrent Kademlia DHT实施。",-1),Td={style:{"text-align":"center"}},Pd={href:"https://github.com/digota/digota",target:"_blank",rel:"noopener noreferrer"},Ad=t("td",{style:{"text-align":"center"}},"grpc电子商务微服务。",-1),Sd={style:{"text-align":"center"}},vd={href:"https://github.com/dotchain/dot/",target:"_blank",rel:"noopener noreferrer"},Cd=t("td",{style:{"text-align":"center"}},"使用操作转换/ OT进行分布式同步。",-1),Md={style:{"text-align":"center"}},Bd={href:"https://github.com/edwingeng/doublejump",target:"_blank",rel:"noopener noreferrer"},Id=t("td",{style:{"text-align":"center"}},"改进后的Google的跳转一致性哈希。",-1),jd={style:{"text-align":"center"}},qd={href:"https://github.com/lni/dragonboat",target:"_blank",rel:"noopener noreferrer"},Fd=t("td",{style:{"text-align":"center"}},"Go中功能齐全的高性能多组Raft库。",-1),Ld={style:{"text-align":"center"}},zd={href:"https://github.com/dgruber/drmaa",target:"_blank",rel:"noopener noreferrer"},Dd=t("td",{style:{"text-align":"center"}},"基于DRMAA标准的集群调度程序的作业提交库。",-1),Nd={style:{"text-align":"center"}},Od={href:"https://cirello.io/dynamolock",target:"_blank",rel:"noopener noreferrer"},Rd=t("td",{style:{"text-align":"center"}},"DynamoDB支持的分布式锁定实现。",-1),Hd={style:{"text-align":"center"}},Ud={href:"https://github.com/tylfin/dynatomic",target:"_blank",rel:"noopener noreferrer"},Jd=t("td",{style:{"text-align":"center"}},"将DynamoDB用作原子计数器的库。",-1),Qd={style:{"text-align":"center"}},Wd={href:"https://github.com/emitter-io/emitter",target:"_blank",rel:"noopener noreferrer"},Vd=t("td",{style:{"text-align":"center"}},"使用MQTT，Websockets和love构建的高性能，分布式，安全和低延迟的发布-订阅平台。",-1),Xd={style:{"text-align":"center"}},Kd={href:"https://github.com/vectaport/flowgraph",target:"_blank",rel:"noopener noreferrer"},Zd=t("td",{style:{"text-align":"center"}},"基于流的编程包。",-1),Yd={style:{"text-align":"center"}},$d={href:"https://github.com/chrislusf/gleam",target:"_blank",rel:"noopener noreferrer"},tg=t("td",{style:{"text-align":"center"}},"用纯围棋和Luajit快速和可扩展的分布式的map / reduce系统，具有Luajit的高性能结合Go的高并发，单独运行或分发。",-1),eg={style:{"text-align":"center"}},ng={href:"https://github.com/chrislusf/glow",target:"_blank",rel:"noopener noreferrer"},rg=t("td",{style:{"text-align":"center"}},"易于使用的可扩展的分布式大数据处理，Map-Reduce，DAG执行，全部在纯Go中进行。",-1),og={style:{"text-align":"center"}},lg={href:"https://github.com/InVisionApp/go-health",target:"_blank",rel:"noopener noreferrer"},sg=t("td",{style:{"text-align":"center"}},"health-用于在服务中启用异步依赖项运行状况检查的库。",-1),ig={style:{"text-align":"center"}},ag={href:"https://github.com/dgryski/go-jump",target:"_blank",rel:"noopener noreferrer"},cg=t("td",{style:{"text-align":"center"}},"Google的“ Jump”一致性哈希函数的端口。",-1),_g={style:{"text-align":"center"}},hg={href:"https://github.com/go-kit/kit",target:"_blank",rel:"noopener noreferrer"},dg=t("td",{style:{"text-align":"center"}},"支持服务发现，负载平衡，可插拔传输，请求跟踪等的微服务工具包",-1),gg={style:{"text-align":"center"}},ug={href:"https://github.com/AppsFlyer/go-sundheit",target:"_blank",rel:"noopener noreferrer"},pg=t("td",{style:{"text-align":"center"}},"建立用于支持为golang服务定义异步服务运行状况检查的库。",-1),yg={style:{"text-align":"center"}},xg={href:"https://github.com/valyala/gorpc",target:"_blank",rel:"noopener noreferrer"},bg=t("td",{style:{"text-align":"center"}},"简单，快速和可扩展的RPC库，可实现高负载。",-1),fg={style:{"text-align":"center"}},mg={href:"https://github.com/grpc/grpc-go",target:"_blank",rel:"noopener noreferrer"},kg=t("td",{style:{"text-align":"center"}},"gRPC的Go语言实现。基于HTTP / 2的RPC。",-1),Gg={style:{"text-align":"center"}},Eg={href:"https://github.com/hprose/hprose-golang",target:"_blank",rel:"noopener noreferrer"},wg=t("td",{style:{"text-align":"center"}},"十分新颖的RPC库，现在支持25种以上的语言。",-1),Tg={style:{"text-align":"center"}},Pg={href:"https://github.com/osamingo/jsonrpc",target:"_blank",rel:"noopener noreferrer"},Ag=t("td",{style:{"text-align":"center"}},"jsonrpc软件包可帮助实现JSON-RPC 2.0。",-1),Sg={style:{"text-align":"center"}},vg={href:"https://github.com/ybbus/jsonrpc",target:"_blank",rel:"noopener noreferrer"},Cg=t("td",{style:{"text-align":"center"}},"JSON-RPC 2.0 HTTP客户端实现。",-1),Mg={style:{"text-align":"center"}},Bg={href:"https://github.com/devopsfaith/krakend",target:"_blank",rel:"noopener noreferrer"},Ig=t("td",{style:{"text-align":"center"}},"具有中间件的超高性能API网关框架。",-1),jg={style:{"text-align":"center"}},qg={href:"https://github.com/liftbridge-io/liftbridge",target:"_blank",rel:"noopener noreferrer"},Fg=t("td",{style:{"text-align":"center"}},"NATS的轻量级，容错消息流。",-1),Lg={style:{"text-align":"center"}},zg={href:"https://github.com/micro/micro",target:"_blank",rel:"noopener noreferrer"},Dg=t("td",{style:{"text-align":"center"}},"可插拔的microService工具箱和分布式系统平台。",-1),Ng={style:{"text-align":"center"}},Og={href:"https://github.com/nats-io/gnatsd",target:"_blank",rel:"noopener noreferrer"},Rg=t("td",{style:{"text-align":"center"}},"用于微服务，IoT和云本机系统的轻量级高性能消息传递系统。",-1),Hg={style:{"text-align":"center"}},Ug={href:"https://github.com/italolelis/outboxer",target:"_blank",rel:"noopener noreferrer"},Jg=t("td",{style:{"text-align":"center"}},"Outboxer是一个实现库模式的go库。",-1),Qg={style:{"text-align":"center"}},Wg={href:"https://cirello.io/pglock",target:"_blank",rel:"noopener noreferrer"},Vg=t("td",{style:{"text-align":"center"}},"PostgreSQL支持的分布式锁定实现。",-1),Xg={style:{"text-align":"center"}},Kg={href:"https://github.com/hashicorp/raft",target:"_blank",rel:"noopener noreferrer"},Zg=t("td",{style:{"text-align":"center"}},"HashiCorp的Raft共识协议的Golang实现。",-1),Yg={style:{"text-align":"center"}},$g={href:"https://github.com/coreos/etcd/tree/master/raft",target:"_blank",rel:"noopener noreferrer"},t1=t("td",{style:{"text-align":"center"}},"ETCD中实现的Raft协议。",-1),e1={style:{"text-align":"center"}},n1={href:"https://github.com/cenkalti/rain",target:"_blank",rel:"noopener noreferrer"},r1=t("td",{style:{"text-align":"center"}},"BitTorrent客户端和库。",-1),o1={style:{"text-align":"center"}},l1={href:"https://github.com/bsm/redislock",target:"_blank",rel:"noopener noreferrer"},s1=t("td",{style:{"text-align":"center"}},"使用Redis的简化分布式锁定实现。",-1),i1={style:{"text-align":"center"}},a1={href:"https://resgate.io/",target:"_blank",rel:"noopener noreferrer"},c1=t("td",{style:{"text-align":"center"}},"用于构建REST，实时和RPC API的实时API网关，其中所有客户端都可以无缝同步。",-1),_1={style:{"text-align":"center"}},h1={href:"https://github.com/uber/ringpop-go",target:"_blank",rel:"noopener noreferrer"},d1=t("td",{style:{"text-align":"center"}},"Go应用程序的可扩展，容错应用程序层分片。",-1),g1={style:{"text-align":"center"}},u1={href:"https://github.com/smallnest/rpcx",target:"_blank",rel:"noopener noreferrer"},p1=t("td",{style:{"text-align":"center"}},"分布式可插拔RPC服务框架，例如阿里巴巴Dubbo。",-1),y1={style:{"text-align":"center"}},x1={href:"https://github.com/ursiform/sleuth",target:"_blank",rel:"noopener noreferrer"},b1={style:{"text-align":"center"}},f1={href:"https://github.com/zeromq/libzmq",target:"_blank",rel:"noopener noreferrer"},m1={style:{"text-align":"center"}},k1={href:"https://github.com/tendermint/tendermint",target:"_blank",rel:"noopener noreferrer"},G1=t("td",{style:{"text-align":"center"}},"高性能中间件，用于使用Tendermint共识和区块链协议将以任何编程语言编写的状态机转换为拜占庭容错复制状态机。",-1),E1={style:{"text-align":"center"}},w1={href:"https://github.com/anacrolix/torrent",target:"_blank",rel:"noopener noreferrer"},T1=t("td",{style:{"text-align":"center"}},"BitTorrent客户端软件包。",-1),P1=t("ul",null,[t("li",null,[e("电子邮件"),t("br"),t("a",{name:"电子邮件"}),e(),t("a",{name:"电子邮件"})])],-1),A1=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),S1={style:{"text-align":"center"}},v1={href:"https://blitiri.com.ar/p/chasquid",target:"_blank",rel:"noopener noreferrer"},C1=t("td",{style:{"text-align":"center"}},"用Go编写的SMTP服务器。",-1),M1={style:{"text-align":"center"}},B1={href:"https://github.com/aymerick/douceur",target:"_blank",rel:"noopener noreferrer"},I1=t("td",{style:{"text-align":"center"}},"CSS内衬为您的HTML电子邮件。",-1),j1={style:{"text-align":"center"}},q1={href:"https://github.com/jordan-wright/email",target:"_blank",rel:"noopener noreferrer"},F1=t("td",{style:{"text-align":"center"}},"用于Go的强大而灵活的电子邮件库。",-1),L1={style:{"text-align":"center"}},z1={href:"https://github.com/toorop/go-dkim",target:"_blank",rel:"noopener noreferrer"},D1=t("td",{style:{"text-align":"center"}},"DKIM库，用于签名和验证电子邮件。",-1),N1={style:{"text-align":"center"}},O1={href:"https://github.com/emersion/go-imap",target:"_blank",rel:"noopener noreferrer"},R1=t("td",{style:{"text-align":"center"}},"用于客户端和服务器的IMAP库。",-1),H1={style:{"text-align":"center"}},U1={href:"https://github.com/emersion/go-message",target:"_blank",rel:"noopener noreferrer"},J1=t("td",{style:{"text-align":"center"}},"Internet消息格式和邮件消息的流库。",-1),Q1={style:{"text-align":"center"}},W1={href:"https://github.com/vanng822/go-premailer",target:"_blank",rel:"noopener noreferrer"},V1=t("td",{style:{"text-align":"center"}},"Go中HTML邮件的内联样式。",-1),X1={style:{"text-align":"center"}},K1={href:"https://github.com/xhit/go-simple-mail",target:"_blank",rel:"noopener noreferrer"},Z1=t("td",{style:{"text-align":"center"}},"使用SMTP保持活动状态和两个超时发送电子邮件的非常简单的程序包：连接和发送。",-1),Y1={style:{"text-align":"center"}},$1={href:"https://github.com/hectane/hectane",target:"_blank",rel:"noopener noreferrer"},tu=t("td",{style:{"text-align":"center"}},"提供HTTP API的轻型SMTP客户端。",-1),eu={style:{"text-align":"center"}},nu={href:"https://github.com/matcornic/hermes",target:"_blank",rel:"noopener noreferrer"},ru=t("td",{style:{"text-align":"center"}},"Golang软件包，可生成干净的响应式HTML电子邮件。",-1),ou={style:{"text-align":"center"}},lu={href:"https://github.com/mailchain/mailchain",target:"_blank",rel:"noopener noreferrer"},su=t("td",{style:{"text-align":"center"}},"将加密的电子邮件发送到用Go编写的区块链地址。",-1),iu={style:{"text-align":"center"}},au={href:"https://github.com/mailgun/mailgun-go",target:"_blank",rel:"noopener noreferrer"},cu=t("td",{style:{"text-align":"center"}},"Go库，用于使用Mailgun API发送邮件。",-1),_u={style:{"text-align":"center"}},hu={href:"https://github.com/mailhog/MailHog",target:"_blank",rel:"noopener noreferrer"},du=t("td",{style:{"text-align":"center"}},"通过Web和API界面进行电子邮件和SMTP测试。",-1),gu={style:{"text-align":"center"}},uu={href:"https://github.com/sendgrid/sendgrid-go",target:"_blank",rel:"noopener noreferrer"},pu=t("td",{style:{"text-align":"center"}},"SendGrid的Go库，用于发送电子邮件。",-1),yu={style:{"text-align":"center"}},xu={href:"https://github.com/mailhog/smtp",target:"_blank",rel:"noopener noreferrer"},bu=t("td",{style:{"text-align":"center"}},"SMTP服务器协议状态机。",-1),fu=t("ul",null,[t("li",null,[e("嵌入式脚本语言"),t("br"),t("a",{name:"嵌入式脚本语言"}),e(),t("a",{name:"嵌入式脚本语言"})])],-1),mu=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),ku={style:{"text-align":"center"}},Gu={href:"https://github.com/mattn/anko",target:"_blank",rel:"noopener noreferrer"},Eu=t("td",{style:{"text-align":"center"}},"用Go语言编写的可编写脚本的解释器。",-1),wu={style:{"text-align":"center"}},Tu={href:"https://github.com/alexeyco/binder",target:"_blank",rel:"noopener noreferrer"},Pu={style:{"text-align":"center"}},Au={href:"https://github.com/yuin/gopher-lua",target:"_blank",rel:"noopener noreferrer"},Su={style:{"text-align":"center"}},vu={href:"https://github.com/google/cel-go",target:"_blank",rel:"noopener noreferrer"},Cu=t("td",{style:{"text-align":"center"}},"具有渐进式输入功能的快速，便携式，非图灵完整表达评估。",-1),Mu={style:{"text-align":"center"}},Bu={href:"https://github.com/antonmedv/expr",target:"_blank",rel:"noopener noreferrer"},Iu=t("td",{style:{"text-align":"center"}},"可以评估表达式的引擎。",-1),ju={style:{"text-align":"center"}},qu={href:"https://github.com/gentee/gentee",target:"_blank",rel:"noopener noreferrer"},Fu=t("td",{style:{"text-align":"center"}},"可嵌入的脚本编程语言。",-1),Lu={style:{"text-align":"center"}},zu={href:"https://github.com/jcla1/gisp",target:"_blank",rel:"noopener noreferrer"},Du=t("td",{style:{"text-align":"center"}},"Go中的简单LISP。",-1),Nu={style:{"text-align":"center"}},Ou={href:"https://github.com/olebedev/go-duktape",target:"_blank",rel:"noopener noreferrer"},Ru=t("td",{style:{"text-align":"center"}},"Go的Duktape JavaScript引擎绑定。",-1),Hu={style:{"text-align":"center"}},Uu={href:"https://github.com/Shopify/go-lua",target:"_blank",rel:"noopener noreferrer"},Ju=t("td",{style:{"text-align":"center"}},"Lua 5.2 VM到纯Go的端口。",-1),Qu={style:{"text-align":"center"}},Wu={href:"https://github.com/deuill/go-php",target:"_blank",rel:"noopener noreferrer"},Vu=t("td",{style:{"text-align":"center"}},"Go的PHP绑定。",-1),Xu={style:{"text-align":"center"}},Ku={href:"https://github.com/sbinet/go-python",target:"_blank",rel:"noopener noreferrer"},Zu=t("td",{style:{"text-align":"center"}},"与CPython C-API的幼稚go绑定。",-1),Yu={style:{"text-align":"center"}},$u={href:"https://github.com/aarzilli/golua",target:"_blank",rel:"noopener noreferrer"},tp=t("td",{style:{"text-align":"center"}},"Lua C API的绑定。",-1),ep={style:{"text-align":"center"}},np={href:"https://github.com/yuin/gopher-lua",target:"_blank",rel:"noopener noreferrer"},rp=t("td",{style:{"text-align":"center"}},"用Go编写的Lua 5.1 VM和编译器。",-1),op={style:{"text-align":"center"}},lp={href:"https://github.com/PaesslerAG/gval",target:"_blank",rel:"noopener noreferrer"},sp=t("td",{style:{"text-align":"center"}},"用Go编写的高度可定制的表达语言。",-1),ip={style:{"text-align":"center"}},ap={href:"https://github.com/db47h/ngaro",target:"_blank",rel:"noopener noreferrer"},cp=t("td",{style:{"text-align":"center"}},"可嵌入的Ngaro VM实现，支持在Retro中编写脚本。",-1),_p={style:{"text-align":"center"}},hp={href:"https://github.com/robertkrimen/otto",target:"_blank",rel:"noopener noreferrer"},dp=t("td",{style:{"text-align":"center"}},"用Go编写的JavaScript解释器。",-1),gp={style:{"text-align":"center"}},up={href:"https://github.com/ian-kent/purl",target:"_blank",rel:"noopener noreferrer"},pp=t("td",{style:{"text-align":"center"}},"Go中嵌入的Perl 5.18.2。",-1),yp={style:{"text-align":"center"}},xp={href:"https://github.com/d5/tengo",target:"_blank",rel:"noopener noreferrer"},bp=t("td",{style:{"text-align":"center"}},"用于Go的字节码编译脚本语言。",-1),fp=t("ul",null,[t("li",null,[e("错误处理"),t("br"),t("a",{name:"错误处理"}),e(),t("a",{name:"错误处理"})])],-1),mp=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),kp={style:{"text-align":"center"}},Gp={href:"https://github.com/emperror/emperror",target:"_blank",rel:"noopener noreferrer"},Ep=t("td",{style:{"text-align":"center"}},"Go库和应用程序的错误处理工具和最佳实践。",-1),wp={style:{"text-align":"center"}},Tp={href:"https://github.com/snwfdhmp/errlog",target:"_blank",rel:"noopener noreferrer"},Pp=t("td",{style:{"text-align":"center"}},"可破解的软件包，用于确定错误的负责任的源代码（以及其他一些快速调试功能）。可插入任何现成的记录器。",-1),Ap={style:{"text-align":"center"}},Sp={href:"https://github.com/emperror/errors",target:"_blank",rel:"noopener noreferrer"},vp={style:{"text-align":"center"}},Cp={href:"http://xn--github-hp7iqmm6yfkd5wfcw3blplh5byxx19dut5f3tyesnsb.com/pkg/errors%E3%80%82%E6%8F%90%E4%BE%9B%E5%90%84%E7%A7%8D%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8E%9F%E8%AF%AD%E3%80%82",target:"_blank",rel:"noopener noreferrer"},Mp={style:{"text-align":"center"}},Bp={href:"https://github.com/pkg/errors",target:"_blank",rel:"noopener noreferrer"},Ip=t("td",{style:{"text-align":"center"}},"提供简单错误处理原语的软件包。",-1),jp={style:{"text-align":"center"}},qp={href:"https://github.com/neuronlabs/errors",target:"_blank",rel:"noopener noreferrer"},Fp=t("td",{style:{"text-align":"center"}},"简单golang错误处理与分类元。",-1),Lp={style:{"text-align":"center"}},zp={href:"https://github.com/joomcode/errorx",target:"_blank",rel:"noopener noreferrer"},Dp=t("td",{style:{"text-align":"center"}},"具有堆栈跟踪，错误组成等的功能丰富的错误包。",-1),Np={style:{"text-align":"center"}},Op={href:"https://github.com/SonicRoshan/falcon",target:"_blank",rel:"noopener noreferrer"},Rp=t("td",{style:{"text-align":"center"}},"一个简单但功能强大的错误处理软件包。",-1),Hp={style:{"text-align":"center"}},Up={href:"https://github.com/hashicorp/go-multierror",target:"_blank",rel:"noopener noreferrer"},Jp=t("td",{style:{"text-align":"center"}},"Go（golang）软件包，用于将错误列表表示为单个错误。",-1),Qp={style:{"text-align":"center"}},Wp={href:"https://github.com/ztrue/tracerr",target:"_blank",rel:"noopener noreferrer"},Vp=t("td",{style:{"text-align":"center"}},"带有堆栈跟踪和源代码片段的Golang错误。",-1),Xp={style:{"text-align":"center"}},Kp={href:"https://github.com/txgruppi/werr",target:"_blank",rel:"noopener noreferrer"},Zp=t("td",{style:{"text-align":"center"}},"错误包装程序为Go中的错误类型创建了一个包装程序，该包装程序捕获了调用它的文件，行和堆栈。",-1),Yp=t("ul",null,[t("li",null,[e("文件"),t("br"),t("a",{name:"文件"}),e(),t("a",{name:"文件"})])],-1),$p=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),ty={style:{"text-align":"center"}},ey={href:"https://github.com/spf13/afero",target:"_blank",rel:"noopener noreferrer"},ny=t("td",{style:{"text-align":"center"}},"Go的文件系统抽象系统。",-1),ry={style:{"text-align":"center"}},oy={href:"https://github.com/viant/afs",target:"_blank",rel:"noopener noreferrer"},ly=t("td",{style:{"text-align":"center"}},"Go的抽象文件存储（mem，scp，zip，tar，云：s3，gs）。",-1),sy={style:{"text-align":"center"}},iy={href:"https://github.com/bigfile/bigfile",target:"_blank",rel:"noopener noreferrer"},ay=t("td",{style:{"text-align":"center"}},"文件传输系统，支持使用http api，rpc调用和ftp客户端管理文件。",-1),cy={style:{"text-align":"center"}},_y={href:"https://github.com/codingsince1985/checksum",target:"_blank",rel:"noopener noreferrer"},hy=t("td",{style:{"text-align":"center"}},"计算大型文件的消息摘要，例如MD5和SHA256。",-1),dy={style:{"text-align":"center"}},gy={href:"https://github.com/homedepot/flop",target:"_blank",rel:"noopener noreferrer"},uy={style:{"text-align":"center"}},py={href:"https://www.gnu.org/software/coreutils/manual/html_node/cp-invocation.html",target:"_blank",rel:"noopener noreferrer"},yy={style:{"text-align":"center"}},xy={href:"https://github.com/artonge/go-csv-tag",target:"_blank",rel:"noopener noreferrer"},by=t("td",{style:{"text-align":"center"}},"tag-使用标签加载csv文件。",-1),fy={style:{"text-align":"center"}},my={href:"https://github.com/hugocarreira/go-decent-copy",target:"_blank",rel:"noopener noreferrer"},ky=t("td",{style:{"text-align":"center"}},"复制human文件。",-1),Gy={style:{"text-align":"center"}},Ey={href:"https://github.com/barasher/go-exiftool",target:"_blank",rel:"noopener noreferrer"},wy=t("td",{style:{"text-align":"center"}},"ExifTool的Go绑定，这是众所周知的库，用于从文件（图片，PDF，office，...）提取尽可能多的元数据（EXIF，IPTC等）。",-1),Ty={style:{"text-align":"center"}},Py={href:"https://github.com/artonge/go-gtfs",target:"_blank",rel:"noopener noreferrer"},Ay=t("td",{style:{"text-align":"center"}},"在go中加载gtfs文件。",-1),Sy={style:{"text-align":"center"}},vy={href:"https://github.com/rjeczalik/notify",target:"_blank",rel:"noopener noreferrer"},Cy=t("td",{style:{"text-align":"center"}},"具有简单API的文件系统事件通知库，类似于os / signal。",-1),My={style:{"text-align":"center"}},By={href:"https://github.com/qmuntal/opc",target:"_blank",rel:"noopener noreferrer"},Iy=t("td",{style:{"text-align":"center"}},"为Go加载Open Packaging Conventions（OPC）文件。",-1),jy={style:{"text-align":"center"}},qy={href:"https://github.com/parsyl/parquet",target:"_blank",rel:"noopener noreferrer"},Fy={style:{"text-align":"center"}},Ly={href:"https://parquet.apache.org/",target:"_blank",rel:"noopener noreferrer"},zy={style:{"text-align":"center"}},Dy={href:"https://github.com/hhrutter/pdfcpu",target:"_blank",rel:"noopener noreferrer"},Ny=t("td",{style:{"text-align":"center"}},"PDF 处理器。",-1),Oy={style:{"text-align":"center"}},Ry={href:"https://github.com/dixonwille/skywalker",target:"_blank",rel:"noopener noreferrer"},Hy=t("td",{style:{"text-align":"center"}},"一种软件包，允许一个人轻松地同时通过文件系统。",-1),Uy={style:{"text-align":"center"}},Jy={href:"https://gitlab.com/russoj88/stl",target:"_blank",rel:"noopener noreferrer"},Qy=t("td",{style:{"text-align":"center"}},"读取和写入STL（立体光刻）文件的模块。并发读取算法。",-1),Wy={style:{"text-align":"center"}},Vy={href:"https://github.com/posener/tarfs",target:"_blank",rel:"noopener noreferrer"},Xy={style:{"text-align":"center"}},Ky={href:"https://godoc.org/github.com/kr/fs#FileSystem",target:"_blank",rel:"noopener noreferrer"},Zy=t("code",null,"FileSystem",-1),Yy={style:{"text-align":"center"}},$y={href:"https://github.com/C2FO/vfs",target:"_blank",rel:"noopener noreferrer"},tx=t("td",{style:{"text-align":"center"}},"跨多种文件系统类型（例如os，S3和GCS）的Go的一组可插拔，可扩展且自以为是的文件系统功能。",-1),ex=t("ul",null,[t("li",null,[e("金融"),t("br"),t("a",{name:"金融"}),e(),t("a",{name:"金融"})])],-1),nx=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),rx={style:{"text-align":"center"}},ox={href:"https://github.com/leekchan/accounting",target:"_blank",rel:"noopener noreferrer"},lx=t("td",{style:{"text-align":"center"}},"golang的货币和货币格式。",-1),sx={style:{"text-align":"center"}},ix={href:"https://github.com/bnkamalesh/currency",target:"_blank",rel:"noopener noreferrer"},ax=t("td",{style:{"text-align":"center"}},"高性能和准确的货币计算包。",-1),cx={style:{"text-align":"center"}},_x={href:"https://github.com/shopspring/decimal",target:"_blank",rel:"noopener noreferrer"},hx=t("td",{style:{"text-align":"center"}},"任意精度定点十进制数字。",-1),dx={style:{"text-align":"center"}},gx={href:"https://github.com/FlashBoys/go-finance",target:"_blank",rel:"noopener noreferrer"},ux=t("td",{style:{"text-align":"center"}},"Go中的综合金融市场数据。",-1),px={style:{"text-align":"center"}},yx={href:"https://github.com/alpeb/go-finance",target:"_blank",rel:"noopener noreferrer"},xx=t("td",{style:{"text-align":"center"}},"金融功能库，用于货币时间价值（年金），现金流量，利率转换，债券和折旧计算。",-1),bx={style:{"text-align":"center"}},fx={href:"https://github.com/pieterclaerhout/go-finance",target:"_blank",rel:"noopener noreferrer"},mx=t("td",{style:{"text-align":"center"}},"获取汇率，通过VIES检查增值税号和检查IBAN银行帐号的模块。",-1),kx={style:{"text-align":"center"}},Gx={href:"https://github.com/rhymond/go-money",target:"_blank",rel:"noopener noreferrer"},Ex=t("td",{style:{"text-align":"center"}},"Fowler的Money模式的实现。",-1),wx={style:{"text-align":"center"}},Tx={href:"https://github.com/aclindsa/ofxgo",target:"_blank",rel:"noopener noreferrer"},Px=t("td",{style:{"text-align":"center"}},"查询OFX服务器和/或解析响应（使用示例命令行客户端）。",-1),Ax={style:{"text-align":"center"}},Sx={href:"https://github.com/i25959341/orderbook",target:"_blank",rel:"noopener noreferrer"},vx=t("td",{style:{"text-align":"center"}},"匹配引擎的限价订单在Golang。",-1),Cx={style:{"text-align":"center"}},Mx={href:"https://github.com/sdcoffey/techan",target:"_blank",rel:"noopener noreferrer"},Bx=t("td",{style:{"text-align":"center"}},"具有高级市场分析和交易策略的技术分析库。",-1),Ix={style:{"text-align":"center"}},jx={href:"https://github.com/claygod/transaction",target:"_blank",rel:"noopener noreferrer"},qx=t("td",{style:{"text-align":"center"}},"以多线程模式运行的嵌入式帐户嵌入式事务数据库。",-1),Fx={style:{"text-align":"center"}},Lx={href:"https://github.com/dannyvankooten/vat",target:"_blank",rel:"noopener noreferrer"},zx=t("td",{style:{"text-align":"center"}},"增值税号验证和欧盟增值税率。",-1),Dx=t("ul",null,[t("li",null,[e("游戏开发"),t("br"),t("a",{name:"游戏开发"}),e(),t("a",{name:"游戏开发"})])],-1),Nx=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Ox={style:{"text-align":"center"}},Rx={href:"https://github.com/azul3d/engine",target:"_blank",rel:"noopener noreferrer"},Hx=t("td",{style:{"text-align":"center"}},"用Go语言编写的3D游戏引擎。",-1),Ux={style:{"text-align":"center"}},Jx={href:"https://github.com/hajimehoshi/ebiten",target:"_blank",rel:"noopener noreferrer"},Qx=t("td",{style:{"text-align":"center"}},"Go中死的简单2D游戏库。",-1),Wx={style:{"text-align":"center"}},Vx={href:"https://github.com/EngoEngine/engo",target:"_blank",rel:"noopener noreferrer"},Xx=t("td",{style:{"text-align":"center"}},"Engo是用Go语言编写的开源2D游戏引擎。它遵循实体组件系统范式。",-1),Kx={style:{"text-align":"center"}},Zx={href:"https://github.com/g3n/engine",target:"_blank",rel:"noopener noreferrer"},Yx=t("td",{style:{"text-align":"center"}},"Go 3D游戏引擎。",-1),$x={style:{"text-align":"center"}},tb={href:"https://github.com/vova616/GarageEngine",target:"_blank",rel:"noopener noreferrer"},eb=t("td",{style:{"text-align":"center"}},"用Go语言编写的2D游戏引擎，可在OpenGL上使用。",-1),nb={style:{"text-align":"center"}},rb={href:"https://github.com/runningwild/glop",target:"_blank",rel:"noopener noreferrer"},ob=t("td",{style:{"text-align":"center"}},"Glop（权力游戏库）是一个相当简单的跨平台游戏库。",-1),lb={style:{"text-align":"center"}},sb={href:"https://github.com/beefsack/go-astar",target:"_blank",rel:"noopener noreferrer"},ib=t("td",{style:{"text-align":"center"}},"A 路径查找算法的Go实现。",-1),ab={style:{"text-align":"center"}},cb={href:"https://github.com/GlenKelley/go-collada",target:"_blank",rel:"noopener noreferrer"},_b=t("td",{style:{"text-align":"center"}},"Go包，用于Collada文件格式。",-1),hb={style:{"text-align":"center"}},db={href:"https://github.com/veandco/go-sdl2",target:"_blank",rel:"noopener noreferrer"},gb={style:{"text-align":"center"}},ub={href:"https://www.libsdl.org/",target:"_blank",rel:"noopener noreferrer"},pb={style:{"text-align":"center"}},yb={href:"https://github.com/ungerik/go3d",target:"_blank",rel:"noopener noreferrer"},xb=t("td",{style:{"text-align":"center"}},"用于Go的面向性能的2D/3D数学软件包。",-1),bb={style:{"text-align":"center"}},fb={href:"https://github.com/xtaci/gonet",target:"_blank",rel:"noopener noreferrer"},mb=t("td",{style:{"text-align":"center"}},"使用golang实现的游戏服务器框架。",-1),kb={style:{"text-align":"center"}},Gb={href:"https://github.com/xiaonanln/goworld",target:"_blank",rel:"noopener noreferrer"},Eb=t("td",{style:{"text-align":"center"}},"可扩展的游戏服务器引擎，具有空间实体框架和热插拔功能。",-1),wb={style:{"text-align":"center"}},Tb={href:"https://github.com/name5566/leaf",target:"_blank",rel:"noopener noreferrer"},Pb=t("td",{style:{"text-align":"center"}},"轻量级游戏服务器框架。",-1),Ab={style:{"text-align":"center"}},Sb={href:"https://github.com/lonng/nano",target:"_blank",rel:"noopener noreferrer"},vb=t("td",{style:{"text-align":"center"}},"重量轻，设备，高性能的基于golang游戏服务器架构。",-1),Cb={style:{"text-align":"center"}},Mb={href:"https://github.com/oakmound/oak",target:"_blank",rel:"noopener noreferrer"},Bb=t("td",{style:{"text-align":"center"}},"Pure Go游戏引擎。",-1),Ib={style:{"text-align":"center"}},jb={href:"https://github.com/topfreegames/pitaya",target:"_blank",rel:"noopener noreferrer"},qb=t("td",{style:{"text-align":"center"}},"可扩展的游戏服务器框架，具有群集支持和通过C SDK的iOS，Android，Unity等客户端库。",-1),Fb={style:{"text-align":"center"}},Lb={href:"https://github.com/faiface/pixel",target:"_blank",rel:"noopener noreferrer"},zb=t("td",{style:{"text-align":"center"}},"Go中的手工制作2D游戏库。",-1),Db={style:{"text-align":"center"}},Nb={href:"https://github.com/gen2brain/raylib-go",target:"_blank",rel:"noopener noreferrer"},Ob=t("td",{style:{"text-align":"center"}},"去绑定raylib，简单和易于使用的库，以了解电子游戏编程。",-1),Rb={style:{"text-align":"center"}},Hb={href:"https://github.com/JoelOtter/termloop",target:"_blank",rel:"noopener noreferrer"},Ub=t("td",{style:{"text-align":"center"}},"Go的基于终端的游戏引擎，建立在Termbox之上。",-1),Jb=t("ul",null,[t("li",null,[e("地理位置"),t("br"),t("a",{name:"地理位置"}),e(),t("a",{name:"地理位置"})])],-1),Qb=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Wb={style:{"text-align":"center"}},Vb={href:"https://github.com/melihmucuk/geocache",target:"_blank",rel:"noopener noreferrer"},Xb=t("td",{style:{"text-align":"center"}},"适用于基于地理位置的应用程序的内存中缓存。",-1),Kb={style:{"text-align":"center"}},Zb={href:"https://github.com/hishamkaram/geoserver",target:"_blank",rel:"noopener noreferrer"},Yb=t("td",{style:{"text-align":"center"}},"geoserver是Go软件包，用于通过GeoServer REST API操纵GeoServer实例。",-1),$b={style:{"text-align":"center"}},tf={href:"https://github.com/hishamkaram/gismanager",target:"_blank",rel:"noopener noreferrer"},ef=t("td",{style:{"text-align":"center"}},"将 GIS数据（矢量数据）发布到PostGIS和Geoserver。",-1),nf={style:{"text-align":"center"}},rf={href:"https://github.com/paulmach/osm",target:"_blank",rel:"noopener noreferrer"},of=t("td",{style:{"text-align":"center"}},"用于读取，编写和使用OpenStreetMap数据和API的库。",-1),lf={style:{"text-align":"center"}},sf={href:"https://github.com/maguro/pbf",target:"_blank",rel:"noopener noreferrer"},af=t("td",{style:{"text-align":"center"}},"OpenStreetMap PBF golang编码器/解码器。",-1),cf={style:{"text-align":"center"}},_f={href:"https://github.com/golang/geo",target:"_blank",rel:"noopener noreferrer"},hf=t("td",{style:{"text-align":"center"}},"Go中的S2几何库。",-1),df={style:{"text-align":"center"}},gf={href:"https://github.com/tidwall/tile38",target:"_blank",rel:"noopener noreferrer"},uf=t("td",{style:{"text-align":"center"}},"具有空间索引和实时地理围栏的地理位置数据库。",-1),pf={style:{"text-align":"center"}},yf={href:"https://github.com/wroge/wgs84",target:"_blank",rel:"noopener noreferrer"},xf=t("td",{style:{"text-align":"center"}},"库坐标转换和变换（ETRS89，OSGB36，NAD83，RGF93，网络墨卡托UTM）。",-1),bf=t("ul",null,[t("li",null,[e("编译器"),t("br"),t("a",{name:"编译器"}),e(),t("a",{name:"金编译器融"})])],-1),ff=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),mf={style:{"text-align":"center"}},kf={href:"https://github.com/Konstantin8105/c4go",target:"_blank",rel:"noopener noreferrer"},Gf=t("td",{style:{"text-align":"center"}},"将C代码转换为Go代码。",-1),Ef={style:{"text-align":"center"}},wf={href:"https://github.com/Konstantin8105/f4go",target:"_blank",rel:"noopener noreferrer"},Tf=t("td",{style:{"text-align":"center"}},"将FORTRAN 77代码转换为Go代码。",-1),Pf={style:{"text-align":"center"}},Af={href:"https://github.com/gopherjs/gopherjs",target:"_blank",rel:"noopener noreferrer"},Sf=t("td",{style:{"text-align":"center"}},"从Go到JavaScript的编译器。",-1),vf={style:{"text-align":"center"}},Cf={href:"https://github.com/go-llvm/llgo",target:"_blank",rel:"noopener noreferrer"},Mf=t("td",{style:{"text-align":"center"}},"Go的基于LLVM的编译器。",-1),Bf={style:{"text-align":"center"}},If={href:"https://github.com/tardisgo/tardisgo",target:"_blank",rel:"noopener noreferrer"},jf=t("td",{style:{"text-align":"center"}},"Golang转换为CPP / CSharp / Java / JavaScript转译器。",-1),qf=t("ul",null,[t("li",null,[e("Goroutines"),t("br"),t("a",{name:"Goroutines"}),e(),t("a",{name:"Goroutines"})])],-1),Ff=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Lf={style:{"text-align":"center"}},zf={href:"https://github.com/panjf2000/ants",target:"_blank",rel:"noopener noreferrer"},Df=t("td",{style:{"text-align":"center"}},"用于golang的高性能goroutine池。",-1),Nf={style:{"text-align":"center"}},Of={href:"https://github.com/borderstech/artifex",target:"_blank",rel:"noopener noreferrer"},Rf=t("td",{style:{"text-align":"center"}},"Golang使用基于工作程序的分派的简单内存中作业队列。",-1),Hf={style:{"text-align":"center"}},Uf={href:"https://github.com/studiosol/async",target:"_blank",rel:"noopener noreferrer"},Jf=t("td",{style:{"text-align":"center"}},"一种异步执行功能的安全方法，以防万一。",-1),Qf={style:{"text-align":"center"}},Wf={href:"https://github.com/kamilsk/breaker",target:"_blank",rel:"noopener noreferrer"},Vf=t("td",{style:{"text-align":"center"}},"使执行流程可中断的灵活机制。",-1),Xf={style:{"text-align":"center"}},Kf={href:"https://github.com/marusama/cyclicbarrier",target:"_blank",rel:"noopener noreferrer"},Zf=t("td",{style:{"text-align":"center"}},"用于golang的CyclicBarrier。",-1),Yf={style:{"text-align":"center"}},$f={href:"https://github.com/workanator/go-floc",target:"_blank",rel:"noopener noreferrer"},tm=t("td",{style:{"text-align":"center"}},"轻松编排goroutine。",-1),em={style:{"text-align":"center"}},nm={href:"https://github.com/kamildrazkiewicz/go-flow",target:"_blank",rel:"noopener noreferrer"},rm=t("td",{style:{"text-align":"center"}},"控制goroutine的执行顺序。",-1),om={style:{"text-align":"center"}},lm={href:"https://github.com/nikhilsaraf/go-tools",target:"_blank",rel:"noopener noreferrer"},sm=t("td",{style:{"text-align":"center"}},"使用带有简单API的轻量级库管理goroutine池。",-1),im={style:{"text-align":"center"}},am={href:"https://github.com/subchen/go-trylock",target:"_blank",rel:"noopener noreferrer"},cm=t("td",{style:{"text-align":"center"}},"支持Golang的读写锁的TryLock。",-1),_m={style:{"text-align":"center"}},hm={href:"https://github.com/pieterclaerhout/go-waitgroup",target:"_blank",rel:"noopener noreferrer"},dm=t("td",{style:{"text-align":"center"}},"sync.WaitGroup与错误处理和并发控制类似。",-1),gm={style:{"text-align":"center"}},um={href:"https://github.com/loveleshsharma/gohive",target:"_blank",rel:"noopener noreferrer"},pm=t("td",{style:{"text-align":"center"}},"Go的高性能和易于使用的Goroutine池。",-1),ym={style:{"text-align":"center"}},xm={href:"https://github.com/vardius/gollback",target:"_blank",rel:"noopener noreferrer"},bm=t("td",{style:{"text-align":"center"}},"异步简单函数实用程序，用于管理闭包和回调的执行。",-1),fm={style:{"text-align":"center"}},mm={href:"https://github.com/themester/GoSlaves",target:"_blank",rel:"noopener noreferrer"},km=t("td",{style:{"text-align":"center"}},"简单和异步Goroutine池库。",-1),Gm={style:{"text-align":"center"}},Em={href:"https://github.com/benmanns/goworker",target:"_blank",rel:"noopener noreferrer"},wm=t("td",{style:{"text-align":"center"}},"goworker是基于Go的后台工作者。",-1),Tm={style:{"text-align":"center"}},Pm={href:"https://github.com/xxjwxc/gowp",target:"_blank",rel:"noopener noreferrer"},Am=t("td",{style:{"text-align":"center"}},"gowp是并发限制goroutine池。",-1),Sm={style:{"text-align":"center"}},vm={href:"https://github.com/Sherifabdlnaby/gpool",target:"_blank",rel:"noopener noreferrer"},Cm=t("td",{style:{"text-align":"center"}},"管理可调整大小的上下文感知goroutine池以绑定并发。",-1),Mm={style:{"text-align":"center"}},Bm={href:"https://github.com/ivpusic/grpool",target:"_blank",rel:"noopener noreferrer"},Im=t("td",{style:{"text-align":"center"}},"轻巧的Goroutine池。",-1),jm={style:{"text-align":"center"}},qm={href:"https://github.com/AaronJan/Hunch",target:"_blank",rel:"noopener noreferrer"},Fm=t("td",{style:{"text-align":"center"}},"预感提供功能，如：All，First，Retry，Waterfall等等，这使得异步流控制更加直观。",-1),Lm={style:{"text-align":"center"}},zm={href:"https://cirello.io/oversight",target:"_blank",rel:"noopener noreferrer"},Dm=t("td",{style:{"text-align":"center"}},"监督是Erlang监督树的完整实现。",-1),Nm={style:{"text-align":"center"}},Om={href:"https://github.com/rafaeljesus/parallel-fn",target:"_blank",rel:"noopener noreferrer"},Rm=t("td",{style:{"text-align":"center"}},"并行运行功能。",-1),Hm={style:{"text-align":"center"}},Um={href:"https://github.com/go-playground/pool",target:"_blank",rel:"noopener noreferrer"},Jm=t("td",{style:{"text-align":"center"}},"有限的消费者goroutine池或无限制的goroutine池，以便更轻松地处理和取消goroutine。",-1),Qm={style:{"text-align":"center"}},Wm={href:"https://github.com/AnikHasibul/queue",target:"_blank",rel:"noopener noreferrer"},Vm=t("td",{style:{"text-align":"center"}},"为您提供sync.WaitGroup类似的队列组可访问性。帮助您节流和限制goroutine，等待所有goroutine结束等等。",-1),Xm={style:{"text-align":"center"}},Km={href:"https://github.com/x-mod/routine",target:"_blank",rel:"noopener noreferrer"},Zm=t("td",{style:{"text-align":"center"}},"具有上下文和支持的例程控制：Main，Go，Pool和一些有用的Executors。",-1),Ym={style:{"text-align":"center"}},$m={href:"https://github.com/kamilsk/semaphore",target:"_blank",rel:"noopener noreferrer"},tk=t("td",{style:{"text-align":"center"}},"基于通道和上下文的具有锁定/解锁操作超时的信号量模式实现。",-1),ek={style:{"text-align":"center"}},nk={href:"https://github.com/marusama/semaphore",target:"_blank",rel:"noopener noreferrer"},rk=t("td",{style:{"text-align":"center"}},"基于CAS的快速可调整大小的信号量实现（比基于通道的信号量实现更快）。",-1),ok={style:{"text-align":"center"}},lk={href:"https://github.com/ssgreg/stl",target:"_blank",rel:"noopener noreferrer"},sk=t("td",{style:{"text-align":"center"}},"基于软件交易内存（STM）并发控制机制的软件交易锁。",-1),ik={style:{"text-align":"center"}},ak={href:"https://github.com/shettyh/threadpool",target:"_blank",rel:"noopener noreferrer"},ck=t("td",{style:{"text-align":"center"}},"Golang线程池实现。",-1),_k={style:{"text-align":"center"}},hk={href:"https://github.com/Jeffail/tunny",target:"_blank",rel:"noopener noreferrer"},dk=t("td",{style:{"text-align":"center"}},"线程池golang。",-1),gk={style:{"text-align":"center"}},uk={href:"https://github.com/vardius/worker-pool",target:"_blank",rel:"noopener noreferrer"},pk=t("td",{style:{"text-align":"center"}},"goworker是一个简单的Go异步工作池。",-1),yk={style:{"text-align":"center"}},xk={href:"https://github.com/gammazero/workerpool",target:"_blank",rel:"noopener noreferrer"},bk=t("td",{style:{"text-align":"center"}},"Goroutine池，它限制了任务执行的并发性，而不是排队的任务数。",-1),fk=t("ul",null,[t("li",null,[e("图形界面"),t("br"),t("a",{name:"图形界面"}),e(),t("a",{name:"图形界面"})])],-1),mk=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),kk={style:{"text-align":"center"}},Gk={href:"https://github.com/murlokswarm/app",target:"_blank",rel:"noopener noreferrer"},Ek=t("td",{style:{"text-align":"center"}},"打包以使用GO，HTML和CSS创建应用的程序。支持：MacOS，Windows正在开发中。",-1),wk={style:{"text-align":"center"}},Tk={href:"https://github.com/fyne-io/fyne",target:"_blank",rel:"noopener noreferrer"},Pk=t("td",{style:{"text-align":"center"}},"为Go设计的跨平台本机GUI，使用EFL呈现。支持：Linux，macOS，Windows。",-1),Ak={style:{"text-align":"center"}},Sk={href:"https://github.com/asticode/go-astilectron",target:"_blank",rel:"noopener noreferrer"},vk=t("td",{style:{"text-align":"center"}},"使用GO和HTML / JS / CSS（由Electron支持）构建跨平台GUI应用。",-1),Ck={style:{"text-align":"center"}},Mk={href:"http://mattn.github.io/go-gtk/",target:"_blank",rel:"noopener noreferrer"},Bk=t("td",{style:{"text-align":"center"}},"GTK的绑定。",-1),Ik={style:{"text-align":"center"}},jk={href:"https://github.com/sciter-sdk/go-sciter",target:"_blank",rel:"noopener noreferrer"},qk=t("td",{style:{"text-align":"center"}},"Go绑定：用于现代桌面UI开发的可嵌入HTML / CSS / script引擎。跨平台。",-1),Fk={style:{"text-align":"center"}},Lk={href:"https://github.com/gotk3/gotk3",target:"_blank",rel:"noopener noreferrer"},zk=t("td",{style:{"text-align":"center"}},"GTK3的绑定。",-1),Dk={style:{"text-align":"center"}},Nk={href:"https://github.com/dtylman/gowd",target:"_blank",rel:"noopener noreferrer"},Ok=t("td",{style:{"text-align":"center"}},"使用GO，HTML，CSS和NW.js进行快速简单的桌面UI开发。跨平台。",-1),Rk={style:{"text-align":"center"}},Hk={href:"https://github.com/therecipe/qt",target:"_blank",rel:"noopener noreferrer"},Uk=t("td",{style:{"text-align":"center"}},"Go的Qt绑定（支持Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi）。",-1),Jk={style:{"text-align":"center"}},Qk={href:"https://github.com/andlabs/ui",target:"_blank",rel:"noopener noreferrer"},Wk=t("td",{style:{"text-align":"center"}},"Go的平台本地GUI库。跨平台。",-1),Vk={style:{"text-align":"center"}},Xk={href:"https://wails.app/",target:"_blank",rel:"noopener noreferrer"},Kk=t("td",{style:{"text-align":"center"}},"使用内置OS HTML渲染器的HTML UI的Mac，Windows，Linux桌面应用程序。",-1),Zk={style:{"text-align":"center"}},Yk={href:"https://github.com/lxn/walk",target:"_blank",rel:"noopener noreferrer"},$k=t("td",{style:{"text-align":"center"}},"Go的Windows应用程序库工具包。",-1),t2={style:{"text-align":"center"}},e2={href:"https://github.com/zserge/webview",target:"_blank",rel:"noopener noreferrer"},n2=t("td",{style:{"text-align":"center"}},"具有简单双向JavaScript绑定的跨平台Webview窗口（Windows / macOS / Linux）。",-1),r2={style:{"text-align":"center"}},o2={href:"https://github.com/dawidd6/go-appindicator",target:"_blank",rel:"noopener noreferrer"},l2=t("td",{style:{"text-align":"center"}},"libappindicator3 C库的Go绑定。",-1),s2={style:{"text-align":"center"}},i2={href:"https://github.com/deckarep/gosx-notifier",target:"_blank",rel:"noopener noreferrer"},a2=t("td",{style:{"text-align":"center"}},"Go的OSX桌面通知库。",-1),c2={style:{"text-align":"center"}},_2={href:"https://github.com/prashantgupta24/activity-tracker",target:"_blank",rel:"noopener noreferrer"},h2=t("td",{style:{"text-align":"center"}},"OSX库，用于通知计算机上的任何（可插入）活动。",-1),d2={style:{"text-align":"center"}},g2={href:"https://github.com/prashantgupta24/mac-sleep-notifier",target:"_blank",rel:"noopener noreferrer"},u2=t("td",{style:{"text-align":"center"}},"golang中的OSX睡眠/唤醒通知。",-1),p2={style:{"text-align":"center"}},y2={href:"https://github.com/go-vgo/robotgo",target:"_blank",rel:"noopener noreferrer"},x2=t("td",{style:{"text-align":"center"}},"Go本机跨平台GUI系统自动化。控制鼠标，键盘等。",-1),b2={style:{"text-align":"center"}},f2={href:"https://github.com/getlantern/systray",target:"_blank",rel:"noopener noreferrer"},m2=t("td",{style:{"text-align":"center"}},"跨平台的Go库，用于在通知区域中放置图标和菜单。",-1),k2={style:{"text-align":"center"}},G2={href:"https://github.com/shurcooL/trayhost",target:"_blank",rel:"noopener noreferrer"},E2=t("td",{style:{"text-align":"center"}},"跨平台的Go库，用于在主机操作系统的任务栏中放置一个图标。",-1),w2=t("ul",null,[t("li",null,[e("图片"),t("br"),t("a",{name:"图片"}),e(),t("a",{name:"图片"})])],-1),T2=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),P2={style:{"text-align":"center"}},A2={href:"https://github.com/anthonynsimon/bild",target:"_blank",rel:"noopener noreferrer"},S2=t("td",{style:{"text-align":"center"}},"纯Go中图像处理算法的集合。",-1),v2={style:{"text-align":"center"}},C2={href:"https://github.com/h2non/bimg",target:"_blank",rel:"noopener noreferrer"},M2=t("td",{style:{"text-align":"center"}},"使用libvips进行快速有效的图像处理的小包装。",-1),B2={style:{"text-align":"center"}},I2={href:"https://github.com/aofei/cameron",target:"_blank",rel:"noopener noreferrer"},j2=t("td",{style:{"text-align":"center"}},"Go的头像生成器。",-1),q2={style:{"text-align":"center"}},F2={href:"https://github.com/tdewolff/canvas",target:"_blank",rel:"noopener noreferrer"},L2=t("td",{style:{"text-align":"center"}},"将矢量图形转换为PDF，SVG或光栅图像。",-1),z2={style:{"text-align":"center"}},D2={href:"https://github.com/gojek/darkroom",target:"_blank",rel:"noopener noreferrer"},N2=t("td",{style:{"text-align":"center"}},"具有可变存储后端的图像代理和侧重于速度和弹性的图像处理引擎。",-1),O2={style:{"text-align":"center"}},R2={href:"https://github.com/pravj/geopattern",target:"_blank",rel:"noopener noreferrer"},H2=t("td",{style:{"text-align":"center"}},"从字符串创建漂亮的生成图像图案。",-1),U2={style:{"text-align":"center"}},J2={href:"https://github.com/fogleman/gg",target:"_blank",rel:"noopener noreferrer"},Q2=t("td",{style:{"text-align":"center"}},"纯Go中的2D渲染。",-1),W2={style:{"text-align":"center"}},V2={href:"https://github.com/disintegration/gift",target:"_blank",rel:"noopener noreferrer"},X2=t("td",{style:{"text-align":"center"}},"图像处理过滤器的包装。",-1),K2={style:{"text-align":"center"}},Z2={href:"https://github.com/qmuntal/gltf",target:"_blank",rel:"noopener noreferrer"},Y2=t("td",{style:{"text-align":"center"}},"高效，强大的glTF 2.0读取器，写入器和验证器。",-1),$2={style:{"text-align":"center"}},t8={href:"https://github.com/ungerik/go-cairo",target:"_blank",rel:"noopener noreferrer"},e8=t("td",{style:{"text-align":"center"}},"用于cairo图形库的绑定。",-1),n8={style:{"text-align":"center"}},r8={href:"https://github.com/bolknote/go-gd",target:"_blank",rel:"noopener noreferrer"},o8=t("td",{style:{"text-align":"center"}},"GD库的Go绑定。",-1),l8={style:{"text-align":"center"}},s8={href:"https://github.com/koyachi/go-nude",target:"_blank",rel:"noopener noreferrer"},i8=t("td",{style:{"text-align":"center"}},"Go的裸露检测。",-1),a8={style:{"text-align":"center"}},c8={href:"https://github.com/lazywei/go-opencv",target:"_blank",rel:"noopener noreferrer"},_8=t("td",{style:{"text-align":"center"}},"用于OpenCV的绑定。",-1),h8={style:{"text-align":"center"}},d8={href:"https://github.com/jyotiska/go-webcolors",target:"_blank",rel:"noopener noreferrer"},g8=t("td",{style:{"text-align":"center"}},"webcolors库的端口，从Python到Go。",-1),u8={style:{"text-align":"center"}},p8={href:"https://github.com/hybridgroup/gocv",target:"_blank",rel:"noopener noreferrer"},y8=t("td",{style:{"text-align":"center"}},"使用OpenCV 3.3+进行计算机视觉的Go软件包。",-1),x8={style:{"text-align":"center"}},b8={href:"https://github.com/corona10/goimagehash",target:"_blank",rel:"noopener noreferrer"},f8=t("td",{style:{"text-align":"center"}},"Go感知图像哈希包。",-1),m8={style:{"text-align":"center"}},k8={href:"https://github.com/corona10/goimghdr",target:"_blank",rel:"noopener noreferrer"},G8=t("td",{style:{"text-align":"center"}},"imghdr模块确定Go文件中包含的图像类型。",-1),E8={style:{"text-align":"center"}},w8={href:"https://github.com/o1egl/govatar",target:"_blank",rel:"noopener noreferrer"},T8=t("td",{style:{"text-align":"center"}},"用于生成有趣头像的库和CMD工具。",-1),P8={style:{"text-align":"center"}},A8={href:"https://github.com/qeesung/image2ascii",target:"_blank",rel:"noopener noreferrer"},S8=t("td",{style:{"text-align":"center"}},"将图像转换为ASCII。",-1),v8={style:{"text-align":"center"}},C8={href:"https://github.com/gographics/imagick",target:"_blank",rel:"noopener noreferrer"},M8=t("td",{style:{"text-align":"center"}},"绑定到ImageMagick的MagickWand C API。",-1),B8={style:{"text-align":"center"}},I8={href:"https://github.com/h2non/imaginary",target:"_blank",rel:"noopener noreferrer"},j8=t("td",{style:{"text-align":"center"}},"用于图像大小调整的快速，简单的HTTP微服务。",-1),q8={style:{"text-align":"center"}},F8={href:"https://github.com/disintegration/imaging",target:"_blank",rel:"noopener noreferrer"},L8=t("td",{style:{"text-align":"center"}},"简单的Go图像处理包。",-1),z8={style:{"text-align":"center"}},D8={href:"https://github.com/hawx/img",target:"_blank",rel:"noopener noreferrer"},N8=t("td",{style:{"text-align":"center"}},"选择图像处理工具。",-1),O8={style:{"text-align":"center"}},R8={href:"https://github.com/fogleman/ln",target:"_blank",rel:"noopener noreferrer"},H8=t("td",{style:{"text-align":"center"}},"Go中的3D线条艺术渲染。",-1),U8={style:{"text-align":"center"}},J8={href:"https://github.com/noelyahan/mergi",target:"_blank",rel:"noopener noreferrer"},Q8=t("td",{style:{"text-align":"center"}},"用于图像处理（合并，裁切，调整大小，水印，动画）的Tool＆Go库。",-1),W8={style:{"text-align":"center"}},V8={href:"https://github.com/aldor007/mort",target:"_blank",rel:"noopener noreferrer"},X8=t("td",{style:{"text-align":"center"}},"用Go编写的存储和图像处理服务器。",-1),K8={style:{"text-align":"center"}},Z8={href:"https://github.com/donatj/mpo",target:"_blank",rel:"noopener noreferrer"},Y8=t("td",{style:{"text-align":"center"}},"用于MPO 3D照片的解码器和转换工具。",-1),$8={style:{"text-align":"center"}},t0={href:"https://github.com/thoas/picfit",target:"_blank",rel:"noopener noreferrer"},e0=t("td",{style:{"text-align":"center"}},"用Go编写的图像大小调整服务器。",-1),n0={style:{"text-align":"center"}},r0={href:"https://github.com/fogleman/pt",target:"_blank",rel:"noopener noreferrer"},o0=t("td",{style:{"text-align":"center"}},"用Go语言编写的路径跟踪引擎。",-1),l0={style:{"text-align":"center"}},s0={href:"https://github.com/nfnt/resize",target:"_blank",rel:"noopener noreferrer"},i0=t("td",{style:{"text-align":"center"}},"使用常见的插值方法为Go 调整图像大小。",-1),a0={style:{"text-align":"center"}},c0={href:"https://github.com/bamiaux/rez",target:"_blank",rel:"noopener noreferrer"},_0=t("td",{style:{"text-align":"center"}},"在纯Go和SIMD中调整图像大小。",-1),h0={style:{"text-align":"center"}},d0={href:"https://github.com/muesli/smartcrop",target:"_blank",rel:"noopener noreferrer"},g0=t("td",{style:{"text-align":"center"}},"查找适合任何图像和尺寸的优质作物。",-1),u0={style:{"text-align":"center"}},p0={href:"https://github.com/auyer/steganography",target:"_blank",rel:"noopener noreferrer"},y0=t("td",{style:{"text-align":"center"}},"用于LSB隐写术的Pure Go库。",-1),x0={style:{"text-align":"center"}},b0={href:"https://github.com/DimitarPetrov/stegify",target:"_blank",rel:"noopener noreferrer"},f0=t("td",{style:{"text-align":"center"}},"用于LSB隐写术的Go工具，能够隐藏图像中的任何文件。",-1),m0={style:{"text-align":"center"}},k0={href:"https://github.com/ajstarks/svgo",target:"_blank",rel:"noopener noreferrer"},G0=t("td",{style:{"text-align":"center"}},"用于SVG生成的Go语言库。",-1),E0={style:{"text-align":"center"}},w0={href:"https://github.com/ftrvxmtrx/tga",target:"_blank",rel:"noopener noreferrer"},T0=t("td",{style:{"text-align":"center"}},"软件包tga是TARGA图像格式的解码器/编码器。",-1),P0=t("ul",null,[t("li",null,[e("物联网"),t("br"),t("a",{name:"物联网"}),e(),t("a",{name:"物联网"})])],-1),A0=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),S0={style:{"text-align":"center"}},v0={href:"https://github.com/connectordb/connectordb",target:"_blank",rel:"noopener noreferrer"},C0=t("td",{style:{"text-align":"center"}},"量化自我和物联网的开源平台。",-1),M0={style:{"text-align":"center"}},B0={href:"https://github.com/goiot/devices",target:"_blank",rel:"noopener noreferrer"},I0=t("td",{style:{"text-align":"center"}},"IoT设备库套件，针对x / exp / io进行实验。",-1),j0={style:{"text-align":"center"}},q0={href:"https://github.com/xcodersun/eywa",target:"_blank",rel:"noopener noreferrer"},F0=t("td",{style:{"text-align":"center"}},"Project Eywa本质上是一个连接管理器，用于跟踪连接的设备。",-1),L0={style:{"text-align":"center"}},z0={href:"https://github.com/tibcosoftware/flogo",target:"_blank",rel:"noopener noreferrer"},D0=t("td",{style:{"text-align":"center"}},"Project Flogo是一个用于IoT Edge应用和集成的开源框架。",-1),N0={style:{"text-align":"center"}},O0={href:"https://github.com/paypal/gatt",target:"_blank",rel:"noopener noreferrer"},R0=t("td",{style:{"text-align":"center"}},"盖特是一个围棋包构建低功耗蓝牙外设。",-1),H0={style:{"text-align":"center"}},U0={href:"https://github.com/hybridgroup/gobot/",target:"_blank",rel:"noopener noreferrer"},J0=t("td",{style:{"text-align":"center"}},"Gobot是机器人技术，物理计算和物联网的框架。",-1),Q0={style:{"text-align":"center"}},W0={href:"https://github.com/amimof/huego",target:"_blank",rel:"noopener noreferrer"},V0=t("td",{style:{"text-align":"center"}},"适用于Go的飞利浦Hue扩展客户端库。",-1),X0={style:{"text-align":"center"}},K0={href:"https://github.com/vaelen/iot/",target:"_blank",rel:"noopener noreferrer"},Z0=t("td",{style:{"text-align":"center"}},"IoT是用于实现Google IoT Core设备的简单框架。",-1),Y0={style:{"text-align":"center"}},$0={href:"https://github.com/Mainflux/mainflux",target:"_blank",rel:"noopener noreferrer"},t9=t("td",{style:{"text-align":"center"}},"工业物联网消息和设备管理服务器。",-1),e9={style:{"text-align":"center"}},n9={href:"https://periph.io/",target:"_blank",rel:"noopener noreferrer"},r9=t("td",{style:{"text-align":"center"}},"外设I / O与低级别的主板设备接口。",-1),o9={style:{"text-align":"center"}},l9={href:"https://github.com/sensorbee/sensorbee",target:"_blank",rel:"noopener noreferrer"},s9=t("td",{style:{"text-align":"center"}},"用于物联网的轻量级流处理引擎。",-1),i9=t("ul",null,[t("li",null,[e("JSON格式"),t("br"),t("a",{name:"JSON格式"}),e(),t("a",{name:"JSON格式"})])],-1),a9=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),c9={style:{"text-align":"center"}},_9={href:"https://github.com/spyzhov/ajson",target:"_blank",rel:"noopener noreferrer"},h9=t("td",{style:{"text-align":"center"}},"具有JSONPath支持的golang的抽象JSON。",-1),d9={style:{"text-align":"center"}},g9={href:"https://github.com/skanehira/gjo",target:"_blank",rel:"noopener noreferrer"},u9=t("td",{style:{"text-align":"center"}},"用于创建JSON对象的小型实用程序。",-1),p9={style:{"text-align":"center"}},y9={href:"https://github.com/tidwall/gjson",target:"_blank",rel:"noopener noreferrer"},x9=t("td",{style:{"text-align":"center"}},"使用一行代码获取JSON值。",-1),b9={style:{"text-align":"center"}},f9={href:"https://github.com/ddymko/go-jsonerror",target:"_blank",rel:"noopener noreferrer"},m9=t("td",{style:{"text-align":"center"}},"Go-JsonError可让我们轻松创建遵循JsonApi规范的json响应错误。",-1),k9={style:{"text-align":"center"}},G9={href:"https://github.com/nicklaw5/go-respond",target:"_blank",rel:"noopener noreferrer"},E9=t("td",{style:{"text-align":"center"}},"Go包，用于处理常见的HTTP JSON响应。",-1),w9={style:{"text-align":"center"}},T9={href:"https://github.com/elgs/gojq",target:"_blank",rel:"noopener noreferrer"},P9=t("td",{style:{"text-align":"center"}},"Golang中的 JSON查询。",-1),A9={style:{"text-align":"center"}},S9={href:"https://github.com/ChimeraCoder/gojson",target:"_blank",rel:"noopener noreferrer"},v9=t("td",{style:{"text-align":"center"}},"从示例JSON自动生成Go（golang）结构定义。",-1),C9={style:{"text-align":"center"}},M9={href:"https://github.com/yazgazan/jaydiff",target:"_blank",rel:"noopener noreferrer"},B9=t("td",{style:{"text-align":"center"}},"用Go编写的JSON diff实用程序。",-1),I9={style:{"text-align":"center"}},j9={href:"https://github.com/wI2L/jettison",target:"_blank",rel:"noopener noreferrer"},q9=t("td",{style:{"text-align":"center"}},"用于Go的高性能，无反射JSON编码器。",-1),F9={style:{"text-align":"center"}},L9={href:"https://mholt.github.io/json-to-go/",target:"_blank",rel:"noopener noreferrer"},z9=t("td",{style:{"text-align":"center"}},"将JSON转换为Go结构。",-1),D9={style:{"text-align":"center"}},N9={href:"https://github.com/m-zajac/json2go",target:"_blank",rel:"noopener noreferrer"},O9=t("td",{style:{"text-align":"center"}},"高级JSON到Go结构转换。提供可以解析多个JSON文档并创建适合所有JSON的结构的包。",-1),R9={style:{"text-align":"center"}},H9={href:"https://github.com/AmuzaTkts/jsonapi-errors",target:"_blank",rel:"noopener noreferrer"},U9=t("td",{style:{"text-align":"center"}},"根据JSON API错误参考进行绑定。",-1),J9={style:{"text-align":"center"}},Q9={href:"https://github.com/miolini/jsonf",target:"_blank",rel:"noopener noreferrer"},W9=t("td",{style:{"text-align":"center"}},"突出显示格式和获取JSON的结构查询的控制台工具。",-1),V9={style:{"text-align":"center"}},X9={href:"https://github.com/ricardolonga/jsongo",target:"_blank",rel:"noopener noreferrer"},K9=t("td",{style:{"text-align":"center"}},"Fluent API，可以更轻松地创建Json对象。",-1),Z9={style:{"text-align":"center"}},Y9={href:"https://github.com/RichardKnop/jsonhal",target:"_blank",rel:"noopener noreferrer"},$9=t("td",{style:{"text-align":"center"}},"简单的Go包，用于将自定义结构编组为HAL兼容的JSON响应。",-1),t4={style:{"text-align":"center"}},e4={href:"https://github.com/Qntfy/kazaam",target:"_blank",rel:"noopener noreferrer"},n4=t("td",{style:{"text-align":"center"}},"用于JSON文档的任意转换的API。",-1),r4={style:{"text-align":"center"}},o4={href:"https://github.com/sanbornm/mp",target:"_blank",rel:"noopener noreferrer"},l4=t("td",{style:{"text-align":"center"}},"简单的cli电子邮件解析器。当前，它使用标准输入并输出JSON。",-1),s4=t("ul",null,[t("li",null,[e("机器学习"),t("br"),t("a",{name:"机器学习"}),e(),t("a",{name:"机器学习"})])],-1),i4=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),a4={style:{"text-align":"center"}},c4={href:"https://github.com/jbrukh/bayesian",target:"_blank",rel:"noopener noreferrer"},_4=t("td",{style:{"text-align":"center"}},"贝叶斯分类为Golang天真。",-1),h4={style:{"text-align":"center"}},d4={href:"https://github.com/ryanbressler/CloudForest",target:"_blank",rel:"noopener noreferrer"},g4=t("td",{style:{"text-align":"center"}},"快速，灵活，多线程的决策树集合，用于纯Go中的机器学习。",-1),u4={style:{"text-align":"center"}},p4={href:"https://github.com/MaxHalford/eaopt",target:"_blank",rel:"noopener noreferrer"},y4=t("td",{style:{"text-align":"center"}},"进化优化库。",-1),x4={style:{"text-align":"center"}},b4={href:"https://github.com/khezen/evoli",target:"_blank",rel:"noopener noreferrer"},f4=t("td",{style:{"text-align":"center"}},"遗传算法和粒子群优化库。",-1),m4={style:{"text-align":"center"}},k4={href:"https://github.com/Fontinalis/fonet",target:"_blank",rel:"noopener noreferrer"},G4=t("td",{style:{"text-align":"center"}},"用Go编写的深度神经网络库。",-1),E4={style:{"text-align":"center"}},w4={href:"https://github.com/e-XpertSolutions/go-cluster",target:"_blank",rel:"noopener noreferrer"},T4=t("td",{style:{"text-align":"center"}},"k模式和k-原型聚类算法的Go实现。",-1),P4={style:{"text-align":"center"}},A4={href:"https://github.com/patrikeh/go-deep",target:"_blank",rel:"noopener noreferrer"},S4=t("td",{style:{"text-align":"center"}},"Go中功能丰富的神经网络库",-1),v4={style:{"text-align":"center"}},C4={href:"https://github.com/white-pony/go-fann",target:"_blank",rel:"noopener noreferrer"},M4=t("td",{style:{"text-align":"center"}},"快速人工神经网络（FANN）库的Go绑定。",-1),B4={style:{"text-align":"center"}},I4={href:"https://github.com/thoj/go-galib",target:"_blank",rel:"noopener noreferrer"},j4=t("td",{style:{"text-align":"center"}},"用Go / golang编写的遗传算法库。",-1),q4={style:{"text-align":"center"}},F4={href:"https://github.com/daviddengcn/go-pr",target:"_blank",rel:"noopener noreferrer"},L4=t("td",{style:{"text-align":"center"}},"Go lang中的模式识别包。",-1),z4={style:{"text-align":"center"}},D4={href:"https://github.com/goml/gobrain",target:"_blank",rel:"noopener noreferrer"},N4=t("td",{style:{"text-align":"center"}},"用go语言编写的神经网络",-1),O4={style:{"text-align":"center"}},R4={href:"https://github.com/e-dard/godist",target:"_blank",rel:"noopener noreferrer"},H4=t("td",{style:{"text-align":"center"}},"各种概率分布及相关方法。",-1),U4={style:{"text-align":"center"}},J4={href:"https://github.com/tomcraven/goga",target:"_blank",rel:"noopener noreferrer"},Q4=t("td",{style:{"text-align":"center"}},"Go的遗传算法库。",-1),W4={style:{"text-align":"center"}},V4={href:"https://github.com/sjwhitworth/golearn",target:"_blank",rel:"noopener noreferrer"},X4=t("td",{style:{"text-align":"center"}},"用于Go的通用机器学习库。",-1),K4={style:{"text-align":"center"}},Z4={href:"https://github.com/danieldk/golinear",target:"_blank",rel:"noopener noreferrer"},Y4=t("td",{style:{"text-align":"center"}},"Go的liblinear绑定。",-1),$4={style:{"text-align":"center"}},t5={href:"https://github.com/surenderthakran/gomind",target:"_blank",rel:"noopener noreferrer"},e5=t("td",{style:{"text-align":"center"}},"Go中的简单神经网络库。",-1),n5={style:{"text-align":"center"}},r5={href:"https://github.com/cdipaolo/goml",target:"_blank",rel:"noopener noreferrer"},o5=t("td",{style:{"text-align":"center"}},"Go中的在线机器学习。",-1),l5={style:{"text-align":"center"}},s5={href:"https://github.com/c-bata/goptuna",target:"_blank",rel:"noopener noreferrer"},i5=t("td",{style:{"text-align":"center"}},"用于Go语言编写的黑盒函数的贝叶斯优化框架。一切都会被优化。",-1),a5={style:{"text-align":"center"}},c5={href:"https://github.com/timkaye11/goRecommend",target:"_blank",rel:"noopener noreferrer"},_5=t("td",{style:{"text-align":"center"}},"用Go编写的推荐算法库。",-1),h5={style:{"text-align":"center"}},d5={href:"https://github.com/gorgonia/gorgonia",target:"_blank",rel:"noopener noreferrer"},g5=t("td",{style:{"text-align":"center"}},"基于图形的计算库，例如Theano for Go，它提供了用于构建各种机器学习和神经网络算法的原语。",-1),u5={style:{"text-align":"center"}},p5={href:"https://github.com/zhenghaoz/gorse",target:"_blank",rel:"noopener noreferrer"},y5=t("td",{style:{"text-align":"center"}},"基于Go编写的协作过滤的离线推荐系统后端。",-1),x5={style:{"text-align":"center"}},b5={href:"https://github.com/asafschers/goscore",target:"_blank",rel:"noopener noreferrer"},f5=t("td",{style:{"text-align":"center"}},"用于PMML的Go Scoring API。",-1),m5={style:{"text-align":"center"}},k5={href:"https://github.com/otiai10/gosseract",target:"_blank",rel:"noopener noreferrer"},G5=t("td",{style:{"text-align":"center"}},"使用Tesseract C ++库的OCR（光学字符识别）软件包。",-1),E5={style:{"text-align":"center"}},w5={href:"https://github.com/datastream/libsvm",target:"_blank",rel:"noopener noreferrer"},T5=t("td",{style:{"text-align":"center"}},"基于LIBSVM 3.14 libsvm的golang版本衍生作品。",-1),P5={style:{"text-align":"center"}},A5={href:"https://github.com/jinyeom/neat",target:"_blank",rel:"noopener noreferrer"},S5=t("td",{style:{"text-align":"center"}},"用于增强拓扑神经演化（NEAT）的即插即用，并行Go框架。",-1),v5={style:{"text-align":"center"}},C5={href:"https://github.com/schuyler/neural-go",target:"_blank",rel:"noopener noreferrer"},M5=t("td",{style:{"text-align":"center"}},"go-在Go中实现的多层感知器网络，通过反向传播进行训练。",-1),B5={style:{"text-align":"center"}},I5={href:"https://github.com/otiai10/ocrserver",target:"_blank",rel:"noopener noreferrer"},j5=t("td",{style:{"text-align":"center"}},"一个简单的OCR API服务器，非常容易被Docker和Heroku部署。",-1),q5={style:{"text-align":"center"}},F5={href:"https://github.com/owulveryck/onnx-go",target:"_blank",rel:"noopener noreferrer"},L5=t("td",{style:{"text-align":"center"}},"转到开放神经网络交换（ONNX）的接口。",-1),z5={style:{"text-align":"center"}},D5={href:"https://github.com/ThePaw/probab",target:"_blank",rel:"noopener noreferrer"},N5=t("td",{style:{"text-align":"center"}},"概率分布函数。贝叶斯推断。用纯Go语言编写。",-1),O5={style:{"text-align":"center"}},R5={href:"https://github.com/muesli/regommend",target:"_blank",rel:"noopener noreferrer"},H5=t("td",{style:{"text-align":"center"}},"建议和协作过滤引擎。",-1),U5={style:{"text-align":"center"}},J5={href:"https://github.com/eaigner/shield",target:"_blank",rel:"noopener noreferrer"},Q5=t("td",{style:{"text-align":"center"}},"贝叶斯文本分类器，具有灵活的标记器和Go的存储后端。",-1),W5={style:{"text-align":"center"}},V5={href:"https://github.com/galeone/tfgo",target:"_blank",rel:"noopener noreferrer"},X5=t("td",{style:{"text-align":"center"}},"易于使用的Tensorflow绑定：简化了官方Tensorflow Go绑定的使用。在Go中定义计算图，加载并执行经过Python训练的模型。",-1),K5={style:{"text-align":"center"}},Z5={href:"https://github.com/Xamber/Varis",target:"_blank",rel:"noopener noreferrer"},Y5=t("td",{style:{"text-align":"center"}},"Golang神经网络。",-1),$5=t("ul",null,[t("li",null,[e("金融"),t("br"),t("a",{name:"微软办公软件"}),e(),t("a",{name:"微软办公软件"})])],-1),t3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),e3={style:{"text-align":"center"}},n3={href:"https://github.com/unidoc/unioffice",target:"_blank",rel:"noopener noreferrer"},r3=t("td",{style:{"text-align":"center"}},"Pure Go库，用于创建和处理Office Word（.docx），Excel（.xlsx）和Powerpoint（.pptx）文档。",-1),o3={style:{"text-align":"center"}},l3={href:"https://github.com/360EntSecGroup-Skylar/excelize",target:"_blank",rel:"noopener noreferrer"},s3=t("td",{style:{"text-align":"center"}},"Golang库用于读取和写入Microsoft Excel™（XLSX）文件。",-1),i3={style:{"text-align":"center"}},a3={href:"https://github.com/szyhf/go-excel",target:"_blank",rel:"noopener noreferrer"},c3=t("td",{style:{"text-align":"center"}},"一个简单而轻便的阅读器，可以将类似于related-db的excel读取为表格。",-1),_3={style:{"text-align":"center"}},h3={href:"https://github.com/fterrag/goxlsxwriter",target:"_blank",rel:"noopener noreferrer"},d3=t("td",{style:{"text-align":"center"}},"libxlsxwriter的Golang绑定，用于编写XLSX（Microsoft Excel）文件。",-1),g3={style:{"text-align":"center"}},u3={href:"https://github.com/tealeg/xlsx",target:"_blank",rel:"noopener noreferrer"},p3=t("td",{style:{"text-align":"center"}},"用于简化在Go程序中读取Microsoft Excel最新版本使用的XML格式的库。",-1),y3={style:{"text-align":"center"}},x3={href:"https://github.com/plandem/xlsx",target:"_blank",rel:"noopener noreferrer"},b3=t("td",{style:{"text-align":"center"}},"在Go程序中快速/安全地读取/更新您现有的Microsoft Excel文件的方法。",-1),f3=t("ul",null,[t("li",null,[e("自然语言处理"),t("br"),t("a",{name:"自然语言处理"}),e(),t("a",{name:"自然语言处理"})])],-1),m3=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),k3={style:{"text-align":"center"}},G3={href:"https://github.com/rylans/getlang",target:"_blank",rel:"noopener noreferrer"},E3=t("td",{style:{"text-align":"center"}},"快速自然语言检测程序包。",-1),w3={style:{"text-align":"center"}},T3={href:"https://github.com/nicksnyder/go-i18n/",target:"_blank",rel:"noopener noreferrer"},P3=t("td",{style:{"text-align":"center"}},"用于处理本地化文本的软件包和一个随附工具。",-1),A3={style:{"text-align":"center"}},S3={href:"https://github.com/dveselov/mystem",target:"_blank",rel:"noopener noreferrer"},v3=t("td",{style:{"text-align":"center"}},"CGo与Yandex.Mystem的绑定-俄罗斯形态分析仪。",-1),C3={style:{"text-align":"center"}},M3={href:"https://github.com/nuance/go-nlp",target:"_blank",rel:"noopener noreferrer"},B3=t("td",{style:{"text-align":"center"}},"用于处理离散概率分布的实用程序和其他可用于执行NLP工作的工具。",-1),I3={style:{"text-align":"center"}},j3={href:"https://github.com/mozillazg/go-pinyin",target:"_blank",rel:"noopener noreferrer"},q3=t("td",{style:{"text-align":"center"}},"CN Hanzi至Hanyu拼音转换器。",-1),F3={style:{"text-align":"center"}},L3={href:"https://github.com/agonopol/go-stem",target:"_blank",rel:"noopener noreferrer"},z3=t("td",{style:{"text-align":"center"}},"搬运程序阻止算法的实现。",-1),D3={style:{"text-align":"center"}},N3={href:"https://github.com/mozillazg/go-unidecode",target:"_blank",rel:"noopener noreferrer"},O3=t("td",{style:{"text-align":"center"}},"Unicode文本的ASCII音译。",-1),R3={style:{"text-align":"center"}},H3={href:"https://github.com/danieldk/go2vec",target:"_blank",rel:"noopener noreferrer"},U3=t("td",{style:{"text-align":"center"}},"用于word2vec嵌入的阅读器和实用程序功能。",-1),J3={style:{"text-align":"center"}},Q3={href:"https://github.com/yanyiwu/gojieba",target:"_blank",rel:"noopener noreferrer"},W3=t("td",{style:{"text-align":"center"}},"这是一个围棋实施解霸其中中国分词算法。",-1),V3={style:{"text-align":"center"}},X3={href:"https://github.com/rjohnsondev/golibstemmer",target:"_blank",rel:"noopener noreferrer"},K3=t("td",{style:{"text-align":"center"}},"雪球库libstemmer库的绑定，包括porter 2。",-1),Z3={style:{"text-align":"center"}},Y3={href:"https://github.com/xujiajun/gotokenizer",target:"_blank",rel:"noopener noreferrer"},$3=t("td",{style:{"text-align":"center"}},"基于字典和Goram语言的Bigram语言模型的标记器。（现在仅支持中文细分）",-1),t6={style:{"text-align":"center"}},e6={href:"https://github.com/fiam/gounidecode",target:"_blank",rel:"noopener noreferrer"},n6=t("td",{style:{"text-align":"center"}},"Go的Unicode音译器（也称为unidecode）。",-1),r6={style:{"text-align":"center"}},o6={href:"https://github.com/go-ego/gse",target:"_blank",rel:"noopener noreferrer"},l6=t("td",{style:{"text-align":"center"}},"进行有效的文本分割；支持英语，中文，日语等。",-1),s6={style:{"text-align":"center"}},i6={href:"https://github.com/goodsign/icu",target:"_blank",rel:"noopener noreferrer"},a6=t("td",{style:{"text-align":"center"}},"CGO结合为ICU4C C库检测和转换功能。保证与版本50.1兼容。",-1),c6={style:{"text-align":"center"}},_6={href:"https://github.com/ikawaha/kagome",target:"_blank",rel:"noopener noreferrer"},h6=t("td",{style:{"text-align":"center"}},"用纯Go语言编写的JP形态分析仪。",-1),d6={style:{"text-align":"center"}},g6={href:"https://github.com/goodsign/libtextcat",target:"_blank",rel:"noopener noreferrer"},u6=t("td",{style:{"text-align":"center"}},"libtextcat C库的Cgo绑定。保证与2.2版兼容。",-1),p6={style:{"text-align":"center"}},y6={href:"https://github.com/awsong/MMSEGO",target:"_blank",rel:"noopener noreferrer"},x6=t("td",{style:{"text-align":"center"}},"这是MMSEG的GO实现，它是中文分词算法。",-1),b6={style:{"text-align":"center"}},f6={href:"https://github.com/Shixzie/nlp",target:"_blank",rel:"noopener noreferrer"},m6=t("td",{style:{"text-align":"center"}},"从字符串中提取值，并用nlp填充您的结构。",-1),k6={style:{"text-align":"center"}},G6={href:"https://github.com/james-bowman/nlp",target:"_blank",rel:"noopener noreferrer"},E6=t("td",{style:{"text-align":"center"}},"支持LSA（潜在语义分析）的自然语言处理库。",-1),w6={style:{"text-align":"center"}},T6={href:"https://github.com/rookii/paicehusk",target:"_blank",rel:"noopener noreferrer"},P6=t("td",{style:{"text-align":"center"}},"Paice / Husk提取算法的Golang实现。",-1),A6={style:{"text-align":"center"}},S6={href:"https://github.com/striker2000/petrovich",target:"_blank",rel:"noopener noreferrer"},v6=t("td",{style:{"text-align":"center"}},"彼得罗维奇（Petrovich）是库，在给定的语法情况下使用俄语名称。",-1),C6={style:{"text-align":"center"}},M6={href:"https://github.com/a2800276/porter",target:"_blank",rel:"noopener noreferrer"},B6=t("td",{style:{"text-align":"center"}},"这是Martin Porter的Porter干算法的C实现的相当简单的移植。",-1),I6={style:{"text-align":"center"}},j6={href:"https://github.com/zhenjl/porter2",target:"_blank",rel:"noopener noreferrer"},q6=t("td",{style:{"text-align":"center"}},"非常快的Porter 2 提取器。",-1),F6={style:{"text-align":"center"}},L6={href:"https://github.com/jdkato/prose",target:"_blank",rel:"noopener noreferrer"},z6=t("td",{style:{"text-align":"center"}},"用于文本处理的库，支持标记化，词性标记，命名实体提取等。仅限英语。",-1),D6={style:{"text-align":"center"}},N6={href:"https://github.com/Obaied/RAKE.go",target:"_blank",rel:"noopener noreferrer"},O6=t("td",{style:{"text-align":"center"}},"快速自动关键字提取算法（RAKE）的Go端口。",-1),R6={style:{"text-align":"center"}},H6={href:"https://github.com/blevesearch/segment",target:"_blank",rel:"noopener noreferrer"},U6=t("td",{style:{"text-align":"center"}},"用于执行Unicode标准附件＃29中所述的Unicode文本分段的Go库",-1),J6={style:{"text-align":"center"}},Q6={href:"https://github.com/neurosnap/sentences",target:"_blank",rel:"noopener noreferrer"},W6=t("td",{style:{"text-align":"center"}},"句子标记器：将文本转换为句子列表。",-1),V6={style:{"text-align":"center"}},X6={href:"https://github.com/osamingo/shamoji",target:"_blank",rel:"noopener noreferrer"},K6=t("td",{style:{"text-align":"center"}},"shamoji是用Go编写的单词过滤程序包。",-1),Z6={style:{"text-align":"center"}},Y6={href:"https://github.com/goodsign/snowball",target:"_blank",rel:"noopener noreferrer"},$6=t("td",{style:{"text-align":"center"}},"Go的雪球茎端口（cgo包装器）。提供单词词干提取功能Snowball本机。",-1),t7={style:{"text-align":"center"}},e7={href:"https://github.com/dchest/stemmer",target:"_blank",rel:"noopener noreferrer"},n7=t("td",{style:{"text-align":"center"}},"用于Go编程语言的Stemmer软件包。包括英语和德语词干。",-1),r7={style:{"text-align":"center"}},o7={href:"https://github.com/pebbe/textcat",target:"_blank",rel:"noopener noreferrer"},l7=t("td",{style:{"text-align":"center"}},"Go软件包，用于基于n-gram的文本分类，并支持utf-8和原始文本。",-1),s7={style:{"text-align":"center"}},i7={href:"https://github.com/abadojack/whatlanggo",target:"_blank",rel:"noopener noreferrer"},a7=t("td",{style:{"text-align":"center"}},"Go的自然语言检测程序包。支持84种语言和24种脚本（书写系统，例如拉丁语，西里尔字母等）。",-1),c7={style:{"text-align":"center"}},_7={href:"https://github.com/olebedev/when",target:"_blank",rel:"noopener noreferrer"},h7=t("td",{style:{"text-align":"center"}},"自然EN和RU语言日期/时间分析器具有可插拔的规则。",-1),d7=t("ul",null,[t("li",null,[e("网络"),t("br"),t("a",{name:"网络"}),e(),t("a",{name:"网络"})])],-1),g7=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),u7={style:{"text-align":"center"}},p7={href:"https://github.com/mdlayher/arp",target:"_blank",rel:"noopener noreferrer"},y7=t("td",{style:{"text-align":"center"}},"包arp实现ARP协议，如RFC 826中所述。",-1),x7={style:{"text-align":"center"}},b7={href:"https://github.com/stabbycutyou/buffstreams",target:"_blank",rel:"noopener noreferrer"},f7=t("td",{style:{"text-align":"center"}},"通过TCP流化协议缓冲区数据变得容易。",-1),m7={style:{"text-align":"center"}},k7={href:"https://github.com/zubairhamed/canopus",target:"_blank",rel:"noopener noreferrer"},G7=t("td",{style:{"text-align":"center"}},"CoAP客户端/服务器实施（RFC 7252）。",-1),E7={style:{"text-align":"center"}},w7={href:"https://github.com/yl2chen/cidranger",target:"_blank",rel:"noopener noreferrer"},T7=t("td",{style:{"text-align":"center"}},"Go的快速IP到CIDR查找。",-1),P7={style:{"text-align":"center"}},A7={href:"https://github.com/mdlayher/dhcp6",target:"_blank",rel:"noopener noreferrer"},S7=t("td",{style:{"text-align":"center"}},"软件包dhcp6实现了DHCPv6服务器，如RFC 3315中所述。",-1),v7={style:{"text-align":"center"}},C7={href:"https://github.com/miekg/dns",target:"_blank",rel:"noopener noreferrer"},M7=t("td",{style:{"text-align":"center"}},"使用DNS的Go库。",-1),B7={style:{"text-align":"center"}},I7={href:"https://github.com/songgao/ether",target:"_blank",rel:"noopener noreferrer"},j7=t("td",{style:{"text-align":"center"}},"用于发送和接收以太网帧的跨平台Go软件包。",-1),q7={style:{"text-align":"center"}},F7={href:"https://github.com/mdlayher/ethernet",target:"_blank",rel:"noopener noreferrer"},L7=t("td",{style:{"text-align":"center"}},"程序包ethernet实施IEEE 802.3以太网II帧和IEEE 802.1Q VLAN标签的封送处理。",-1),z7={style:{"text-align":"center"}},D7={href:"https://github.com/valyala/fasthttp",target:"_blank",rel:"noopener noreferrer"},N7=t("td",{style:{"text-align":"center"}},"软件包fasthttp是Go的一种快速HTTP实现，比net / http快10倍。",-1),O7={style:{"text-align":"center"}},R7={href:"https://github.com/fortio/fortio",target:"_blank",rel:"noopener noreferrer"},H7=t("td",{style:{"text-align":"center"}},"负载测试库和命令行工具，高级回显服务器和Web UI。允许指定设置的每秒查询负载，并记录延迟直方图和其他有用的统计数据并对其进行图形化。Tcp，Http，gRPC。",-1),U7={style:{"text-align":"center"}},J7={href:"https://github.com/jlaffaye/ftp",target:"_blank",rel:"noopener noreferrer"},Q7=t("td",{style:{"text-align":"center"}},"程序包ftp实现RFC 959中所述的FTP客户端。",-1),W7={style:{"text-align":"center"}},V7={href:"https://github.com/Allenxuxu/gev",target:"_blank",rel:"noopener noreferrer"},X7=t("td",{style:{"text-align":"center"}},"gev是基于Reactor模式的轻量级，快速，无阻塞的TCP网络库。",-1),K7={style:{"text-align":"center"}},Z7={href:"https://github.com/DrmagicE/gmqtt",target:"_blank",rel:"noopener noreferrer"},Y7=t("td",{style:{"text-align":"center"}},"Gmqtt是一个灵活的高性能MQTT代理库，它完全实现了MQTT协议V3.1.1。",-1),$7={style:{"text-align":"center"}},tG={href:"https://github.com/panjf2000/gnet",target:"_blank",rel:"noopener noreferrer"},eG=t("td",{style:{"text-align":"center"}},"gnet是一个高性能的，用纯围棋轻便，非阻塞，事件循环网络库。",-1),nG={style:{"text-align":"center"}},rG={href:"https://github.com/google/gnxi",target:"_blank",rel:"noopener noreferrer"},oG=t("td",{style:{"text-align":"center"}},"使用gNMI和gNOI协议的网络管理工具的集合。",-1),lG={style:{"text-align":"center"}},sG={href:"https://github.com/hashicorp/go-getter",target:"_blank",rel:"noopener noreferrer"},iG=t("td",{style:{"text-align":"center"}},"Go库，用于使用URL从各种来源下载文件或目录。",-1),aG={style:{"text-align":"center"}},cG={href:"https://github.com/joeig/go-powerdns",target:"_blank",rel:"noopener noreferrer"},_G=t("td",{style:{"text-align":"center"}},"Golang的 PowerDNS API绑定。",-1),hG={style:{"text-align":"center"}},dG={href:"https://github.com/ccding/go-stun",target:"_blank",rel:"noopener noreferrer"},gG=t("td",{style:{"text-align":"center"}},"STUN客户端的Go实现（RFC 3489和RFC 5389）。",-1),uG={style:{"text-align":"center"}},pG={href:"https://github.com/osrg/gobgp",target:"_blank",rel:"noopener noreferrer"},yG=t("td",{style:{"text-align":"center"}},"使用Go编程语言实现的BGP。",-1),xG={style:{"text-align":"center"}},bG={href:"https://github.com/sunwxg/golibwireshark",target:"_blank",rel:"noopener noreferrer"},fG=t("td",{style:{"text-align":"center"}},"软件包golibwireshark使用libwireshark库来解码pcap文件并分析解剖数据。",-1),mG={style:{"text-align":"center"}},kG={href:"https://github.com/google/gopacket",target:"_blank",rel:"noopener noreferrer"},GG=t("td",{style:{"text-align":"center"}},"Go库，用于使用libpcap绑定进行数据包处理。",-1),EG={style:{"text-align":"center"}},wG={href:"https://github.com/akrennmair/gopcap",target:"_blank",rel:"noopener noreferrer"},TG=t("td",{style:{"text-align":"center"}},"libpcap的包装器。",-1),PG={style:{"text-align":"center"}},AG={href:"https://github.com/sunwxg/goshark",target:"_blank",rel:"noopener noreferrer"},SG=t("td",{style:{"text-align":"center"}},"软件包goshark使用tshark解码IP数据包并创建数据结构以分析数据包。",-1),vG={style:{"text-align":"center"}},CG={href:"https://github.com/soniah/gosnmp",target:"_blank",rel:"noopener noreferrer"},MG=t("td",{style:{"text-align":"center"}},"用于执行SNMP操作的本机Go库。",-1),BG={style:{"text-align":"center"}},IG={href:"https://github.com/rakeki/gosocsvr",target:"_blank",rel:"noopener noreferrer"},jG=t("td",{style:{"text-align":"center"}},"套接字服务器变得简单。",-1),qG={style:{"text-align":"center"}},FG={href:"https://github.com/gansidui/gotcp",target:"_blank",rel:"noopener noreferrer"},LG=t("td",{style:{"text-align":"center"}},"用于快速编写tcp应用程序的Go软件包。",-1),zG={style:{"text-align":"center"}},DG={href:"https://github.com/cavaliercoder/grab",target:"_blank",rel:"noopener noreferrer"},NG=t("td",{style:{"text-align":"center"}},"用于管理文件下载的软件包。",-1),OG={style:{"text-align":"center"}},RG={href:"https://github.com/koofr/graval",target:"_blank",rel:"noopener noreferrer"},HG=t("td",{style:{"text-align":"center"}},"实验性FTP服务器框架。",-1),UG={style:{"text-align":"center"}},JG={href:"https://github.com/gchaincl/httplab",target:"_blank",rel:"noopener noreferrer"},QG=t("td",{style:{"text-align":"center"}},"HTTPLabs可让您检查HTTP请求并伪造响应。",-1),WG={style:{"text-align":"center"}},VG={href:"https://github.com/c-robinson/iplib",target:"_blank",rel:"noopener noreferrer"},XG=t("td",{style:{"text-align":"center"}},"受python ipaddress和ruby ipaddr启发而使用IP地址（net.IP，net.IPNet）的库",-1),KG={style:{"text-align":"center"}},ZG={href:"https://github.com/udhos/jazigo",target:"_blank",rel:"noopener noreferrer"},YG=t("td",{style:{"text-align":"center"}},"Jazigo是用Go语言编写的工具，用于检索多个网络设备的配置。",-1),$G={style:{"text-align":"center"}},tE={href:"https://github.com/xtaci/kcp-go",target:"_blank",rel:"noopener noreferrer"},eE=t("td",{style:{"text-align":"center"}},"KCP-快速可靠的ARQ协议。",-1),nE={style:{"text-align":"center"}},rE={href:"https://github.com/xtaci/kcptun",target:"_blank",rel:"noopener noreferrer"},oE=t("td",{style:{"text-align":"center"}},"基于KCP协议的极其简单和快速的udp隧道。",-1),lE={style:{"text-align":"center"}},sE={href:"https://github.com/fanux/lhttp",target:"_blank",rel:"noopener noreferrer"},iE=t("td",{style:{"text-align":"center"}},"强大的websocket框架，可更轻松地构建IM服务器。",-1),aE={style:{"text-align":"center"}},cE={href:"https://github.com/ian-kent/linkio",target:"_blank",rel:"noopener noreferrer"},_E=t("td",{style:{"text-align":"center"}},"用于读取器/写入器接口的网络链接速度模拟。",-1),hE={style:{"text-align":"center"}},dE={href:"https://github.com/kirillDanshin/llb",target:"_blank",rel:"noopener noreferrer"},gE=t("td",{style:{"text-align":"center"}},"这是代理服务器的非常简单但快速的后端。对于零内存分配和快速响应的快速重定向到预定义域很有用。",-1),uE={style:{"text-align":"center"}},pE={href:"https://github.com/hashicorp/mdns",target:"_blank",rel:"noopener noreferrer"},yE=t("td",{style:{"text-align":"center"}},"Golang中的简单mDNS（多播DNS）客户端/服务器库。",-1),xE={style:{"text-align":"center"}},bE={href:"https://eclipse.org/paho/clients/golang/",target:"_blank",rel:"noopener noreferrer"},fE=t("td",{style:{"text-align":"center"}},"Paho Go客户端提供了一个MQTT客户端库，用于通过TCP，TLS或WebSockets连接到MQTT代理。",-1),mE={style:{"text-align":"center"}},kE={href:"https://github.com/intel-go/nff-go",target:"_blank",rel:"noopener noreferrer"},GE=t("td",{style:{"text-align":"center"}},"用于快速开发云和裸机（以前的YANFF）的高性能网络功能的框架。",-1),EE={style:{"text-align":"center"}},wE={href:"https://github.com/aerogo/packet",target:"_blank",rel:"noopener noreferrer"},TE=t("td",{style:{"text-align":"center"}},"通过TCP和UDP发送数据包。如果需要，它可以缓冲消息和热交换连接。",-1),PE={style:{"text-align":"center"}},AE={href:"https://github.com/schollz/peerdiscovery",target:"_blank",rel:"noopener noreferrer"},SE=t("td",{style:{"text-align":"center"}},"Pure Go库，用于使用UDP多播的跨平台本地对等发现。",-1),vE={style:{"text-align":"center"}},CE={href:"https://github.com/aybabtme/portproxy",target:"_blank",rel:"noopener noreferrer"},ME=t("td",{style:{"text-align":"center"}},"简单的TCP代理，它将不支持它的API添加到CORS支持中。",-1),BE={style:{"text-align":"center"}},IE={href:"https://github.com/polera/publicip",target:"_blank",rel:"noopener noreferrer"},jE=t("td",{style:{"text-align":"center"}},"软件包publicip返回您的面向公众的IPv4地址（互联网出口）。",-1),qE={style:{"text-align":"center"}},FE={href:"https://github.com/lucas-clemente/quic-go",target:"_blank",rel:"noopener noreferrer"},LE=t("td",{style:{"text-align":"center"}},"在纯Go中实现QUIC协议。",-1),zE={style:{"text-align":"center"}},DE={href:"https://github.com/mdlayher/raw",target:"_blank",rel:"noopener noreferrer"},NE=t("td",{style:{"text-align":"center"}},"包raw允许在设备驱动程序级别为网络接口读取和写入数据。",-1),OE={style:{"text-align":"center"}},RE={href:"https://github.com/pkg/sftp",target:"_blank",rel:"noopener noreferrer"},HE={style:{"text-align":"center"}},UE={href:"https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt",target:"_blank",rel:"noopener noreferrer"},JE={style:{"text-align":"center"}},QE={href:"https://github.com/gliderlabs/ssh",target:"_blank",rel:"noopener noreferrer"},WE=t("td",{style:{"text-align":"center"}},"用于构建SSH服务器的高级API（包装crypto / ssh）。",-1),VE={style:{"text-align":"center"}},XE={href:"https://github.com/eduardonunesp/sslb",target:"_blank",rel:"noopener noreferrer"},KE=t("td",{style:{"text-align":"center"}},"这是一个超级简单的负载均衡器，只是一个实现某种性能的小项目。",-1),ZE={style:{"text-align":"center"}},YE={href:"https://github.com/go-rtc/stun",target:"_blank",rel:"noopener noreferrer"},$E=t("td",{style:{"text-align":"center"}},"实施RFC 5389 STUN协议。",-1),tw={style:{"text-align":"center"}},ew={href:"https://github.com/firstrow/tcp_server",target:"_blank",rel:"noopener noreferrer"},nw=t("td",{style:{"text-align":"center"}},"用于更快地构建tcp服务器的Go库。",-1),rw={style:{"text-align":"center"}},ow={href:"https://github.com/two/tspool",target:"_blank",rel:"noopener noreferrer"},lw=t("td",{style:{"text-align":"center"}},"TCP库使用工作池来提高性能并保护您的服务器。",-1),sw={style:{"text-align":"center"}},iw={href:"https://github.com/anacrolix/utp",target:"_blank",rel:"noopener noreferrer"},aw=t("td",{style:{"text-align":"center"}},"围棋UTP微传输协议的实现。",-1),cw={style:{"text-align":"center"}},_w={href:"https://github.com/songgao/water",target:"_blank",rel:"noopener noreferrer"},hw=t("td",{style:{"text-align":"center"}},"简单的TUN / TAP库。",-1),dw={style:{"text-align":"center"}},gw={href:"https://github.com/pions/webrtc",target:"_blank",rel:"noopener noreferrer"},uw=t("td",{style:{"text-align":"center"}},"WebRTC API的纯Go实现。",-1),pw={style:{"text-align":"center"}},yw={href:"https://github.com/masterzen/winrm",target:"_blank",rel:"noopener noreferrer"},xw=t("td",{style:{"text-align":"center"}},"进入WinRM客户端以在Windows计算机上远程执行命令。",-1),bw={style:{"text-align":"center"}},fw={href:"https://github.com/xfxdev/xtcp",target:"_blank",rel:"noopener noreferrer"},mw=t("td",{style:{"text-align":"center"}},"具有同步全双工通信，安全关闭，自定义协议的TCP Server Framework。",-1),kw=t("ul",null,[t("li",null,[e("视频"),t("br"),t("a",{name:"视频"}),e(),t("a",{name:"视频"})])],-1),Gw=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"包"),t("th",{style:{"text-align":"center"}},"说明")])],-1),Ew={style:{"text-align":"center"}},ww={href:"https://github.com/asticode/go-astisub",target:"_blank",rel:"noopener noreferrer"},Tw=t("td",{style:{"text-align":"center"}},"在GO中处理字幕（.srt，.stl，.ttml，.webvtt，.ssa / .ass，图文电视，.smi等）。",-1),Pw={style:{"text-align":"center"}},Aw={href:"https://github.com/asticode/go-astits",target:"_blank",rel:"noopener noreferrer"},Sw=t("td",{style:{"text-align":"center"}},"在GO中本地解析和解复用MPEG传输流（.ts）。",-1),vw={style:{"text-align":"center"}},Cw={href:"https://github.com/quangngotan95/go-m3u8",target:"_blank",rel:"noopener noreferrer"},Mw=t("td",{style:{"text-align":"center"}},"Apple m3u8播放列表的解析器和生成器库。",-1),Bw={style:{"text-align":"center"}},Iw={href:"https://github.com/giorgisio/goav",target:"_blank",rel:"noopener noreferrer"},jw=t("td",{style:{"text-align":"center"}},"FFmpeg的综合Go绑定。",-1),qw={style:{"text-align":"center"}},Fw={href:"https://github.com/ziutek/gst",target:"_blank",rel:"noopener noreferrer"},Lw=t("td",{style:{"text-align":"center"}},"GStreamer的绑定。",-1),zw={style:{"text-align":"center"}},Dw={href:"https://github.com/wargarblgarbl/libgosubs",target:"_blank",rel:"noopener noreferrer"},Nw=t("td",{style:{"text-align":"center"}},"go的字幕格式支持。支持.srt，.ttml和.ass。",-1),Ow={style:{"text-align":"center"}},Rw={href:"https://github.com/adrg/libvlc-go",target:"_blank",rel:"noopener noreferrer"},Hw=t("td",{style:{"text-align":"center"}},"libvlc 2.X / 3.X / 4.X的绑定（由VLC媒体播放器使用）。",-1),Uw={style:{"text-align":"center"}},Jw={href:"https://github.com/grafov/m3u8",target:"_blank",rel:"noopener noreferrer"},Qw=t("td",{style:{"text-align":"center"}},"Apple HLS的M3U8播放列表的解析器和生成器库。",-1),Ww={style:{"text-align":"center"}},Vw={href:"https://github.com/korandiz/v4l",target:"_blank",rel:"noopener noreferrer"},Xw=t("td",{style:{"text-align":"center"}},"用Go编写的Linux视频捕获库。",-1),Kw=t("p",null,[t("br"),e(),t("br"),t("a",{name:"推荐书籍"}),e(),t("a",{name:"推荐书籍"})],-1),Zw=t("h2",{id:"开源书籍",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#开源书籍"},[t("span",null,"开源书籍")])],-1),Yw=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"书籍名"),t("th",{style:{"text-align":"center"}},"推荐理由")])],-1),$w={style:{"text-align":"center"}},tT={href:"https://play.golang.org/",target:"_blank",rel:"noopener noreferrer"},eT=t("td",{style:{"text-align":"center"}},"不用搭建本地 Go 环境，在线就编写 Go 的代码",-1),nT={style:{"text-align":"center"}},rT={href:"https://github.com/astaxie/go-best-practice",target:"_blank",rel:"noopener noreferrer"},oT=t("td",{style:{"text-align":"center"}},"作者是著名的 Go 开源项目 beego 的作者，他的最佳实践非常值得阅读",-1),lT={style:{"text-align":"center"}},sT={href:"https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/preface.md",target:"_blank",rel:"noopener noreferrer"},iT=t("td",{style:{"text-align":"center"}},"跟前面一本书作者是同一位，讲的是web开发",-1),aT={style:{"text-align":"center"}},cT={href:"https://books.studygolang.com/The-Golang-Standard-Library-by-Example",target:"_blank",rel:"noopener noreferrer"},_T=t("td",{style:{"text-align":"center"}},"对标准库的介绍",-1),hT={style:{"text-align":"center"}},dT={href:"https://github.com/Unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md",target:"_blank",rel:"noopener noreferrer"},gT=t("td",{style:{"text-align":"center"}},"比较适合新手，内容相对基础一些",-1),uT={style:{"text-align":"center"}},pT={href:"http://shouce.jb51.net/gopl-zh/ch1/ch1-01.html",target:"_blank",rel:"noopener noreferrer"},yT=t("td",{style:{"text-align":"center"}},"书如其名",-1),xT={style:{"text-align":"center"}},bT={href:"https://studygolang.com/topics",target:"_blank",rel:"noopener noreferrer"},fT=t("td",{style:{"text-align":"center"}},"找对圈子，学的更快",-1),mT={style:{"text-align":"center"}},kT={href:"https://www.runoob.com/go/go-environment.html",target:"_blank",rel:"noopener noreferrer"},GT=t("td",{style:{"text-align":"center"}},"这个网站非常适合快速上手某门语言",-1),ET={style:{"text-align":"center"}},wT={href:"https://chai2010.cn/advanced-go-programming-book",target:"_blank",rel:"noopener noreferrer"},TT=t("td",{style:{"text-align":"center"}},"内容适合进阶",-1),PT={style:{"text-align":"center"}},AT={href:"https://golang.design/under-the-hood/",target:"_blank",rel:"noopener noreferrer"},ST=t("td",{style:{"text-align":"center"}},"欧神出品，虽然号称进度只有9.9%/100%，但不妨碍它的优秀，值得一看",-1),vT={style:{"text-align":"center"}},CT={href:"https://github.com/senghoo/golang-design-pattern",target:"_blank",rel:"noopener noreferrer"},MT=t("td",{style:{"text-align":"center"}},"设计模式 Golang实现，《研磨设计模式》的golang实现",-1),BT={style:{"text-align":"center"}},IT={href:"https://github.com/ffhelicopter/Go42",target:"_blank",rel:"noopener noreferrer"},jT=t("td",{style:{"text-align":"center"}},"可以对比查漏补缺",-1),qT=o('<p><a name="视频教程"></a> <a name="视频教程"></a></p><h2 id="视频网课" tabindex="-1"><a class="header-anchor" href="#视频网课"><span>视频网课</span></a></h2><p>关注<a href="#%E5%85%AC%E4%BC%97%E5%8F%B7">公众号</a> 回复【教程】即可在知识的海洋里呛水。</p><br><br><br><p><a name="公众号"></a> <a name="公众号"></a></p><p>欢迎关注公众号:【小白debug】<br><img src="https://cdn.jsdelivr.net/gh/xiaobaiTech/image/小白debug动图二维码.gif" alt="" loading="lazy"></p><figure><img src="https://cdn.jsdelivr.net/gh/zhaolunallen/picture/2021-1-10/1610269930614-640.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',9);function FT(LT,zT){const n=s("ExternalLinkIcon");return i(),a("div",null,[_,t("p",null,[t("a",h,[e("脑图持续不断更新中，在线查看地址"),r(n)]),d,e(" 后续文章和内容会不断更新到 "),t("a",g,[e("github项目"),r(n)]),e(" 中，欢迎关注。")]),u,e(" 大家好，我是小白。大家知道，我一直以来都是golang的忠实粉丝，在学习和参与面试的过程中遇到过很多golang的问题。 "),p,t("ul",null,[t("li",null,[e("不满足于看八股文，可以尝试拿着岗位要求来进行ai押题。"),t("a",y,[e("押题宝"),r(n)])]),t("li",null,[e("基础不牢，缺乏实战项目，"),x,e("？后端训练营了解一下。"),t("a",b,[e("后端训练营介绍文档"),r(n)])]),t("li",null,[e("欢迎大家访问我的"),f,e(" [点这里]("),t("a",m,[e("https://xiaobaidebug.top/"),r(n)]),e("]("),t("a",k,[e("https://xiaobaidebug.top/"),r(n)]),e(")。")]),t("li",null,[e("欢迎大家访问我的"),G,e(),t("a",E,[e("点这里"),r(n)]),e(" 。")]),w]),T,t("ul",null,[t("li",null,[P,t("ul",null,[t("li",null,[A,t("ul",null,[t("li",null,[t("a",S,[e("Golang开发新手常犯的50个错误"),r(n)])])])]),t("li",null,[v,t("ul",null,[t("li",null,[t("a",C,[e("连nil切片和空切片一不一样都不清楚？那BAT面试官只好让你回去等通知了。"),r(n)])]),t("li",null,[t("a",M,[e("golang面试题：字符串转成byte数组，会发生内存拷贝吗？"),r(n)])]),t("li",null,[t("a",B,[e("golang面试题：翻转含有中文、数字、英文字母的字符串"),r(n)])]),t("li",null,[t("a",I,[e("golang面试题：拷贝大切片一定比小切片代价大吗？"),r(n)])]),j,q,F,L,z,D,N,O,t("li",null,[t("a",R,[e("golang面试题：json包变量不加tag会怎么样？"),r(n)])]),t("li",null,[t("a",H,[e("golang面试题：reflect（反射包）如何获取字段tag？为什么json包不能导出私有变量的tag？"),r(n)])]),U])]),t("li",null,[J,t("ul",null,[t("li",null,[t("a",Q,[e("昨天那个在for循环里append元素的同事，今天还在么？"),r(n)])]),t("li",null,[t("a",W,[e("golang面试官：for select时，如果通道已经关闭会怎么样？如果只有一个case呢？"),r(n)])]),V,X,K,Z,Y,$,tt])])])]),t("li",null,[et,t("ul",null,[t("li",null,[t("p",null,[e("包管理"),nt,t("a",rt,[e("学go mod就够了！"),r(n)])])]),t("li",null,[ot,t("ul",null,[t("li",null,[t("a",lt,[e("golang面试题：怎么避免内存逃逸？"),r(n)])]),t("li",null,[t("a",st,[e("golang面试题：简单聊聊内存逃逸？"),r(n)])]),t("li",null,[t("a",it,[e("给大家丢脸了，用了三年golang，我还是没答对这道内存泄漏题"),r(n)])]),at,ct,_t,t("li",null,[t("a",ht,[e("你一定会遇到的内存回收策略导致的疑似内存泄漏的问题"),r(n)])]),dt,gt])]),t("li",null,[ut,t("ul",null,[t("li",null,[t("a",pt,[e("golang面试题：对已经关闭的的chan进行读写，会怎么样？为什么？"),r(n)])]),t("li",null,[t("a",yt,[e("golang面试题：对未初始化的的chan进行读写，会怎么样？为什么？"),r(n)])]),xt,bt,ft,mt,kt,Gt,Et,wt,Tt])]),t("li",null,[Pt,t("ul",null,[t("li",null,[t("a",At,[e("golang面试题：能说说uintptr和unsafe.Pointer的区别吗？"),r(n)])]),t("li",null,[t("a",St,[e("golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？"),r(n)])]),vt,Ct,Mt,Bt,t("li",null,[t("a",It,[e("GMP模型"),r(n)])]),t("li",null,[t("a",jt,[e("动图图解，GMP里为什么要有P"),r(n)])]),qt,Ft,Lt,zt,Dt,Nt,Ot,t("li",null,[t("a",Rt,[e("go栈扩容和栈缩容，连续栈的缺点"),r(n)])]),Ht,t("li",null,[t("a",Ut,[e("golang隐藏技能:怎么访问私有成员"),r(n)])]),Jt])]),t("li",null,[Qt,t("ul",null,[t("li",null,[t("a",Wt,[e("trace"),r(n)])]),t("li",null,[t("a",Vt,[e("pprof"),r(n)])]),Xt,Kt])]),t("li",null,[Zt,t("ul",null,[t("li",null,[t("a",Yt,[e("sync.map"),r(n)])]),t("li",null,[e("net/http "),t("ul",null,[t("li",null,[t("a",$t,[e("i/o timeout ， 希望你不要踩到这个net/http包的坑"),r(n)])])])]),t("li",null,[t("a",te,[e("mutex"),r(n)])]),t("li",null,[t("a",ee,[e("channel"),r(n)])]),t("li",null,[t("a",ne,[e("context"),r(n)])]),t("li",null,[t("a",re,[e("select实现原理"),r(n)])]),oe,t("li",null,[t("a",le,[e("内存管理"),r(n)])]),t("li",null,[t("a",se,[e("GC垃圾回收"),r(n)])]),t("li",null,[t("a",ie,[e("timer"),r(n)])])])]),t("li",null,[ae,t("ul",null,[t("li",null,[t("a",ce,[e("汇编入门"),r(n)])])])]),_e,he,t("li",null,[de,t("ul",null,[t("li",null,[t("a",ge,[e("mysql建表语句转golang struct"),r(n)])]),t("li",null,[t("a",ue,[e("json转golang struct"),r(n)])]),t("li",null,[t("a",pe,[e("toml转golang struct"),r(n)])]),t("li",null,[t("a",ye,[e("yaml转golang struct"),r(n)])])])])])]),t("li",null,[xe,t("ul",null,[t("li",null,[t("a",be,[e("漫画图解HTTP知识点+面试题"),r(n)])]),t("li",null,[t("a",fe,[e("TCP粘包 数据包：我只是犯了每个数据包都会犯的错"),r(n)])]),t("li",null,[t("a",me,[e("30张图带你搞懂！路由器，集线器，交换机，网桥，光猫有啥区别？"),r(n)])]),t("li",null,[t("a",ke,[e("既然IP层会分片，为什么TCP层也还要分段？"),r(n)])]),t("li",null,[t("a",Ge,[e("断网了，还能ping通 127.0.0.1 吗？为什么？"),r(n)])]),t("li",null,[t("a",Ee,[e("连接一个 IP 不存在的主机时，握手过程是怎样的？"),r(n)])]),t("li",null,[t("a",we,[e("动图图解！代码执行send成功后，数据就发出去了吗？"),r(n)])]),t("li",null,[t("a",Te,[e("活久见！TCP两次挥手，你见过吗？那四次握手呢？"),r(n)])]),t("li",null,[t("a",Pe,[e("动图图解！收到RST，就一定会断开TCP连接吗？"),r(n)])]),Ae,t("li",null,[t("a",Se,[e("来了来了！小白图解网络电子书和博客都来啦！"),r(n)])]),ve])]),Ce,t("li",null,[Me,t("ul",null,[t("li",null,[t("a",Be,[e("程序员防猝死指南"),r(n)])]),t("li",null,[t("a",Ie,[e("妙啊！程序猿的第一本互联网黑话指南"),r(n)])]),t("li",null,[t("a",je,[e("我感觉，我可能要拿图灵奖了。。。"),r(n)])]),t("li",null,[t("a",qe,[e("爷青回！最近很火的朋友圈怀旧小电视源码来啦！看到最后一个视频我大呼好家伙！"),r(n)])]),t("li",null,[t("a",Fe,[e("我要开留言啦！"),r(n)])])])]),Le]),ze,t("table",null,[De,t("tbody",null,[t("tr",null,[Ne,t("td",Oe,[t("a",Re,[e("github.com/jinzhu/gorm"),r(n)]),e(),t("a",He,[e("github.com/go-xorm/xorm"),r(n)])])]),t("tr",null,[Ue,t("td",Je,[t("a",Qe,[e("github.com/olivere/elastic"),r(n)])])]),t("tr",null,[We,t("td",Ve,[t("a",Xe,[e("github.com/apache/rocketmq-client-go/v2"),r(n)])])]),t("tr",null,[Ke,t("td",Ze,[t("a",Ye,[e("github.com/streadway/amqp"),r(n)])])]),t("tr",null,[$e,t("td",tn,[t("a",en,[e("github.com/go-redis/redis"),r(n)])])]),t("tr",null,[nn,t("td",rn,[t("a",on,[e("github.com/coreos/etcd/clientv3"),r(n)])])]),t("tr",null,[ln,t("td",sn,[t("a",an,[e("https://github.com/Shopify/sarama"),r(n)]),e(),t("a",cn,[e("https://github.com/bsm/sarama-cluster"),r(n)])])]),t("tr",null,[_n,t("td",hn,[t("a",dn,[e("github.com/360EntSecGroup-Skylar/excelize"),r(n)])])]),t("tr",null,[gn,t("td",un,[t("a",pn,[e("golang.org/x/tools/cmd/present"),r(n)])])]),t("tr",null,[yn,t("td",xn,[t("a",bn,[e("https://github.com/ajstarks/svgo"),r(n)])])]),t("tr",null,[fn,t("td",mn,[t("a",kn,[e("https://github.com/AndreasBriese/bbloom"),r(n)])])]),t("tr",null,[Gn,t("td",En,[t("a",wn,[e("https://github.com/bitly/go-simplejson"),r(n)])])]),t("tr",null,[Tn,t("td",Pn,[t("a",An,[e("https://github.com/bluele/gcache "),r(n)]),e(),t("a",Sn,[e("https://github.com/hashicorp/golang-lru "),r(n)])])]),t("tr",null,[vn,t("td",Cn,[t("a",Mn,[e("https://github.com/bouk/monkey "),r(n)])])]),t("tr",null,[Bn,t("td",In,[t("a",jn,[e("https://github.com/toml-lang/toml "),r(n)]),e(),t("a",qn,[e("https://github.com/naoina/toml "),r(n)])])]),t("tr",null,[Fn,t("td",Ln,[t("a",zn,[e("https://github.com/go-yaml/yaml "),r(n)])])]),t("tr",null,[Dn,t("td",Nn,[t("a",On,[e("https://github.com/spf13/viper "),r(n)])])]),t("tr",null,[Rn,t("td",Hn,[t("a",Un,[e("https://github.com/etcd-io/bbolt "),r(n)])])]),t("tr",null,[Jn,t("td",Qn,[t("a",Wn,[e("https://github.com/Dai0522/workpool "),r(n)])])]),t("tr",null,[Vn,t("td",Xn,[t("a",Kn,[e("https://github.com/ivpusic/grpool "),r(n)])])]),t("tr",null,[Zn,t("td",Yn,[t("a",$n,[e("https://github.com/davecgh/go-spew "),r(n)])])]),t("tr",null,[tr,t("td",er,[t("a",nr,[e("https://github.com/eapache/queue "),r(n)])])]),t("tr",null,[rr,t("td",or,[t("a",lr,[e("https://github.com/go-ego/gpy "),r(n)])])]),t("tr",null,[sr,t("td",ir,[t("a",ar,[e("https://github.com/go-ego/gse "),r(n)])])]),t("tr",null,[cr,t("td",_r,[t("a",hr,[e("https://github.com/go-ego/riot "),r(n)])])]),t("tr",null,[dr,t("td",gr,[t("a",ur,[e("https://github.com/go-ego/cedar "),r(n)])])]),t("tr",null,[pr,t("td",yr,[t("a",xr,[e("https://github.com/gorilla/sessions "),r(n)])])]),t("tr",null,[br,t("td",fr,[t("a",mr,[e("https://github.com/gorilla/mux "),r(n)])])]),t("tr",null,[kr,t("td",Gr,[t("a",Er,[e("https://github.com/gorilla/websocket "),r(n)])])]),t("tr",null,[wr,t("td",Tr,[t("a",Pr,[e("https://github.com/gorilla/handlers "),r(n)])])]),t("tr",null,[Ar,t("td",Sr,[t("a",vr,[e("https://github.com/gorilla/csrf "),r(n)])])]),t("tr",null,[Cr,t("td",Mr,[t("a",Br,[e("https://github.com/gorilla/context "),r(n)])])]),t("tr",null,[Ir,t("td",jr,[t("a",qr,[e("https://github.com/grokify/html-strip-tags-go "),r(n)])])]),t("tr",null,[Fr,t("td",Lr,[t("a",zr,[e("https://github.com/microcosm-cc/bluemonday "),r(n)])])]),t("tr",null,[Dr,t("td",Nr,[t("a",Or,[e("https://github.com/ipipdotnet/ipdb-go "),r(n)])])]),t("tr",null,[Rr,t("td",Hr,[t("a",Ur,[e("https://github.com/jaytaylor/html2text "),r(n)])])]),t("tr",null,[Jr,t("td",Qr,[t("a",Wr,[e("https://github.com/jtolds/gls "),r(n)])])]),t("tr",null,[Vr,t("td",Xr,[t("a",Kr,[e("https://github.com/mgutz/ansi"),r(n)])])]),t("tr",null,[Zr,t("td",Yr,[t("a",$r,[e("https://github.com/olekukonko/tablewriter"),r(n)])])]),t("tr",null,[to,t("td",eo,[t("a",no,[e("https://github.com/modern-go/reflect2"),r(n)])])]),t("tr",null,[ro,t("td",oo,[t("a",lo,[e("https://github.com/modern-go/msgfmt"),r(n)])])]),t("tr",null,[so,t("td",io,[t("a",ao,[e("https://github.com/modern-go/concurrent"),r(n)])])]),t("tr",null,[co,t("td",_o,[t("a",ho,[e("https://github.com/mohae/deepcopy"),r(n)])])]),t("tr",null,[go,t("td",uo,[t("a",po,[e("https://github.com/spf13/cast"),r(n)])])]),t("tr",null,[yo,t("td",xo,[t("a",bo,[e("https://github.com/mvdan/xurls"),r(n)])])]),t("tr",null,[fo,t("td",mo,[t("a",ko,[e("https://godoc.org/github.com/naoina/go-stringutil"),r(n)])])]),t("tr",null,[Go,t("td",Eo,[t("a",wo,[e("https://github.com/pmezard/go-difflib"),r(n)])])]),t("tr",null,[To,t("td",Po,[t("a",Ao,[e("https://github.com/satori/go.uuid"),r(n)]),e(),t("a",So,[e("https://github.com/snluu/uuid"),r(n)])])]),t("tr",null,[vo,t("td",Co,[t("a",Mo,[e("https://github.com/ssor/bom"),r(n)])])]),t("tr",null,[Bo,t("td",Io,[t("a",jo,[e("https://github.com/nfnt/resize"),r(n)])])]),t("tr",null,[qo,t("td",Fo,[t("a",Lo,[e("https://github.com/otokaze/mock"),r(n)])])]),t("tr",null,[zo,t("td",Do,[t("a",No,[e("https://github.com/rcrowley/go-metrics"),r(n)])])]),t("tr",null,[Oo,t("td",Ro,[t("a",Ho,[e("https://github.com/samuel/go-zookeeper"),r(n)])])]),t("tr",null,[Uo,t("td",Jo,[t("a",Qo,[e("https://github.com/samuel/go-thrift"),r(n)])])]),t("tr",null,[Wo,t("td",Vo,[t("a",Xo,[e("https://github.com/shirou/mqttcli"),r(n)])])]),t("tr",null,[Ko,t("td",Zo,[t("a",Yo,[e("https://github.com/tsuna/gohbase"),r(n)])])]),t("tr",null,[$o,t("td",tl,[t("a",el,[e("https://github.com/rcrowley/go-metrics"),r(n)])])]),t("tr",null,[nl,t("td",rl,[t("a",ol,[e("https://github.com/deathowl/go-metrics-prometheus"),r(n)])])]),t("tr",null,[ll,t("td",sl,[t("a",il,[e("https://github.com/shirou/gopsutil"),r(n)])])]),t("tr",null,[al,t("td",cl,[t("a",_l,[e("https://github.com/shopspring/decimal"),r(n)])])]),t("tr",null,[hl,t("td",dl,[t("a",gl,[e("https://github.com/sirupsen/logrus"),r(n)])])]),t("tr",null,[ul,t("td",pl,[t("a",yl,[e("https://github.com/urfave/cli"),r(n)])])]),t("tr",null,[xl,t("td",bl,[t("a",fl,[e("https://github.com/spf13/cobra"),r(n)])])])])]),ml,t("table",null,[kl,t("tbody",null,[t("tr",null,[Gl,t("td",El,[t("a",wl,[e("github.com/gin-gonic/gin"),r(n)])]),Tl]),t("tr",null,[Pl,t("td",Al,[t("a",Sl,[e("github.com/beego/beego"),r(n)])]),vl]),t("tr",null,[Cl,t("td",Ml,[t("a",Bl,[e("github.com/go-kratos/kratos"),r(n)])]),Il]),t("tr",null,[jl,t("td",ql,[t("a",Fl,[e("github.com/pingcap/tidb"),r(n)])]),Ll])])]),zl,t("table",null,[Dl,t("tbody",null,[Nl,Ol,Rl,Hl,Ul,Jl,Ql,Wl,Vl,Xl,Kl,Zl,Yl,$l,ts,es,ns,rs,os,ls,ss,is,as,cs,_s,hs,ds,gs,us,ps,ys,xs,bs,fs,ms,ks,Gs,Es,ws,Ts,Ps,As,Ss,vs,Cs,Ms,Bs,Is,js,qs,Fs,Ls,zs,Ds,Ns,Os,Rs,Hs,Us,Js,t("tr",null,[Qs,Ws,t("td",Vs,[e("实现了对"),t("a",Xs,[e("Mach-O对象文件"),r(n)]),e("的访问")])]),Ks,Zs,Ys,$s,ti,ei,ni,ri,oi,li,si,ii,ai,ci,_i,hi,di,gi,ui,pi,yi,xi,bi,fi,mi,ki,Gi,Ei,wi,Ti,Pi,Ai,Si,vi,Ci,Mi,Bi,Ii,ji,qi,Fi,Li,zi,Di,Ni,Oi,Ri,Hi,Ui,Ji,Qi,Wi,Vi,Xi,Ki,Zi,Yi,$i,ta,ea,na,ra,oa,la])]),sa,ia,t("table",null,[aa,t("tbody",null,[t("tr",null,[t("td",ca,[t("a",_a,[e("EasyMIDI"),r(n)])]),ha]),t("tr",null,[t("td",da,[t("a",ga,[e("flac"),r(n)])]),ua]),t("tr",null,[t("td",pa,[t("a",ya,[e("gaad"),r(n)])]),xa]),t("tr",null,[t("td",ba,[t("a",fa,[e("go-sox"),r(n)])]),ma]),t("tr",null,[t("td",ka,[t("a",Ga,[e("go_mediainfo"),r(n)])]),Ea]),t("tr",null,[t("td",wa,[t("a",Ta,[e("gosamplerate"),r(n)])]),Pa]),t("tr",null,[t("td",Aa,[t("a",Sa,[e("id3v2"),r(n)])]),va]),t("tr",null,[t("td",Ca,[t("a",Ma,[e("malgo"),r(n)])]),Ba]),t("tr",null,[t("td",Ia,[t("a",ja,[e("minimp3"),r(n)])]),qa]),t("tr",null,[t("td",Fa,[t("a",La,[e("mix"),r(n)])]),za]),t("tr",null,[t("td",Da,[t("a",Na,[e("mp3"),r(n)])]),Oa]),t("tr",null,[t("td",Ra,[t("a",Ha,[e("music-theory"),r(n)])]),Ua]),t("tr",null,[t("td",Ja,[t("a",Qa,[e("Oto"),r(n)])]),Wa]),t("tr",null,[t("td",Va,[t("a",Xa,[e("PortAudio"),r(n)])]),Ka]),t("tr",null,[t("td",Za,[t("a",Ya,[e("portmidi"),r(n)])]),$a]),t("tr",null,[t("td",tc,[t("a",ec,[e("taglib"),r(n)])]),nc]),t("tr",null,[t("td",rc,[t("a",oc,[e("vorbis"),r(n)])]),lc]),t("tr",null,[t("td",sc,[t("a",ic,[e("waveform"),r(n)])]),ac])])]),cc,t("table",null,[_c,t("tbody",null,[t("tr",null,[t("td",hc,[t("a",dc,[e("algorithms"),r(n)])]),gc]),t("tr",null,[t("td",uc,[t("a",pc,[e("binpacker"),r(n)])]),yc]),t("tr",null,[t("td",xc,[t("a",bc,[e("bit"),r(n)])]),fc]),t("tr",null,[t("td",mc,[t("a",kc,[e("bitset"),r(n)])]),Gc]),t("tr",null,[t("td",Ec,[t("a",wc,[e("bloom"),r(n)])]),Tc]),t("tr",null,[t("td",Pc,[t("a",Ac,[e("bloom"),r(n)])]),Sc]),t("tr",null,[t("td",vc,[t("a",Cc,[e("boomfilters"),r(n)])]),Mc]),t("tr",null,[t("td",Bc,[t("a",Ic,[e("concurrent-writer"),r(n)])]),jc]),t("tr",null,[t("td",qc,[t("a",Fc,[e("conjungo"),r(n)])]),Lc]),t("tr",null,[t("td",zc,[t("a",Dc,[e("count-min-log"),r(n)])]),Nc]),t("tr",null,[t("td",Oc,[t("a",Rc,[e("crunch"),r(n)])]),Hc]),t("tr",null,[t("td",Uc,[t("a",Jc,[e("cuckoofilter"),r(n)])]),Qc]),t("tr",null,[t("td",Wc,[t("a",Vc,[e("deque"),r(n)])]),Xc]),t("tr",null,[t("td",Kc,[t("a",Zc,[e("deque"),r(n)])]),Yc]),t("tr",null,[t("td",$c,[t("a",t_,[e("dict"),r(n)])]),e_]),t("tr",null,[t("td",n_,[t("a",r_,[e("encoding"),r(n)])]),o_]),t("tr",null,[t("td",l_,[t("a",s_,[e("go-adaptive-radix-tree"),r(n)])]),i_]),t("tr",null,[t("td",a_,[t("a",c_,[e("go-datastructures"),r(n)])]),__]),t("tr",null,[t("td",h_,[t("a",d_,[e("go-ef"),r(n)])]),g_]),t("tr",null,[t("td",u_,[t("a",p_,[e("go-geoindex"),r(n)])]),y_]),t("tr",null,[t("td",x_,[t("a",b_,[e("go-mcache"),r(n)])]),f_]),t("tr",null,[t("td",m_,[t("a",k_,[e("go-rquad"),r(n)])]),G_]),t("tr",null,[t("td",E_,[t("a",w_,[e("gocache"),r(n)])]),T_]),t("tr",null,[t("td",P_,[t("a",A_,[e("goconcurrentqueue"),r(n)])]),S_]),t("tr",null,[t("td",v_,[t("a",C_,[e("gods"),r(n)])]),M_]),t("tr",null,[t("td",B_,[t("a",I_,[e("gofal"),r(n)])]),j_]),t("tr",null,[t("td",q_,[t("a",F_,[e("golang-set"),r(n)])]),L_]),t("tr",null,[t("td",z_,[t("a",D_,[e("goset"),r(n)])]),N_]),t("tr",null,[t("td",O_,[t("a",R_,[e("goskiplist"),r(n)])]),H_]),t("tr",null,[t("td",U_,[t("a",J_,[e("gota"),r(n)])]),Q_]),t("tr",null,[t("td",W_,[t("a",V_,[e("hide"),r(n)])]),X_]),t("tr",null,[t("td",K_,[t("a",Z_,[e("hilbert"),r(n)])]),Y_]),t("tr",null,[t("td",$_,[t("a",th,[e("hyperloglog"),r(n)])]),eh]),t("tr",null,[t("td",nh,[t("a",rh,[e("iter"),r(n)])]),oh]),t("tr",null,[t("td",lh,[t("a",sh,[e("levenshtein"),r(n)])]),ih]),t("tr",null,[t("td",ah,[t("a",ch,[e("levenshtein"),r(n)])]),_h]),t("tr",null,[t("td",hh,[t("a",dh,[e("mafsa"),r(n)])]),gh]),t("tr",null,[t("td",uh,[t("a",ph,[e("merkletree"),r(n)])]),yh]),t("tr",null,[t("td",xh,[t("a",bh,[e("mspm"),r(n)])]),fh]),t("tr",null,[t("td",mh,[t("a",kh,[e("null"),r(n)])]),Gh]),t("tr",null,[t("td",Eh,[t("a",wh,[e("parsefields"),r(n)])]),Th]),t("tr",null,[t("td",Ph,[t("a",Ah,[e("pipeline"),r(n)])]),Sh]),t("tr",null,[t("td",vh,[t("a",Ch,[e("ptrie"),r(n)])]),Mh]),t("tr",null,[t("td",Bh,[t("a",Ih,[e("remember-go"),r(n)])]),jh]),t("tr",null,[t("td",qh,[t("a",Fh,[e("ring"),r(n)])]),Lh]),t("tr",null,[t("td",zh,[t("a",Dh,[e("roaring"),r(n)])]),Nh]),t("tr",null,[t("td",Oh,[t("a",Rh,[e("set"),r(n)])]),Hh]),t("tr",null,[t("td",Uh,[t("a",Jh,[e("skiplist"),r(n)])]),Qh]),t("tr",null,[t("td",Wh,[t("a",Vh,[e("skiplist"),r(n)])]),Xh]),t("tr",null,[t("td",Kh,[t("a",Zh,[e("timedmap"),r(n)])]),Yh]),t("tr",null,[t("td",$h,[t("a",td,[e("treap"),r(n)])]),ed]),t("tr",null,[t("td",nd,[t("a",rd,[e("trie"),r(n)])]),od]),t("tr",null,[t("td",ld,[t("a",sd,[e("ttlcache"),r(n)])]),id]),t("tr",null,[t("td",ad,[t("a",cd,[e("typ"),r(n)])]),_d]),t("tr",null,[t("td",hd,[t("a",dd,[e("willf/bloom"),r(n)])]),gd])])]),ud,t("table",null,[pd,t("tbody",null,[t("tr",null,[t("td",yd,[t("a",xd,[e("celeriac"),r(n)])]),bd]),t("tr",null,[t("td",fd,[t("a",md,[e("consistent"),r(n)])]),kd]),t("tr",null,[t("td",Gd,[t("a",Ed,[e("dht"),r(n)])]),wd]),t("tr",null,[t("td",Td,[t("a",Pd,[e("digota"),r(n)])]),Ad]),t("tr",null,[t("td",Sd,[t("a",vd,[e("dot"),r(n)])]),Cd]),t("tr",null,[t("td",Md,[t("a",Bd,[e("doublejump"),r(n)])]),Id]),t("tr",null,[t("td",jd,[t("a",qd,[e("dragonboat"),r(n)])]),Fd]),t("tr",null,[t("td",Ld,[t("a",zd,[e("drmaa"),r(n)])]),Dd]),t("tr",null,[t("td",Nd,[t("a",Od,[e("dynamolock"),r(n)])]),Rd]),t("tr",null,[t("td",Hd,[t("a",Ud,[e("dynatomic"),r(n)])]),Jd]),t("tr",null,[t("td",Qd,[t("a",Wd,[e("emitter-io"),r(n)])]),Vd]),t("tr",null,[t("td",Xd,[t("a",Kd,[e("flowgraph"),r(n)])]),Zd]),t("tr",null,[t("td",Yd,[t("a",$d,[e("gleam"),r(n)])]),tg]),t("tr",null,[t("td",eg,[t("a",ng,[e("glow"),r(n)])]),rg]),t("tr",null,[t("td",og,[t("a",lg,[e("go-health"),r(n)])]),sg]),t("tr",null,[t("td",ig,[t("a",ag,[e("go-jump"),r(n)])]),cg]),t("tr",null,[t("td",_g,[t("a",hg,[e("go-kit"),r(n)])]),dg]),t("tr",null,[t("td",gg,[t("a",ug,[e("go-sundheit"),r(n)])]),pg]),t("tr",null,[t("td",yg,[t("a",xg,[e("gorpc"),r(n)])]),bg]),t("tr",null,[t("td",fg,[t("a",mg,[e("grpc-go"),r(n)])]),kg]),t("tr",null,[t("td",Gg,[t("a",Eg,[e("hprose"),r(n)])]),wg]),t("tr",null,[t("td",Tg,[t("a",Pg,[e("jsonrpc"),r(n)])]),Ag]),t("tr",null,[t("td",Sg,[t("a",vg,[e("jsonrpc"),r(n)])]),Cg]),t("tr",null,[t("td",Mg,[t("a",Bg,[e("KrakenD"),r(n)])]),Ig]),t("tr",null,[t("td",jg,[t("a",qg,[e("liftbridge"),r(n)])]),Fg]),t("tr",null,[t("td",Lg,[t("a",zg,[e("micro"),r(n)])]),Dg]),t("tr",null,[t("td",Ng,[t("a",Og,[e("NATS"),r(n)])]),Rg]),t("tr",null,[t("td",Hg,[t("a",Ug,[e("outboxer"),r(n)])]),Jg]),t("tr",null,[t("td",Qg,[t("a",Wg,[e("pglock"),r(n)])]),Vg]),t("tr",null,[t("td",Xg,[t("a",Kg,[e("raft"),r(n)])]),Zg]),t("tr",null,[t("td",Yg,[t("a",$g,[e("raft"),r(n)])]),t1]),t("tr",null,[t("td",e1,[t("a",n1,[e("rain"),r(n)])]),r1]),t("tr",null,[t("td",o1,[t("a",l1,[e("redis-lock"),r(n)])]),s1]),t("tr",null,[t("td",i1,[t("a",a1,[e("resgate"),r(n)])]),c1]),t("tr",null,[t("td",_1,[t("a",h1,[e("ringpop-go"),r(n)])]),d1]),t("tr",null,[t("td",g1,[t("a",u1,[e("rpcx"),r(n)])]),p1]),t("tr",null,[t("td",y1,[t("a",x1,[e("sleuth"),r(n)])]),t("td",b1,[e("用于在HTTP服务之间进行无主p2p自动发现和RPC的库（"),t("a",f1,[e("ZeroMQ"),r(n)]),e("）。")])]),t("tr",null,[t("td",m1,[t("a",k1,[e("tendermint"),r(n)])]),G1]),t("tr",null,[t("td",E1,[t("a",w1,[e("torrent"),r(n)])]),T1])])]),P1,t("table",null,[A1,t("tbody",null,[t("tr",null,[t("td",S1,[t("a",v1,[e("chasquid"),r(n)])]),C1]),t("tr",null,[t("td",M1,[t("a",B1,[e("douceur"),r(n)])]),I1]),t("tr",null,[t("td",j1,[t("a",q1,[e("email"),r(n)])]),F1]),t("tr",null,[t("td",L1,[t("a",z1,[e("go-dkim"),r(n)])]),D1]),t("tr",null,[t("td",N1,[t("a",O1,[e("go-imap"),r(n)])]),R1]),t("tr",null,[t("td",H1,[t("a",U1,[e("go-message"),r(n)])]),J1]),t("tr",null,[t("td",Q1,[t("a",W1,[e("go-premailer"),r(n)])]),V1]),t("tr",null,[t("td",X1,[t("a",K1,[e("go-simple-mail"),r(n)])]),Z1]),t("tr",null,[t("td",Y1,[t("a",$1,[e("Hectane"),r(n)])]),tu]),t("tr",null,[t("td",eu,[t("a",nu,[e("hermes"),r(n)])]),ru]),t("tr",null,[t("td",ou,[t("a",lu,[e("mailchain"),r(n)])]),su]),t("tr",null,[t("td",iu,[t("a",au,[e("mailgun-go"),r(n)])]),cu]),t("tr",null,[t("td",_u,[t("a",hu,[e("MailHog"),r(n)])]),du]),t("tr",null,[t("td",gu,[t("a",uu,[e("SendGrid"),r(n)])]),pu]),t("tr",null,[t("td",yu,[t("a",xu,[e("smtp"),r(n)])]),bu])])]),fu,t("table",null,[mu,t("tbody",null,[t("tr",null,[t("td",ku,[t("a",Gu,[e("anko"),r(n)])]),Eu]),t("tr",null,[t("td",wu,[t("a",Tu,[e("binder"),r(n)])]),t("td",Pu,[e("转到基于"),t("a",Au,[e("gopher-lua"),r(n)]),e("的 Lua绑定库。")])]),t("tr",null,[t("td",Su,[t("a",vu,[e("cel-go"),r(n)])]),Cu]),t("tr",null,[t("td",Mu,[t("a",Bu,[e("expr"),r(n)])]),Iu]),t("tr",null,[t("td",ju,[t("a",qu,[e("gentee"),r(n)])]),Fu]),t("tr",null,[t("td",Lu,[t("a",zu,[e("gisp"),r(n)])]),Du]),t("tr",null,[t("td",Nu,[t("a",Ou,[e("go-duktape"),r(n)])]),Ru]),t("tr",null,[t("td",Hu,[t("a",Uu,[e("go-lua"),r(n)])]),Ju]),t("tr",null,[t("td",Qu,[t("a",Wu,[e("go-php"),r(n)])]),Vu]),t("tr",null,[t("td",Xu,[t("a",Ku,[e("go-python"),r(n)])]),Zu]),t("tr",null,[t("td",Yu,[t("a",$u,[e("golua"),r(n)])]),tp]),t("tr",null,[t("td",ep,[t("a",np,[e("gopher-lua"),r(n)])]),rp]),t("tr",null,[t("td",op,[t("a",lp,[e("gval"),r(n)])]),sp]),t("tr",null,[t("td",ip,[t("a",ap,[e("ngaro"),r(n)])]),cp]),t("tr",null,[t("td",_p,[t("a",hp,[e("otto"),r(n)])]),dp]),t("tr",null,[t("td",gp,[t("a",up,[e("purl"),r(n)])]),pp]),t("tr",null,[t("td",yp,[t("a",xp,[e("tengo"),r(n)])]),bp])])]),fp,t("table",null,[mp,t("tbody",null,[t("tr",null,[t("td",kp,[t("a",Gp,[e("emperror"),r(n)])]),Ep]),t("tr",null,[t("td",wp,[t("a",Tp,[e("errlog"),r(n)])]),Pp]),t("tr",null,[t("td",Ap,[t("a",Sp,[e("errors"),r(n)])]),t("td",vp,[t("a",Cp,[e("下拉更换为标准库的错误包和github.com/pkg/errors。提供各种错误处理原语。"),r(n)])])]),t("tr",null,[t("td",Mp,[t("a",Bp,[e("errors"),r(n)])]),Ip]),t("tr",null,[t("td",jp,[t("a",qp,[e("errors"),r(n)])]),Fp]),t("tr",null,[t("td",Lp,[t("a",zp,[e("errorx"),r(n)])]),Dp]),t("tr",null,[t("td",Np,[t("a",Op,[e("Falcon"),r(n)])]),Rp]),t("tr",null,[t("td",Hp,[t("a",Up,[e("go-multierror"),r(n)])]),Jp]),t("tr",null,[t("td",Qp,[t("a",Wp,[e("tracerr"),r(n)])]),Vp]),t("tr",null,[t("td",Xp,[t("a",Kp,[e("werr"),r(n)])]),Zp])])]),Yp,t("table",null,[$p,t("tbody",null,[t("tr",null,[t("td",ty,[t("a",ey,[e("afero"),r(n)])]),ny]),t("tr",null,[t("td",ry,[t("a",oy,[e("afs"),r(n)])]),ly]),t("tr",null,[t("td",sy,[t("a",iy,[e("bigfile"),r(n)])]),ay]),t("tr",null,[t("td",cy,[t("a",_y,[e("checksum"),r(n)])]),hy]),t("tr",null,[t("td",dy,[t("a",gy,[e("flop"),r(n)])]),t("td",uy,[e("文件操作库，旨在与"),t("a",py,[e("GNU cp"),r(n)]),e("镜像功能奇偶校验。")])]),t("tr",null,[t("td",yy,[t("a",xy,[e("go-csv-tag"),r(n)])]),by]),t("tr",null,[t("td",fy,[t("a",my,[e("go-decent-copy"),r(n)])]),ky]),t("tr",null,[t("td",Gy,[t("a",Ey,[e("go-exiftool"),r(n)])]),wy]),t("tr",null,[t("td",Ty,[t("a",Py,[e("go-gtfs"),r(n)])]),Ay]),t("tr",null,[t("td",Sy,[t("a",vy,[e("notify"),r(n)])]),Cy]),t("tr",null,[t("td",My,[t("a",By,[e("opc"),r(n)])]),Iy]),t("tr",null,[t("td",jy,[t("a",qy,[e("parquet"),r(n)])]),t("td",Fy,[e("读取和写入 "),t("a",Ly,[e("parquet"),r(n)]),e("文件。")])]),t("tr",null,[t("td",zy,[t("a",Dy,[e("pdfcpu"),r(n)])]),Ny]),t("tr",null,[t("td",Oy,[t("a",Ry,[e("skywalker"),r(n)])]),Hy]),t("tr",null,[t("td",Uy,[t("a",Jy,[e("stl"),r(n)])]),Qy]),t("tr",null,[t("td",Wy,[t("a",Vy,[e("tarfs"),r(n)])]),t("td",Xy,[e("tar文件"),t("a",Ky,[Zy,e(" interface"),r(n)]),e("接口的实现。")])]),t("tr",null,[t("td",Yy,[t("a",$y,[e("vfs"),r(n)])]),tx])])]),ex,t("table",null,[nx,t("tbody",null,[t("tr",null,[t("td",rx,[t("a",ox,[e("accounting"),r(n)])]),lx]),t("tr",null,[t("td",sx,[t("a",ix,[e("currency"),r(n)])]),ax]),t("tr",null,[t("td",cx,[t("a",_x,[e("decimal"),r(n)])]),hx]),t("tr",null,[t("td",dx,[t("a",gx,[e("go-finance"),r(n)])]),ux]),t("tr",null,[t("td",px,[t("a",yx,[e("go-finance"),r(n)])]),xx]),t("tr",null,[t("td",bx,[t("a",fx,[e("go-finance"),r(n)])]),mx]),t("tr",null,[t("td",kx,[t("a",Gx,[e("go-money"),r(n)])]),Ex]),t("tr",null,[t("td",wx,[t("a",Tx,[e("ofxgo"),r(n)])]),Px]),t("tr",null,[t("td",Ax,[t("a",Sx,[e("orderbook"),r(n)])]),vx]),t("tr",null,[t("td",Cx,[t("a",Mx,[e("techan"),r(n)])]),Bx]),t("tr",null,[t("td",Ix,[t("a",jx,[e("transaction"),r(n)])]),qx]),t("tr",null,[t("td",Fx,[t("a",Lx,[e("vat"),r(n)])]),zx])])]),Dx,t("table",null,[Nx,t("tbody",null,[t("tr",null,[t("td",Ox,[t("a",Rx,[e("Azul3D"),r(n)])]),Hx]),t("tr",null,[t("td",Ux,[t("a",Jx,[e("Ebiten"),r(n)])]),Qx]),t("tr",null,[t("td",Wx,[t("a",Vx,[e("engo"),r(n)])]),Xx]),t("tr",null,[t("td",Kx,[t("a",Zx,[e("g3n"),r(n)])]),Yx]),t("tr",null,[t("td",$x,[t("a",tb,[e("GarageEngine"),r(n)])]),eb]),t("tr",null,[t("td",nb,[t("a",rb,[e("glop"),r(n)])]),ob]),t("tr",null,[t("td",lb,[t("a",sb,[e("go-astar"),r(n)])]),ib]),t("tr",null,[t("td",ab,[t("a",cb,[e("go-collada"),r(n)])]),_b]),t("tr",null,[t("td",hb,[t("a",db,[e("go-sdl2"),r(n)])]),t("td",gb,[t("a",ub,[e("Simple DirectMedia Layer"),r(n)]),e("的 Go绑定。")])]),t("tr",null,[t("td",pb,[t("a",yb,[e("go3d"),r(n)])]),xb]),t("tr",null,[t("td",bb,[t("a",fb,[e("gonet"),r(n)])]),mb]),t("tr",null,[t("td",kb,[t("a",Gb,[e("goworld"),r(n)])]),Eb]),t("tr",null,[t("td",wb,[t("a",Tb,[e("Leaf"),r(n)])]),Pb]),t("tr",null,[t("td",Ab,[t("a",Sb,[e("nano"),r(n)])]),vb]),t("tr",null,[t("td",Cb,[t("a",Mb,[e("Oak"),r(n)])]),Bb]),t("tr",null,[t("td",Ib,[t("a",jb,[e("Pitaya"),r(n)])]),qb]),t("tr",null,[t("td",Fb,[t("a",Lb,[e("Pixel"),r(n)])]),zb]),t("tr",null,[t("td",Db,[t("a",Nb,[e("raylib-go"),r(n)])]),Ob]),t("tr",null,[t("td",Rb,[t("a",Hb,[e("termloop"),r(n)])]),Ub])])]),Jb,t("table",null,[Qb,t("tbody",null,[t("tr",null,[t("td",Wb,[t("a",Vb,[e("geocache"),r(n)])]),Xb]),t("tr",null,[t("td",Kb,[t("a",Zb,[e("geoserver"),r(n)])]),Yb]),t("tr",null,[t("td",$b,[t("a",tf,[e("gismanager"),r(n)])]),ef]),t("tr",null,[t("td",nf,[t("a",rf,[e("osm"),r(n)])]),of]),t("tr",null,[t("td",lf,[t("a",sf,[e("pbf"),r(n)])]),af]),t("tr",null,[t("td",cf,[t("a",_f,[e("S2 geometry"),r(n)])]),hf]),t("tr",null,[t("td",df,[t("a",gf,[e("Tile38"),r(n)])]),uf]),t("tr",null,[t("td",pf,[t("a",yf,[e("WGS84"),r(n)])]),xf])])]),bf,t("table",null,[ff,t("tbody",null,[t("tr",null,[t("td",mf,[t("a",kf,[e("c4go"),r(n)])]),Gf]),t("tr",null,[t("td",Ef,[t("a",wf,[e("f4go"),r(n)])]),Tf]),t("tr",null,[t("td",Pf,[t("a",Af,[e("gopherjs"),r(n)])]),Sf]),t("tr",null,[t("td",vf,[t("a",Cf,[e("llgo"),r(n)])]),Mf]),t("tr",null,[t("td",Bf,[t("a",If,[e("tardisgo"),r(n)])]),jf])])]),qf,t("table",null,[Ff,t("tbody",null,[t("tr",null,[t("td",Lf,[t("a",zf,[e("ants"),r(n)])]),Df]),t("tr",null,[t("td",Nf,[t("a",Of,[e("artifex"),r(n)])]),Rf]),t("tr",null,[t("td",Hf,[t("a",Uf,[e("async"),r(n)])]),Jf]),t("tr",null,[t("td",Qf,[t("a",Wf,[e("breaker"),r(n)])]),Vf]),t("tr",null,[t("td",Xf,[t("a",Kf,[e("cyclicbarrier"),r(n)])]),Zf]),t("tr",null,[t("td",Yf,[t("a",$f,[e("go-floc"),r(n)])]),tm]),t("tr",null,[t("td",em,[t("a",nm,[e("go-flow"),r(n)])]),rm]),t("tr",null,[t("td",om,[t("a",lm,[e("go-tools/multithreading"),r(n)])]),sm]),t("tr",null,[t("td",im,[t("a",am,[e("go-trylock"),r(n)])]),cm]),t("tr",null,[t("td",_m,[t("a",hm,[e("go-waitgroup"),r(n)])]),dm]),t("tr",null,[t("td",gm,[t("a",um,[e("gohive"),r(n)])]),pm]),t("tr",null,[t("td",ym,[t("a",xm,[e("gollback"),r(n)])]),bm]),t("tr",null,[t("td",fm,[t("a",mm,[e("GoSlaves"),r(n)])]),km]),t("tr",null,[t("td",Gm,[t("a",Em,[e("goworker"),r(n)])]),wm]),t("tr",null,[t("td",Tm,[t("a",Pm,[e("gowp"),r(n)])]),Am]),t("tr",null,[t("td",Sm,[t("a",vm,[e("gpool"),r(n)])]),Cm]),t("tr",null,[t("td",Mm,[t("a",Bm,[e("grpool"),r(n)])]),Im]),t("tr",null,[t("td",jm,[t("a",qm,[e("Hunch"),r(n)])]),Fm]),t("tr",null,[t("td",Lm,[t("a",zm,[e("oversight"),r(n)])]),Dm]),t("tr",null,[t("td",Nm,[t("a",Om,[e("parallel-fn"),r(n)])]),Rm]),t("tr",null,[t("td",Hm,[t("a",Um,[e("pool"),r(n)])]),Jm]),t("tr",null,[t("td",Qm,[t("a",Wm,[e("queue"),r(n)])]),Vm]),t("tr",null,[t("td",Xm,[t("a",Km,[e("routine"),r(n)])]),Zm]),t("tr",null,[t("td",Ym,[t("a",$m,[e("semaphore"),r(n)])]),tk]),t("tr",null,[t("td",ek,[t("a",nk,[e("semaphore"),r(n)])]),rk]),t("tr",null,[t("td",ok,[t("a",lk,[e("stl"),r(n)])]),sk]),t("tr",null,[t("td",ik,[t("a",ak,[e("threadpool"),r(n)])]),ck]),t("tr",null,[t("td",_k,[t("a",hk,[e("tunny"),r(n)])]),dk]),t("tr",null,[t("td",gk,[t("a",uk,[e("worker-pool"),r(n)])]),pk]),t("tr",null,[t("td",yk,[t("a",xk,[e("workerpool"),r(n)])]),bk])])]),fk,t("table",null,[mk,t("tbody",null,[t("tr",null,[t("td",kk,[t("a",Gk,[e("app"),r(n)])]),Ek]),t("tr",null,[t("td",wk,[t("a",Tk,[e("fyne"),r(n)])]),Pk]),t("tr",null,[t("td",Ak,[t("a",Sk,[e("go-astilectron"),r(n)])]),vk]),t("tr",null,[t("td",Ck,[t("a",Mk,[e("go-gtk"),r(n)])]),Bk]),t("tr",null,[t("td",Ik,[t("a",jk,[e("go-sciter"),r(n)])]),qk]),t("tr",null,[t("td",Fk,[t("a",Lk,[e("gotk3"),r(n)])]),zk]),t("tr",null,[t("td",Dk,[t("a",Nk,[e("gowd"),r(n)])]),Ok]),t("tr",null,[t("td",Rk,[t("a",Hk,[e("qt"),r(n)])]),Uk]),t("tr",null,[t("td",Jk,[t("a",Qk,[e("ui"),r(n)])]),Wk]),t("tr",null,[t("td",Vk,[t("a",Xk,[e("Wails"),r(n)])]),Kk]),t("tr",null,[t("td",Zk,[t("a",Yk,[e("walk"),r(n)])]),$k]),t("tr",null,[t("td",t2,[t("a",e2,[e("webview"),r(n)])]),n2]),t("tr",null,[t("td",r2,[t("a",o2,[e("go-appindicator"),r(n)])]),l2]),t("tr",null,[t("td",s2,[t("a",i2,[e("gosx-notifier"),r(n)])]),a2]),t("tr",null,[t("td",c2,[t("a",_2,[e("mac-activity-tracker"),r(n)])]),h2]),t("tr",null,[t("td",d2,[t("a",g2,[e("mac-sleep-notifier"),r(n)])]),u2]),t("tr",null,[t("td",p2,[t("a",y2,[e("robotgo"),r(n)])]),x2]),t("tr",null,[t("td",b2,[t("a",f2,[e("systray"),r(n)])]),m2]),t("tr",null,[t("td",k2,[t("a",G2,[e("trayhost"),r(n)])]),E2])])]),w2,t("table",null,[T2,t("tbody",null,[t("tr",null,[t("td",P2,[t("a",A2,[e("bild"),r(n)])]),S2]),t("tr",null,[t("td",v2,[t("a",C2,[e("bimg"),r(n)])]),M2]),t("tr",null,[t("td",B2,[t("a",I2,[e("cameron"),r(n)])]),j2]),t("tr",null,[t("td",q2,[t("a",F2,[e("canvas"),r(n)])]),L2]),t("tr",null,[t("td",z2,[t("a",D2,[e("darkroom"),r(n)])]),N2]),t("tr",null,[t("td",O2,[t("a",R2,[e("geopattern"),r(n)])]),H2]),t("tr",null,[t("td",U2,[t("a",J2,[e("gg"),r(n)])]),Q2]),t("tr",null,[t("td",W2,[t("a",V2,[e("gift"),r(n)])]),X2]),t("tr",null,[t("td",K2,[t("a",Z2,[e("gltf"),r(n)])]),Y2]),t("tr",null,[t("td",$2,[t("a",t8,[e("go-cairo"),r(n)])]),e8]),t("tr",null,[t("td",n8,[t("a",r8,[e("go-gd"),r(n)])]),o8]),t("tr",null,[t("td",l8,[t("a",s8,[e("go-nude"),r(n)])]),i8]),t("tr",null,[t("td",a8,[t("a",c8,[e("go-opencv"),r(n)])]),_8]),t("tr",null,[t("td",h8,[t("a",d8,[e("go-webcolors"),r(n)])]),g8]),t("tr",null,[t("td",u8,[t("a",p8,[e("gocv"),r(n)])]),y8]),t("tr",null,[t("td",x8,[t("a",b8,[e("goimagehash"),r(n)])]),f8]),t("tr",null,[t("td",m8,[t("a",k8,[e("goimghdr"),r(n)])]),G8]),t("tr",null,[t("td",E8,[t("a",w8,[e("govatar"),r(n)])]),T8]),t("tr",null,[t("td",P8,[t("a",A8,[e("image2ascii"),r(n)])]),S8]),t("tr",null,[t("td",v8,[t("a",C8,[e("imagick"),r(n)])]),M8]),t("tr",null,[t("td",B8,[t("a",I8,[e("imaginary"),r(n)])]),j8]),t("tr",null,[t("td",q8,[t("a",F8,[e("imaging"),r(n)])]),L8]),t("tr",null,[t("td",z8,[t("a",D8,[e("img"),r(n)])]),N8]),t("tr",null,[t("td",O8,[t("a",R8,[e("ln"),r(n)])]),H8]),t("tr",null,[t("td",U8,[t("a",J8,[e("mergi"),r(n)])]),Q8]),t("tr",null,[t("td",W8,[t("a",V8,[e("mort"),r(n)])]),X8]),t("tr",null,[t("td",K8,[t("a",Z8,[e("mpo"),r(n)])]),Y8]),t("tr",null,[t("td",$8,[t("a",t0,[e("picfit"),r(n)])]),e0]),t("tr",null,[t("td",n0,[t("a",r0,[e("pt"),r(n)])]),o0]),t("tr",null,[t("td",l0,[t("a",s0,[e("resize"),r(n)])]),i0]),t("tr",null,[t("td",a0,[t("a",c0,[e("rez"),r(n)])]),_0]),t("tr",null,[t("td",h0,[t("a",d0,[e("smartcrop"),r(n)])]),g0]),t("tr",null,[t("td",u0,[t("a",p0,[e("steganography"),r(n)])]),y0]),t("tr",null,[t("td",x0,[t("a",b0,[e("stegify"),r(n)])]),f0]),t("tr",null,[t("td",m0,[t("a",k0,[e("svgo"),r(n)])]),G0]),t("tr",null,[t("td",E0,[t("a",w0,[e("tga"),r(n)])]),T0])])]),P0,t("table",null,[A0,t("tbody",null,[t("tr",null,[t("td",S0,[t("a",v0,[e("connectordb"),r(n)])]),C0]),t("tr",null,[t("td",M0,[t("a",B0,[e("devices"),r(n)])]),I0]),t("tr",null,[t("td",j0,[t("a",q0,[e("eywa"),r(n)])]),F0]),t("tr",null,[t("td",L0,[t("a",z0,[e("flogo"),r(n)])]),D0]),t("tr",null,[t("td",N0,[t("a",O0,[e("gatt"),r(n)])]),R0]),t("tr",null,[t("td",H0,[t("a",U0,[e("gobot"),r(n)])]),J0]),t("tr",null,[t("td",Q0,[t("a",W0,[e("huego"),r(n)])]),V0]),t("tr",null,[t("td",X0,[t("a",K0,[e("iot"),r(n)])]),Z0]),t("tr",null,[t("td",Y0,[t("a",$0,[e("mainflux"),r(n)])]),t9]),t("tr",null,[t("td",e9,[t("a",n9,[e("periph"),r(n)])]),r9]),t("tr",null,[t("td",o9,[t("a",l9,[e("sensorbee"),r(n)])]),s9])])]),i9,t("table",null,[a9,t("tbody",null,[t("tr",null,[t("td",c9,[t("a",_9,[e("ajson"),r(n)])]),h9]),t("tr",null,[t("td",d9,[t("a",g9,[e("gjo"),r(n)])]),u9]),t("tr",null,[t("td",p9,[t("a",y9,[e("GJSON"),r(n)])]),x9]),t("tr",null,[t("td",b9,[t("a",f9,[e("go-jsonerror"),r(n)])]),m9]),t("tr",null,[t("td",k9,[t("a",G9,[e("go-respond"),r(n)])]),E9]),t("tr",null,[t("td",w9,[t("a",T9,[e("gojq"),r(n)])]),P9]),t("tr",null,[t("td",A9,[t("a",S9,[e("gojson"),r(n)])]),v9]),t("tr",null,[t("td",C9,[t("a",M9,[e("JayDiff"),r(n)])]),B9]),t("tr",null,[t("td",I9,[t("a",j9,[e("jettison"),r(n)])]),q9]),t("tr",null,[t("td",F9,[t("a",L9,[e("JSON-to-Go"),r(n)])]),z9]),t("tr",null,[t("td",D9,[t("a",N9,[e("json2go"),r(n)])]),O9]),t("tr",null,[t("td",R9,[t("a",H9,[e("jsonapi-errors"),r(n)])]),U9]),t("tr",null,[t("td",J9,[t("a",Q9,[e("jsonf"),r(n)])]),W9]),t("tr",null,[t("td",V9,[t("a",X9,[e("jsongo"),r(n)])]),K9]),t("tr",null,[t("td",Z9,[t("a",Y9,[e("jsonhal"),r(n)])]),$9]),t("tr",null,[t("td",t4,[t("a",e4,[e("kazaam"),r(n)])]),n4]),t("tr",null,[t("td",r4,[t("a",o4,[e("mp"),r(n)])]),l4])])]),s4,t("table",null,[i4,t("tbody",null,[t("tr",null,[t("td",a4,[t("a",c4,[e("bayesian"),r(n)])]),_4]),t("tr",null,[t("td",h4,[t("a",d4,[e("CloudForest"),r(n)])]),g4]),t("tr",null,[t("td",u4,[t("a",p4,[e("eaopt"),r(n)])]),y4]),t("tr",null,[t("td",x4,[t("a",b4,[e("evoli"),r(n)])]),f4]),t("tr",null,[t("td",m4,[t("a",k4,[e("fonet"),r(n)])]),G4]),t("tr",null,[t("td",E4,[t("a",w4,[e("go-cluster"),r(n)])]),T4]),t("tr",null,[t("td",P4,[t("a",A4,[e("go-deep"),r(n)])]),S4]),t("tr",null,[t("td",v4,[t("a",C4,[e("go-fann"),r(n)])]),M4]),t("tr",null,[t("td",B4,[t("a",I4,[e("go-galib"),r(n)])]),j4]),t("tr",null,[t("td",q4,[t("a",F4,[e("go-pr"),r(n)])]),L4]),t("tr",null,[t("td",z4,[t("a",D4,[e("gobrain"),r(n)])]),N4]),t("tr",null,[t("td",O4,[t("a",R4,[e("godist"),r(n)])]),H4]),t("tr",null,[t("td",U4,[t("a",J4,[e("goga"),r(n)])]),Q4]),t("tr",null,[t("td",W4,[t("a",V4,[e("GoLearn"),r(n)])]),X4]),t("tr",null,[t("td",K4,[t("a",Z4,[e("golinear"),r(n)])]),Y4]),t("tr",null,[t("td",$4,[t("a",t5,[e("GoMind"),r(n)])]),e5]),t("tr",null,[t("td",n5,[t("a",r5,[e("goml"),r(n)])]),o5]),t("tr",null,[t("td",l5,[t("a",s5,[e("Goptuna"),r(n)])]),i5]),t("tr",null,[t("td",a5,[t("a",c5,[e("goRecommend"),r(n)])]),_5]),t("tr",null,[t("td",h5,[t("a",d5,[e("gorgonia"),r(n)])]),g5]),t("tr",null,[t("td",u5,[t("a",p5,[e("gorse"),r(n)])]),y5]),t("tr",null,[t("td",x5,[t("a",b5,[e("goscore"),r(n)])]),f5]),t("tr",null,[t("td",m5,[t("a",k5,[e("gosseract"),r(n)])]),G5]),t("tr",null,[t("td",E5,[t("a",w5,[e("libsvm"),r(n)])]),T5]),t("tr",null,[t("td",P5,[t("a",A5,[e("neat"),r(n)])]),S5]),t("tr",null,[t("td",v5,[t("a",C5,[e("neural-go"),r(n)])]),M5]),t("tr",null,[t("td",B5,[t("a",I5,[e("ocrserver"),r(n)])]),j5]),t("tr",null,[t("td",q5,[t("a",F5,[e("onnx-go"),r(n)])]),L5]),t("tr",null,[t("td",z5,[t("a",D5,[e("probab"),r(n)])]),N5]),t("tr",null,[t("td",O5,[t("a",R5,[e("regommend"),r(n)])]),H5]),t("tr",null,[t("td",U5,[t("a",J5,[e("shield"),r(n)])]),Q5]),t("tr",null,[t("td",W5,[t("a",V5,[e("tfgo"),r(n)])]),X5]),t("tr",null,[t("td",K5,[t("a",Z5,[e("Varis"),r(n)])]),Y5])])]),$5,t("table",null,[t3,t("tbody",null,[t("tr",null,[t("td",e3,[t("a",n3,[e("unioffice"),r(n)])]),r3]),t("tr",null,[t("td",o3,[t("a",l3,[e("excelize"),r(n)])]),s3]),t("tr",null,[t("td",i3,[t("a",a3,[e("go-excel"),r(n)])]),c3]),t("tr",null,[t("td",_3,[t("a",h3,[e("goxlsxwriter"),r(n)])]),d3]),t("tr",null,[t("td",g3,[t("a",u3,[e("xlsx"),r(n)])]),p3]),t("tr",null,[t("td",y3,[t("a",x3,[e("xlsx"),r(n)])]),b3])])]),f3,t("table",null,[m3,t("tbody",null,[t("tr",null,[t("td",k3,[t("a",G3,[e("getlang"),r(n)])]),E3]),t("tr",null,[t("td",w3,[t("a",T3,[e("go-i18n"),r(n)])]),P3]),t("tr",null,[t("td",A3,[t("a",S3,[e("go-mystem"),r(n)])]),v3]),t("tr",null,[t("td",C3,[t("a",M3,[e("go-nlp"),r(n)])]),B3]),t("tr",null,[t("td",I3,[t("a",j3,[e("go-pinyin"),r(n)])]),q3]),t("tr",null,[t("td",F3,[t("a",L3,[e("go-stem"),r(n)])]),z3]),t("tr",null,[t("td",D3,[t("a",N3,[e("go-unidecode"),r(n)])]),O3]),t("tr",null,[t("td",R3,[t("a",H3,[e("go2vec"),r(n)])]),U3]),t("tr",null,[t("td",J3,[t("a",Q3,[e("gojieba"),r(n)])]),W3]),t("tr",null,[t("td",V3,[t("a",X3,[e("golibstemmer"),r(n)])]),K3]),t("tr",null,[t("td",Z3,[t("a",Y3,[e("gotokenizer"),r(n)])]),$3]),t("tr",null,[t("td",t6,[t("a",e6,[e("gounidecode"),r(n)])]),n6]),t("tr",null,[t("td",r6,[t("a",o6,[e("gse"),r(n)])]),l6]),t("tr",null,[t("td",s6,[t("a",i6,[e("icu"),r(n)])]),a6]),t("tr",null,[t("td",c6,[t("a",_6,[e("kagome"),r(n)])]),h6]),t("tr",null,[t("td",d6,[t("a",g6,[e("libtextcat"),r(n)])]),u6]),t("tr",null,[t("td",p6,[t("a",y6,[e("MMSEGO"),r(n)])]),x6]),t("tr",null,[t("td",b6,[t("a",f6,[e("nlp"),r(n)])]),m6]),t("tr",null,[t("td",k6,[t("a",G6,[e("nlp"),r(n)])]),E6]),t("tr",null,[t("td",w6,[t("a",T6,[e("paicehusk"),r(n)])]),P6]),t("tr",null,[t("td",A6,[t("a",S6,[e("petrovich"),r(n)])]),v6]),t("tr",null,[t("td",C6,[t("a",M6,[e("porter"),r(n)])]),B6]),t("tr",null,[t("td",I6,[t("a",j6,[e("porter2"),r(n)])]),q6]),t("tr",null,[t("td",F6,[t("a",L6,[e("prose"),r(n)])]),z6]),t("tr",null,[t("td",D6,[t("a",N6,[e("RAKE.go"),r(n)])]),O6]),t("tr",null,[t("td",R6,[t("a",H6,[e("segment"),r(n)])]),U6]),t("tr",null,[t("td",J6,[t("a",Q6,[e("sentences"),r(n)])]),W6]),t("tr",null,[t("td",V6,[t("a",X6,[e("shamoji"),r(n)])]),K6]),t("tr",null,[t("td",Z6,[t("a",Y6,[e("snowball"),r(n)])]),$6]),t("tr",null,[t("td",t7,[t("a",e7,[e("stemmer"),r(n)])]),n7]),t("tr",null,[t("td",r7,[t("a",o7,[e("textcat"),r(n)])]),l7]),t("tr",null,[t("td",s7,[t("a",i7,[e("whatlanggo"),r(n)])]),a7]),t("tr",null,[t("td",c7,[t("a",_7,[e("when"),r(n)])]),h7])])]),d7,t("table",null,[g7,t("tbody",null,[t("tr",null,[t("td",u7,[t("a",p7,[e("arp"),r(n)])]),y7]),t("tr",null,[t("td",x7,[t("a",b7,[e("buffstreams"),r(n)])]),f7]),t("tr",null,[t("td",m7,[t("a",k7,[e("canopus"),r(n)])]),G7]),t("tr",null,[t("td",E7,[t("a",w7,[e("cidranger"),r(n)])]),T7]),t("tr",null,[t("td",P7,[t("a",A7,[e("dhcp6"),r(n)])]),S7]),t("tr",null,[t("td",v7,[t("a",C7,[e("dns"),r(n)])]),M7]),t("tr",null,[t("td",B7,[t("a",I7,[e("ether"),r(n)])]),j7]),t("tr",null,[t("td",q7,[t("a",F7,[e("ethernet"),r(n)])]),L7]),t("tr",null,[t("td",z7,[t("a",D7,[e("fasthttp"),r(n)])]),N7]),t("tr",null,[t("td",O7,[t("a",R7,[e("fortio"),r(n)])]),H7]),t("tr",null,[t("td",U7,[t("a",J7,[e("ftp"),r(n)])]),Q7]),t("tr",null,[t("td",W7,[t("a",V7,[e("gev"),r(n)])]),X7]),t("tr",null,[t("td",K7,[t("a",Z7,[e("gmqtt"),r(n)])]),Y7]),t("tr",null,[t("td",$7,[t("a",tG,[e("gnet"),r(n)])]),eG]),t("tr",null,[t("td",nG,[t("a",rG,[e("gNxI"),r(n)])]),oG]),t("tr",null,[t("td",lG,[t("a",sG,[e("go-getter"),r(n)])]),iG]),t("tr",null,[t("td",aG,[t("a",cG,[e("go-powerdns"),r(n)])]),_G]),t("tr",null,[t("td",hG,[t("a",dG,[e("go-stun"),r(n)])]),gG]),t("tr",null,[t("td",uG,[t("a",pG,[e("gobgp"),r(n)])]),yG]),t("tr",null,[t("td",xG,[t("a",bG,[e("golibwireshark"),r(n)])]),fG]),t("tr",null,[t("td",mG,[t("a",kG,[e("gopacket"),r(n)])]),GG]),t("tr",null,[t("td",EG,[t("a",wG,[e("gopcap"),r(n)])]),TG]),t("tr",null,[t("td",PG,[t("a",AG,[e("goshark"),r(n)])]),SG]),t("tr",null,[t("td",vG,[t("a",CG,[e("gosnmp"),r(n)])]),MG]),t("tr",null,[t("td",BG,[t("a",IG,[e("gosocsvr"),r(n)])]),jG]),t("tr",null,[t("td",qG,[t("a",FG,[e("gotcp"),r(n)])]),LG]),t("tr",null,[t("td",zG,[t("a",DG,[e("grab"),r(n)])]),NG]),t("tr",null,[t("td",OG,[t("a",RG,[e("graval"),r(n)])]),HG]),t("tr",null,[t("td",UG,[t("a",JG,[e("HTTPLab"),r(n)])]),QG]),t("tr",null,[t("td",WG,[t("a",VG,[e("iplib"),r(n)])]),XG]),t("tr",null,[t("td",KG,[t("a",ZG,[e("jazigo"),r(n)])]),YG]),t("tr",null,[t("td",$G,[t("a",tE,[e("kcp-go"),r(n)])]),eE]),t("tr",null,[t("td",nE,[t("a",rE,[e("kcptun"),r(n)])]),oE]),t("tr",null,[t("td",lE,[t("a",sE,[e("lhttp"),r(n)])]),iE]),t("tr",null,[t("td",aE,[t("a",cE,[e("linkio"),r(n)])]),_E]),t("tr",null,[t("td",hE,[t("a",dE,[e("llb"),r(n)])]),gE]),t("tr",null,[t("td",uE,[t("a",pE,[e("mdns"),r(n)])]),yE]),t("tr",null,[t("td",xE,[t("a",bE,[e("mqttPaho"),r(n)])]),fE]),t("tr",null,[t("td",mE,[t("a",kE,[e("NFF-Go"),r(n)])]),GE]),t("tr",null,[t("td",EE,[t("a",wE,[e("packet"),r(n)])]),TE]),t("tr",null,[t("td",PE,[t("a",AE,[e("peerdiscovery"),r(n)])]),SE]),t("tr",null,[t("td",vE,[t("a",CE,[e("portproxy"),r(n)])]),ME]),t("tr",null,[t("td",BE,[t("a",IE,[e("publicip"),r(n)])]),jE]),t("tr",null,[t("td",qE,[t("a",FE,[e("quic-go"),r(n)])]),LE]),t("tr",null,[t("td",zE,[t("a",DE,[e("raw"),r(n)])]),NE]),t("tr",null,[t("td",OE,[t("a",RE,[e("sftp"),r(n)])]),t("td",HE,[e("程序包sftp实现SSH文件传输协议，如"),t("a",UE,[e("https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt"),r(n)])])]),t("tr",null,[t("td",JE,[t("a",QE,[e("ssh"),r(n)])]),WE]),t("tr",null,[t("td",VE,[t("a",XE,[e("sslb"),r(n)])]),KE]),t("tr",null,[t("td",ZE,[t("a",YE,[e("stun"),r(n)])]),$E]),t("tr",null,[t("td",tw,[t("a",ew,[e("tcp_server"),r(n)])]),nw]),t("tr",null,[t("td",rw,[t("a",ow,[e("tspool"),r(n)])]),lw]),t("tr",null,[t("td",sw,[t("a",iw,[e("utp"),r(n)])]),aw]),t("tr",null,[t("td",cw,[t("a",_w,[e("water"),r(n)])]),hw]),t("tr",null,[t("td",dw,[t("a",gw,[e("webrtc"),r(n)])]),uw]),t("tr",null,[t("td",pw,[t("a",yw,[e("winrm"),r(n)])]),xw]),t("tr",null,[t("td",bw,[t("a",fw,[e("xtcp"),r(n)])]),mw])])]),kw,t("table",null,[Gw,t("tbody",null,[t("tr",null,[t("td",Ew,[t("a",ww,[e("go-astisub"),r(n)])]),Tw]),t("tr",null,[t("td",Pw,[t("a",Aw,[e("go-astits"),r(n)])]),Sw]),t("tr",null,[t("td",vw,[t("a",Cw,[e("go-m3u8"),r(n)])]),Mw]),t("tr",null,[t("td",Bw,[t("a",Iw,[e("goav"),r(n)])]),jw]),t("tr",null,[t("td",qw,[t("a",Fw,[e("gst"),r(n)])]),Lw]),t("tr",null,[t("td",zw,[t("a",Dw,[e("libgosubs"),r(n)])]),Nw]),t("tr",null,[t("td",Ow,[t("a",Rw,[e("libvlc-go"),r(n)])]),Hw]),t("tr",null,[t("td",Uw,[t("a",Jw,[e("m3u8"),r(n)])]),Qw]),t("tr",null,[t("td",Ww,[t("a",Vw,[e("v4l"),r(n)])]),Xw])])]),Kw,Zw,t("table",null,[Yw,t("tbody",null,[t("tr",null,[t("td",$w,[t("a",tT,[e("Go palyground"),r(n)])]),eT]),t("tr",null,[t("td",nT,[t("a",rT,[e("Go实战开发"),r(n)])]),oT]),t("tr",null,[t("td",lT,[t("a",sT,[e("Go Web 编程"),r(n)])]),iT]),t("tr",null,[t("td",aT,[t("a",cT,[e("Go语言标准库"),r(n)])]),_T]),t("tr",null,[t("td",hT,[t("a",dT,[e("Go入门指南"),r(n)])]),gT]),t("tr",null,[t("td",uT,[t("a",pT,[e("Go语言圣经"),r(n)])]),yT]),t("tr",null,[t("td",xT,[t("a",bT,[e("Go语言中文网"),r(n)])]),fT]),t("tr",null,[t("td",mT,[t("a",kT,[e("菜鸟教程"),r(n)])]),GT]),t("tr",null,[t("td",ET,[t("a",wT,[e("Go语言高级编程"),r(n)])]),TT]),t("tr",null,[t("td",PT,[t("a",AT,[e("go语言原本"),r(n)])]),ST]),t("tr",null,[t("td",vT,[t("a",CT,[e("golang设计模式"),r(n)])]),MT]),t("tr",null,[t("td",BT,[t("a",IT,[e("Go语言四十二章经"),r(n)])]),jT])])]),qT])}const OT=l(c,[["render",FT],["__file","学习路线.html.vue"]]),RT=JSON.parse('{"path":"/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html","title":"学习路线","lang":"zh-CN","frontmatter":{"description":"学习路线 【超全golang面试题合集+golang学习指南+golang知识图谱+成长路线】 一份涵盖大部分golang程序员所需要掌握的核心知识。 公众号 公众号 投稿 投稿 博客 脑图持续不断更新中，在线查看地址 后续文章和内容会不断更新到 github项目 中，欢迎关注。 大家好，我是小白。大家知道，我一直以来都是golang的忠实粉丝，在学习...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"学习路线"}],["meta",{"property":"og:description","content":"学习路线 【超全golang面试题合集+golang学习指南+golang知识图谱+成长路线】 一份涵盖大部分golang程序员所需要掌握的核心知识。 公众号 公众号 投稿 投稿 博客 脑图持续不断更新中，在线查看地址 后续文章和内容会不断更新到 github项目 中，欢迎关注。 大家好，我是小白。大家知道，我一直以来都是golang的忠实粉丝，在学习..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/xiaobaiTech/image/%E5%90%8E%E7%AB%AF%E6%88%90%E9%95%BF%E8%B7%AF%E7%BA%BF.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-13T16:40:11.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"学习路线"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:modified_time","content":"2024-02-13T16:40:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"学习路线\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/xiaobaiTech/image/%E5%90%8E%E7%AB%AF%E6%88%90%E9%95%BF%E8%B7%AF%E7%BA%BF.png\\",\\"https://cdn.jsdelivr.net/gh/xiaobaiTech/image/image-20220314193617293.png\\",\\"https://cdn.jsdelivr.net/gh/xiaobaiTech/image/%E5%B0%8F%E7%99%BDdebug%E5%8A%A8%E5%9B%BE%E4%BA%8C%E7%BB%B4%E7%A0%81.gif\\",\\"https://cdn.jsdelivr.net/gh/zhaolunallen/picture/2021-1-10/1610269930614-640.png\\"],\\"dateModified\\":\\"2024-02-13T16:40:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"]]},"headers":[{"level":3,"title":"最后","slug":"最后","link":"#最后","children":[]},{"level":2,"title":"开源书籍","slug":"开源书籍","link":"#开源书籍","children":[]},{"level":2,"title":"视频网课","slug":"视频网课","link":"#视频网课","children":[]}],"git":{"createdTime":1707842411000,"updatedTime":1707842411000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":1}]},"readingTime":{"minutes":65.19,"words":19558},"filePathRelative":"golang/学习路线.md","localizedDate":"2024年2月13日","autoDesc":true}');export{OT as comp,RT as data};
