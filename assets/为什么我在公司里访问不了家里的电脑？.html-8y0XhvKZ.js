import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as a,c as g,a as t,b as o,d as i,e as r}from"./app-BFHSoxZT.js";const s={},d=t("h1",{id:"为什么我在公司里访问不了家里的电脑",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#为什么我在公司里访问不了家里的电脑"},[t("span",null,"为什么我在公司里访问不了家里的电脑？")])],-1),c={href:"https://juejin.cn/post/7169388138383540238",target:"_blank",rel:"noopener noreferrer"},l=t("strong",null,"局域网和广域网",-1),A=t("strong",null,"私有 IP 和公网 IP",-1),E=t("strong",null,"共用一个公网 IP",-1),P=r('<figure><img src="https://cdn.xiaobaidebug.top/1668122491454.png" alt="收发数据就像收发快递" tabindex="0" loading="lazy"><figcaption>收发数据就像收发快递</figcaption></figure><p>当我们需要发送网络包的时候，在 IP 层，需要填入源 IP 地址，和目的 IP 地址，也就是对应快递的发货地址和收货地址。</p><figure><img src="https://cdn.xiaobaidebug.top/1668213101375.png" alt="IP报头里含有发送和接收IP地址" tabindex="0" loading="lazy"><figcaption>IP报头里含有发送和接收IP地址</figcaption></figure><p>但是我们家里的局域网内，基本上都用<code>192.168.xx.xx</code>这样的<strong>私有 IP</strong>。</p><p>如果我们在发送网络包的时候，这么填。对方在回数据包的时候该怎么回？毕竟千家万户人用的都是<code>192.168.0.1</code>，网络怎么知道该发给谁？</p><p>所以肯定需要将这个<code>192.168.xx</code><strong>私有 IP 转换成公有 IP</strong>。</p><p>因此在上篇文章最后，留了这么个问题。局域网内用的是私有 IP，公网用的都是公有 IP。一个局域网里的私有 IP 想访问局域网外的公有 IP，必然要做个 IP 转换，这是在哪里做的转换呢？</p><figure><img src="https://cdn.xiaobaidebug.top/1668212064544.png" alt="私有IP和公有IP在哪进行转换" tabindex="0" loading="lazy"><figcaption>私有IP和公有IP在哪进行转换</figcaption></figure><p>答案是<strong>NAT 设备</strong>，全称<strong>N</strong>etwork <strong>A</strong>ddress <strong>T</strong>ranslation，网络地址转换。基本上家用路由器都支持这功能。</p><p>我们来聊下它是怎么工作的。</p><h1 id="nat-的工作原理" tabindex="-1"><a class="header-anchor" href="#nat-的工作原理"><span>NAT 的工作原理</span></a></h1><p>为了简单，我们假设你很富，你家里分到了一个公网 IP 地址 <code>20.20.20.20</code>，对应配到了你家自带 NAT 功能的<strong>家用路由器上</strong>，你家里需要上网的设备有很多，比如你的手机，电脑都需要上网，他们构成了一个<strong>局域网</strong>，用的都是<strong>私有 IP</strong>，比如<code>192.168.xx</code>。其中你在电脑上执行<code>ifconfig</code>命令，发现家里的电脑 IP 是<code>192.168.30.5</code>。 你要访问的公网 IP 地址是<code>30.30.30.30</code>。</p><p>于是就有下面这样一张图</p><figure><img src="https://cdn.xiaobaidebug.top/1668213483971.png" alt="内网IP访问公网IP" tabindex="0" loading="lazy"><figcaption>内网IP访问公网IP</figcaption></figure><p>当你准备发送数据包的时候，你的电脑内核协议栈就会构造一个 IP 数据包。这个 IP 数据包报头里的<strong>发送端</strong>IP 地址填的就是<code>192.168.30.5</code>，<strong>接收端</strong>IP 地址就是<code>30.30.30.30</code>。将数据包发到 NAT 路由器中。</p><p>此时 NAT 路由器会将 IP 数据包里的<strong>源 IP 地址</strong>修改一下，私有 IP 地址<code>192.168.30.5</code>改写为公网 IP 地址<code>20.20.20.20</code>，这叫<strong>SNAT</strong>（<strong>S</strong>ource <strong>N</strong>etwork <strong>A</strong>ddress <strong>T</strong>ranslation，源地址转换）。并且还会在 NAT 路由器内部留下一条 <code>192.168.30.5 -&gt; 20.20.20.20</code>的映射记录，这个信息会在后面用到。之后 IP 数据包经过公网里各个路由器的转发，发到了接收端<code>30.30.30.30</code>，到这里<strong>发送流程</strong>结束。</p><figure><img src="https://cdn.xiaobaidebug.top/1668214865696.png" alt="SNAT" tabindex="0" loading="lazy"><figcaption>SNAT</figcaption></figure><p>如果接收端处理完数据了，需要发一个响应给你的电脑，那就需要将<strong>发送端</strong>IP 地址填上自己的<code>30.30.30.30</code>，将<strong>接收端</strong>地址填为你的公网 IP 地址<code>20.20.20.20</code>，发往 NAT 路由器。NAT 路由器收到公网来的消息之后，会检查下自己之前留下的映射信息，发现之前留下了这么一条 <code>192.168.30.5 -&gt; 20.20.20.20</code>记录，就会将这个数据包的<strong>目的 IP 地址</strong>修改一下，变成内网 IP 地址<code>192.168.30.5</code>, 这也叫<code>DNAT</code>（<strong>D</strong>estination <strong>N</strong>etwork <strong>A</strong>ddress <strong>T</strong>ranslation，目的地址转换）。 之后将其转发给你的电脑上。</p><figure><img src="https://cdn.xiaobaidebug.top/1668215166060.png" alt="DNAT" tabindex="0" loading="lazy"><figcaption>DNAT</figcaption></figure><p>整个过程下来，NAT 悄悄的改了 IP 数据包的发送和接收端 IP 地址，但对真正的发送方和接收方来说，他们却<strong>对这件事情，一无所知</strong>。</p><p>这就是 NAT 的工作原理。</p><br><h1 id="napt-的原理" tabindex="-1"><a class="header-anchor" href="#napt-的原理"><span>NAPT 的原理</span></a></h1><p>到这里，相信大家都有一个很大的疑问。</p><p>局域网里并不只有一台机器，局域网内 每台机器都在 NAT 下留下的映射信息都会是 <code>192.168.xx.xx -&gt; 20.20.20.20</code>，发送消息是没啥事，但<strong>接收</strong>消息的时候就不知道该回给谁了。</p><figure><img src="https://cdn.xiaobaidebug.top/1668230396921.png" alt="NAT的问题" tabindex="0" loading="lazy"><figcaption>NAT的问题</figcaption></figure><p>这问题相当致命，因此<strong>实际上大部分时候不会使用普通的 NAT</strong>。</p><p>那怎么办呢？</p><p>问题出在我们没办法区分内网里的多个网络连接。</p><p>于是乎。</p><p>我们可以<strong>加入其他信息去区分内网里的各个网络连接，很自然就能想到端口。</strong></p><p>但 IP 数据包（<strong>网络层</strong>）本身是没有端口信息的。常见的<strong>传输层</strong>协议 TCP 和 UDP 数据报文里才有<strong>端口</strong>的信息。</p><figure><img src="https://cdn.xiaobaidebug.top/1668230540076.png" alt="TCP报头有端口号" tabindex="0" loading="lazy"><figcaption>TCP报头有端口号</figcaption></figure><figure><img src="https://cdn.xiaobaidebug.top/1668230677376.png" alt="UDP报头也有端口号" tabindex="0" loading="lazy"><figcaption>UDP报头也有端口号</figcaption></figure><p>于是流程就变成了下面这样子。</p><p>当你准备发送数据包的时候，你的电脑内核协议栈就会先构造一个 TCP 或者 UDP 数据报头，里面写入端口号，比如发送端口是<code>5000</code>，接收端口是<code>3000</code>，然后在这个基础上，加入 IP 数据报头，填入发送端和接收端的 IP 地址。</p><p>那数据包长这样。</p><figure><img src="https://cdn.xiaobaidebug.top/1668231201752.png" alt="数据包的构成" tabindex="0" loading="lazy"><figcaption>数据包的构成</figcaption></figure><p>假设，<strong>发送端</strong>IP 地址填的就是<code>192.168.30.5</code>，<strong>接收端</strong>IP 地址就是<code>30.30.30.30</code>。</p><p>将数据包发到 NAT 路由器中。</p><p>此时 NAT 路由器会将 IP 数据包里的<strong>源 IP 地址和端口号</strong>修改一下，从<code>192.168.30.5:5000</code>改写成<code>20.20.20.20:6000</code>。并且还会在 NAT 路由器内部留下一条 <code>192.168.30.5:5000 -&gt; 20.20.20.20:6000</code>的映射记录。之后数据包经过公网里各个路由器的转发，发到了接收端<code>30.30.30.30:3000</code>，到这里<strong>发送流程</strong>结束。</p><figure><img src="https://cdn.xiaobaidebug.top/1668238222836.png" alt="NAPT发送数据" tabindex="0" loading="lazy"><figcaption>NAPT发送数据</figcaption></figure><p>接收端响应时，就会在数据包里填入<strong>发送端</strong>地址是<code>30.30.30.30:3000</code>，将<strong>接收端</strong>是<code>20.20.20.20:6000</code>，发往 NAT 路由器。NAT 路由器发现下自己之前留下过这么一条 <code>192.168.30.5:5000 -&gt; 20.20.20.20:6000</code>的记录，就会将这个数据包的<strong>目的 IP 地址和端口</strong>修改一下，变回原来的<code>192.168.30.5:5000</code>。 之后将其转发给你的电脑上。</p><figure><img src="https://cdn.xiaobaidebug.top/1668238447411.png" alt="NAPT接收数据" tabindex="0" loading="lazy"><figcaption>NAPT接收数据</figcaption></figure><p>如果局域网内有多个设备，他们就会映射到不同的公网端口上，毕竟端口最大可达 65535，完全够用。这样大家都可以相安无事。</p><p>像这种同时转换<strong>IP 和端口</strong>的技术，就是<strong>NAPT</strong>（Network Address Port Transfer , <strong>网络地址端口转换</strong> ）。</p><p>看到这里，问题就来了。</p><p>那这么说<strong>只有用到端口的网络协议才能被 NAT 识别出来并转发？</strong></p><p>但这怎么解释<code>ping</code>命令？ping 基于 ICMP 协议，而 ICMP 协议报文里并不带<code>端口</code>信息。我依然可以正常的 ping 通公网机器并收到回包。</p><figure><img src="https://cdn.xiaobaidebug.top/1668240142867.png" alt="icmp报头" tabindex="0" loading="lazy"><figcaption>icmp报头</figcaption></figure><p>事实上针对 ICMP 协议，NAT 路由器做了特殊处理。ping 报文头里有个<code>Identifier</code>的信息，它其实指的是放出 ping 命令的<strong>进程 id</strong>。</p><p>对 NAT 路由器来说，这个<code>Identifier</code>的作用就跟<code>端口</code>一样。</p><p>另外，当我们去抓包的时候，就会发现有两个<code>Identifier</code>，一个后面带个<code>BE（Big Endian）</code>，另一个带个<code>LE（Little Endian）</code>。</p><p>其实他们都是<strong>同一个数值</strong>，只不过<strong>大小端不同</strong>，读出来的值不一样。就好像同样的数字 345，反着读就成了 543。这是为了兼容不同操作系统（比如 linux 和 Windows）下大小端不同的情况。</p><figure><img src="https://cdn.xiaobaidebug.top/1667783441963.png" alt="1667783441963" tabindex="0" loading="lazy"><figcaption>1667783441963</figcaption></figure><h1 id="内网穿透是什么" tabindex="-1"><a class="header-anchor" href="#内网穿透是什么"><span>内网穿透是什么</span></a></h1><p>看到这里，我们大概也发现了。使用了 NAT 上网的话，前提得<strong>内网机器主动请求公网 IP</strong>，这样 NAT 才能将内网的<strong>IP 端口</strong>转成外网<strong>IP 端口</strong>。</p><p>反过来公网的机器想主动请求内网机器，就会被拦在 NAT 路由器上，此时由于 NAT 路由器并没有任何相关的 IP 端口的<strong>映射记录</strong>，因此也就不会转发数据给内网里的任何一台机器。</p><p>举个现实中的场景就是，你在你家里的电脑上启动了一个 HTTP 服务，地址是 192.168.30.5:5000，此时你在公司办公室里想通过手机去访问一下，却发现访问不了。</p><p>那问题就来了，有没有办法让外网机器访问到内网的服务？</p><p>有。</p><p>大家应该听过一句话叫，&quot;<strong>没有什么是加中间层不能解决的，如果有，那就再加一层</strong>&quot;。</p><p>放在这里，依然适用。</p><p>说到底，因为 NAT 的存在，我们只能从内网主动发起连接，否则 NAT 设备不会记录相应的映射关系，没有映射关系也就不能转发数据。</p><p>所以我们就在<strong>公网上</strong>加一台服务器 x，并暴露一个访问域名，再让内网的服务<strong>主动</strong>连接服务器 x，这样 NAT 路由器上就有对应的<strong>映射关系</strong>。接着，所有人都去访问服务器 x，服务器 x 将数据转发给内网机器，再原路返回响应，这样数据就都通了。这就是所谓的<strong>内网穿透</strong>。</p><p>像上面提到的服务器 x，你也不需要自己去搭，已经有很多现成的方案，花钱就完事了，比如花某壳。</p><figure><img src="https://cdn.xiaobaidebug.top/1668241837853.png" alt="内网穿透" tabindex="0" loading="lazy"><figcaption>内网穿透</figcaption></figure><p>到这里，我们就可以回答文章标题的问题。</p><p><strong>为什么我在公司里访问不了家里的电脑？</strong></p><p>那是因为家里的电脑在局域网内，局域网和广域网之间有个 NAT 路由器。由于 NAT 路由器的存在，外网服务无法主动连通局域网内的电脑。</p><h2 id="两个内网的聊天软件如何建立通讯" tabindex="-1"><a class="header-anchor" href="#两个内网的聊天软件如何建立通讯"><span>两个内网的聊天软件如何建立通讯</span></a></h2><p>好了，问题就叒来了。</p><p>我家机子是在我们小区的局域网里，班花家的机子也是在她们小区的局域网里。都在局域网里，且 NAT 只能从内网连到外网，那我电脑上登录的 QQ 是怎么和班花电脑里的 QQ 连上的呢？</p><figure><img src="https://cdn.xiaobaidebug.top/1668242989803.png" alt="两个局域网内的服务无法直接连通" tabindex="0" loading="lazy"><figcaption>两个局域网内的服务无法直接连通</figcaption></figure><p>上面这个问法其实是存在个误解，误以为两个 qq 客户端应用是直接建立连接的。</p><p>然而实际上并不是，两个 qq 客户端之间还隔了一个服务器。</p><figure><img src="https://cdn.xiaobaidebug.top/1668242790670.png" alt="聊天软件会主动与公网服务器建立连接" tabindex="0" loading="lazy"><figcaption>聊天软件会主动与公网服务器建立连接</figcaption></figure><p>也就是说，两个在内网的客户端登录 qq 时都会<strong>主动</strong>向公网的聊天服务器建立连接，这时两方的 NAT 路由器中都会记录有相应的映射关系。当在其中一个 qq 上发送消息时，数据会先到服务器，再通过服务器转发到另外一个客户端上。反过来也一样，通过这个方式让两台内网的机子进行数据传输。</p><h2 id="两个内网的应用如何直接建立连接" tabindex="-1"><a class="header-anchor" href="#两个内网的应用如何直接建立连接"><span>两个内网的应用如何直接建立连接</span></a></h2><p>上面的情况，是两个客户端通过<strong>第三方服务器</strong>进行通讯，但有些场景就是要<strong>抛开第三端</strong>，直接进行两端通信，比如 P2P 下载，这种该怎么办呢？</p><p>这种情况下，其实也还是离不开第三方服务器的帮助。</p><p>假设还是 A 和 B 两个<strong>局域网内</strong>的机子，A 内网对应的 NAT 设备叫<code>NAT_A</code>，B 内网里的 NAT 设备叫<code>NAT_B</code>，和一个第三方服务器<code>server</code>。</p><p>流程如下。</p><p><strong>step1 和 2</strong>: A 主动去连 server，此时 A 对应的<code>NAT_A</code>就会留下 A 的内网地址和外网地址的<strong>映射关系</strong>，server 也拿到了 A 对应的外网 IP 地址和端口。</p><p><strong>step3 和 4</strong>: B 的操作和 A 一样，主动连第三方 server，<code>NAT_B</code>内留下 B 的内网地址和外网地址的<strong>映射关系</strong>，然后 server 也拿到了 B 对应的外网 IP 地址和端口。</p><p><strong>step5 和 step6 以及 step7</strong>: 重点来了。此时 server 发消息给 A，让 A 主动发<code>UDP</code>消息到 B 的外网 IP 地址和端口。此时 NAT_B 收到这个 A 的 UDP 数据包时，这时候<strong>根据 NAT_B 的设置不同</strong>，导致这时候<strong>有可能</strong>NAT_B 能直接转发数据到 B，那此时 A 和 B 就通了。但也<strong>有可能不通</strong>，直接丢包，不过丢包没关系，这个操作的<strong>目的是</strong>给 NAT_A 上留下<strong>有关 B 的映射关系</strong>。</p><p><strong>step8 和 step9 以及 step10</strong>: 跟 step5 一样熟悉的配方，此时 server 再发消息给 B，让 B 主动发<code>UDP</code>消息到 A 的外网 IP 地址和端口。NAT_B 上也留下了关于 A 到映射关系，这时候由于之前 NAT_A 上有过关于 B 的映射关系，此时 NAT_A 就能正常接受 B 的数据包，并将其转发给 A。到这里 A 和 B 就能正常进行数据通信了。这就是所谓的<strong>NAT 打洞</strong>。</p><p><strong>step11</strong>: 注意，之前我们都是用的<strong>UDP 数据包</strong>，目的只是为了在两个局域网的 NAT 上<strong>打个洞</strong>出来，实际上大部分应用用的都是 TCP 连接，所以，这时候我们还需要在 A 主动向 B 发起 TCP 连接。到此，我们就完成了两端之间的通信。</p><figure><img src="https://cdn.xiaobaidebug.top/1668246490871.png" alt="NAT打洞" tabindex="0" loading="lazy"><figcaption>NAT打洞</figcaption></figure><p>这里估计大家会有疑惑。</p><h3 id="端口已经被-udp-用过了-tcp-再用-那岂不是端口重复占用-address-already-in-use" tabindex="-1"><a class="header-anchor" href="#端口已经被-udp-用过了-tcp-再用-那岂不是端口重复占用-address-already-in-use"><span>端口已经被 udp 用过了，TCP 再用，那岂不是端口重复占用（address already in use）？</span></a></h3><p>其实并不会，端口重复占用的报错<strong>常见于</strong>两个 TCP 连接在不使用<code>SO_REUSEADDR</code>的情况下，重复使用了某个 IP 端口。而 UDP 和 TCP 之间却不会报这个错。之所以会有这个错，主要是因为在一个 linux 内核中，内核收到网络数据时，会通过五元组（<code>传输协议，源IP，目的IP，源端口，目的端口</code>）去唯一确定数据接受者。当五元组都一模一样的时候，内核就不知道该把数据发给谁。而 UDP 和 TCP 之间&quot;传输协议&quot;不同，因此五元组也不同，所以也就不会有上面的问题。<img src="https://cdn.xiaobaidebug.top/1668246557546.png" alt="五元组" loading="lazy"></p><h3 id="napt-还分为好多种类型-上面的-nat-打洞方案-都能成功吗" tabindex="-1"><a class="header-anchor" href="#napt-还分为好多种类型-上面的-nat-打洞方案-都能成功吗"><span>NAPT 还分为好多种类型，上面的 nat 打洞方案，都能成功吗？</span></a></h3><p>关于 NAPT，确实还细分为好几种类型，比如完全锥形 NAT 和限制型 NAT 啥的，但这并不是本文的重点。所以我就略过了。我们现在常见的都是锥形 NAT。上面的打洞方案适用于大部分场景，这其中包括限制最多的<strong>端口受限锥形 NAT</strong>。</p><figure><img src="https://cdn.xiaobaidebug.top/1668247032737.png" alt="1668247032737" tabindex="0" loading="lazy"><figcaption>1668247032737</figcaption></figure><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h1><ul><li>IPV4 地址有限，但通过 NAT 路由器，可以使得整个内网 N 多台机器，对外只使用一个公网 IP，大大节省了 IP 资源。</li><li>内网机子<strong>主动</strong>连接公网 IP，中间的 NAT 会将内网机子的内网 IP 转换为公网 IP，从而实现内网和外网的数据交互。</li><li>普通的 NAT 技术，只会修改网络包中的发送端和接收端 IP 地址，当内网设备较多时，将有可能导致冲突。因此一般都会使用 NAPT 技术，同时修改发送端和接收端的<strong>IP 地址和端口</strong>。</li><li>由于 NAT 的存在，公网 IP 是无法访问内网服务的，但通过内网穿透技术，就可以让公网 IP 访问内网服务。一波操作下来，就可以在公司的网络里访问家里的电脑。</li></ul><p>最后留个问题，有了 NAT 之后，原本并不富裕的 IPv4 地址突然就变得非常够用了。</p><p>那我们为什么还需要 IPv6？</p><p>另外 IPv6 号称地址多到每粒沙子都能拥有自己的 IP 地址，那我们还需要 NAT 吗？</p><h1 id="最后" tabindex="-1"><a class="header-anchor" href="#最后"><span>最后</span></a></h1><p>最近原创更文的阅读量稳步下跌，思前想后，夜里辗转反侧。</p><p>我有个不成熟的请求。</p><img src="https://cdn.xiaobaidebug.top/image-20220522162506224.png" alt="" style="zoom:20%;"><br><p><strong>离开广东好长时间了，好久没人叫我靓仔了。</strong></p><p>大家可以在<strong>评论区</strong>里，叫我一靓仔吗？</p><p>最近评论区里叫我 diao 毛的兄弟越来越多了。</p><p>so emo. 哪有什么 diao 毛，在你面前的，不过是一个漂泊在外，思念故乡的可怜打工人而已。</p><p>所以。</p><p>我这么善良质朴的愿望，能被满足吗？</p><h2 id="别说了-一起在知识的海洋里呛水吧" tabindex="-1"><a class="header-anchor" href="#别说了-一起在知识的海洋里呛水吧"><span>别说了，一起在知识的海洋里呛水吧</span></a></h2>',112);function h(u,b){const n=p("ExternalLinkIcon");return a(),g("div",null,[d,t("p",null,[o("上篇文章"),t("a",c,[o("「为什么我们家里的 IP 都是 192.168 开头的？」"),i(n)]),o("提到，因为 IPv4 地址有限，最大 42 亿个。为了更好的利用这有限的 IP 数量，网络分为"),l,o("，将 IP 分为了"),A,o("，一个局域网里的 N 多台机器都可以"),E,o('，从而大大增加了"可用 IP 数量"。')]),P])}const f=e(s,[["render",h],["__file","为什么我在公司里访问不了家里的电脑？.html.vue"]]),T=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%87%8C%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E5%AE%B6%E9%87%8C%E7%9A%84%E7%94%B5%E8%84%91%EF%BC%9F.html","title":"为什么我在公司里访问不了家里的电脑？","lang":"zh-CN","frontmatter":{"description":"为什么我在公司里访问不了家里的电脑？ 上篇文章「为什么我们家里的 IP 都是 192.168 开头的？」提到，因为 IPv4 地址有限，最大 42 亿个。为了更好的利用这有限的 IP 数量，网络分为局域网和广域网，将 IP 分为了私有 IP 和公网 IP，一个局域网里的 N 多台机器都可以共用一个公网 IP，从而大大增加了\\"可用 IP 数量\\"。 收发数...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%87%8C%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E5%AE%B6%E9%87%8C%E7%9A%84%E7%94%B5%E8%84%91%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"为什么我在公司里访问不了家里的电脑？"}],["meta",{"property":"og:description","content":"为什么我在公司里访问不了家里的电脑？ 上篇文章「为什么我们家里的 IP 都是 192.168 开头的？」提到，因为 IPv4 地址有限，最大 42 亿个。为了更好的利用这有限的 IP 数量，网络分为局域网和广域网，将 IP 分为了私有 IP 和公网 IP，一个局域网里的 N 多台机器都可以共用一个公网 IP，从而大大增加了\\"可用 IP 数量\\"。 收发数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.xiaobaidebug.top/1668122491454.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-19T10:15:58.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"为什么我在公司里访问不了家里的电脑？"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:modified_time","content":"2024-02-19T10:15:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么我在公司里访问不了家里的电脑？\\",\\"image\\":[\\"https://cdn.xiaobaidebug.top/1668122491454.png\\",\\"https://cdn.xiaobaidebug.top/1668213101375.png\\",\\"https://cdn.xiaobaidebug.top/1668212064544.png\\",\\"https://cdn.xiaobaidebug.top/1668213483971.png\\",\\"https://cdn.xiaobaidebug.top/1668214865696.png\\",\\"https://cdn.xiaobaidebug.top/1668215166060.png\\",\\"https://cdn.xiaobaidebug.top/1668230396921.png\\",\\"https://cdn.xiaobaidebug.top/1668230540076.png\\",\\"https://cdn.xiaobaidebug.top/1668230677376.png\\",\\"https://cdn.xiaobaidebug.top/1668231201752.png\\",\\"https://cdn.xiaobaidebug.top/1668238222836.png\\",\\"https://cdn.xiaobaidebug.top/1668238447411.png\\",\\"https://cdn.xiaobaidebug.top/1668240142867.png\\",\\"https://cdn.xiaobaidebug.top/1667783441963.png\\",\\"https://cdn.xiaobaidebug.top/1668241837853.png\\",\\"https://cdn.xiaobaidebug.top/1668242989803.png\\",\\"https://cdn.xiaobaidebug.top/1668242790670.png\\",\\"https://cdn.xiaobaidebug.top/1668246490871.png\\",\\"https://cdn.xiaobaidebug.top/1668246557546.png\\",\\"https://cdn.xiaobaidebug.top/1668247032737.png\\"],\\"dateModified\\":\\"2024-02-19T10:15:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%87%8C%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E5%AE%B6%E9%87%8C%E7%9A%84%E7%94%B5%E8%84%91%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%9C%A8%E5%85%AC%E5%8F%B8%E9%87%8C%E8%AE%BF%E9%97%AE%E4%B8%8D%E4%BA%86%E5%AE%B6%E9%87%8C%E7%9A%84%E7%94%B5%E8%84%91%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"为什么我在公司里访问不了家里的电脑？"}],["meta",{"property":"og:description","content":"为什么我在公司里访问不了家里的电脑？ 上篇文章「为什么我们家里的 IP 都是 192.168 开头的？」提到，因为 IPv4 地址有限，最大 42 亿个。为了更好的利用这有限的 IP 数量，网络分为局域网和广域网，将 IP 分为了私有 IP 和公网 IP，一个局域网里的 N 多台机器都可以共用一个公网 IP，从而大大增加了\\"可用 IP 数量\\"。 收发数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-19T10:15:58.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-19T10:15:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么我在公司里访问不了家里的电脑？\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-19T10:15:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"两个内网的聊天软件如何建立通讯","slug":"两个内网的聊天软件如何建立通讯","link":"#两个内网的聊天软件如何建立通讯","children":[]},{"level":2,"title":"两个内网的应用如何直接建立连接","slug":"两个内网的应用如何直接建立连接","link":"#两个内网的应用如何直接建立连接","children":[{"level":3,"title":"端口已经被 udp 用过了，TCP 再用，那岂不是端口重复占用（address already in use）？","slug":"端口已经被-udp-用过了-tcp-再用-那岂不是端口重复占用-address-already-in-use","link":"#端口已经被-udp-用过了-tcp-再用-那岂不是端口重复占用-address-already-in-use","children":[]},{"level":3,"title":"NAPT 还分为好多种类型，上面的 nat 打洞方案，都能成功吗？","slug":"napt-还分为好多种类型-上面的-nat-打洞方案-都能成功吗","link":"#napt-还分为好多种类型-上面的-nat-打洞方案-都能成功吗","children":[]}]},{"level":2,"title":"别说了，一起在知识的海洋里呛水吧","slug":"别说了-一起在知识的海洋里呛水吧","link":"#别说了-一起在知识的海洋里呛水吧","children":[]}],"git":{"createdTime":1708337357000,"updatedTime":1708337758000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":2}]},"readingTime":{"minutes":13.9,"words":4169},"filePathRelative":"计算机基础/网络基础/核心知识点/为什么我在公司里访问不了家里的电脑？.md","localizedDate":"2024年2月19日","autoDesc":true}');export{f as comp,T as data};
