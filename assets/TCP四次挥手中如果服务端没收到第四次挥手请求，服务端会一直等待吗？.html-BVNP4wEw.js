import{_ as s,c as r,b as e,d as n,e as a,a as E,o as i,r as p}from"./app-Dkl-ToTD.js";const l={},d={href:"https://github.com/xiaobaiTech/golangFamily",target:"_blank",rel:"noopener noreferrer"},A={href:"https://www.zhihu.com/search?q=%E6%9C%8D%E5%8A%A1%E7%AB%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2613763971%7D",target:"_blank",rel:"noopener noreferrer"},B={href:"https://xiaolincoding.com/network/3_tcp/tcp_optimize.html#%E4%B8%BB%E5%8A%A8%E6%96%B9%E7%9A%84%E4%BC%98%E5%8C%96",target:"_blank",rel:"noopener noreferrer"},c={href:"https://www.xiaobaidebug.top/2022/07/19/%E5%9B%BE%E8%A7%A3%E7%BD%91%E7%BB%9C/%E6%97%A2%E7%84%B6%E6%9C%89HTTP%E5%8D%8F%E8%AE%AE%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%98%E8%A6%81%E6%9C%89RPC%E5%8D%8F%E8%AE%AE%EF%BC%9F/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.xiaobaidebug.top/2021/03/26/%E5%9B%BE%E8%A7%A3%E7%BD%91%E7%BB%9C/TCP%E7%B2%98%E5%8C%85%EF%BC%81%E6%95%B0%E6%8D%AE%E5%8C%85%EF%BC%9A%E6%88%91%E5%8F%AA%E6%98%AF%E7%8A%AF%E4%BA%86%E6%AF%8F%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%8C%85%E9%83%BD%E4%BC%9A%E7%8A%AF%E7%9A%84%E9%94%99%EF%BC%8C%E7%A1%AC%E6%A0%B8%E5%9B%BE%E8%A7%A3/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.xiaobaidebug.top/2021/05/25/%E5%9B%BE%E8%A7%A3%E7%BD%91%E7%BB%9C/%E5%8A%A8%E5%9B%BE%E5%9B%BE%E8%A7%A3%EF%BC%81%E6%97%A2%E7%84%B6IP%E5%B1%82%E4%BC%9A%E5%88%86%E7%89%87%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88TCP%E5%B1%82%E4%B9%9F%E8%BF%98%E8%A6%81%E5%88%86%E6%AE%B5%EF%BC%9F/",target:"_blank",rel:"noopener noreferrer"};function g(C,t){const o=p("ExternalLinkIcon");return i(),r("div",null,[e("blockquote",null,[e("p",null,[t[1]||(t[1]=n("文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获面试题集。本文已经收录在 GitHub ")),e("a",d,[t[0]||(t[0]=n("https://github.com/xiaobaiTech/golangFamily")),a(o)]),t[2]||(t[2]=n(" , 有大厂面试完整考点和成长路线，欢迎 Star。"))])]),t[13]||(t[13]=e("p",null,"搬运一个在某乎的回答，水一篇文章吧。",-1)),t[14]||(t[14]=e("figure",null,[e("img",{src:"https://cdn.xiaobaidebug.top/image-20220813113924022.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1)),t[15]||(t[15]=e("figure",null,[e("img",{src:"https://cdn.xiaobaidebug.top/TCP四次挥手7.png",alt:"TCP四次挥手",tabindex:"0",loading:"lazy"}),e("figcaption",null,"TCP四次挥手")],-1)),e("p",null,[t[6]||(t[6]=n("正常情况下。只要数据传输完了，")),e("strong",null,[t[4]||(t[4]=n("不管是客户端还是")),e("a",A,[t[3]||(t[3]=n("服务端")),a(o)]),t[5]||(t[5]=n("，都可以主动发起四次挥手"))]),t[7]||(t[7]=n("，释放连接。"))]),t[16]||(t[16]=E(`<p>就跟上图画的一样，假设，这次四次挥手是由客户端主动发起的，那它就是<strong>主动方</strong>。服务器是被动接收客户端的挥手请求的，叫<strong>被动方</strong>。</p><p>客户端和服务器，一开始，都是处于<code>ESTABLISHED</code>状态。</p><p><strong>第一次挥手</strong>：一般情况下，主动方执行<code>close()</code>或 <code>shutdown()</code>方法，会发个<code>FIN报文</code>出来，表示&quot;<strong>我不再发送数据了</strong>&quot;。</p><p><strong>第二次挥手</strong>：在收到主动方的<code>FIN</code>报文后，被动方立马回应一个<code>ACK</code>，意思是&quot;我收到你的 FIN 了，也知道你不再发数据了&quot;。</p><p>上面提到的是<strong>主动方</strong>不再发送数据了。但如果这时候，<strong>被动方</strong>还有数据要发，那就继续发。注意，虽然第二次和第三次挥手之间，被动方是能发数据到主动方的，但主动方能不能正常收就不一定了，这个待会说。</p><p><strong>第三次挥手</strong>：在被动方在感知到第二次挥手之后，会做了一系列的收尾工作，最后也调用一个 <code>close()</code>, 这时候就会发出第三次挥手的 <code>FIN-ACK</code>。</p><p><strong>第四次挥手</strong>：主动方回一个<code>ACK</code>，意思是收到了。</p><p>其中第一次挥手和第三次挥手，都是我们在应用程序中主动触发的（比如调用<code>close()</code>方法），也就是我们平时写代码需要关注的地方。</p><p>第二和第四次挥手，都是内核协议栈自动帮我们完成的，我们写代码的时候碰不到这地方，因此也不需要太关心。</p><p>另外不管是主动还是被动，每方发出了一个 <code>FIN</code> 和一个<code>ACK</code> 。也收到了一个 <code>FIN</code> 和一个<code>ACK</code> 。</p><p>回到题主的问题。</p><p><strong>TCP 四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？</strong></p><p>第四次挥手是第三次挥手触发的。如果第四次挥手服务端一直没收到，那服务端会认为是不是自己的第三次挥手丢了，于是服务端不断重试发第三次挥手（FIN）.重发次数由系统的 tcp_orphan_retries 参数控制。重试多次还没成功，服务端直接断开链接。<strong>所以结论是服务端不会一直等待第四次挥手。</strong></p><figure><img src="https://cdn.xiaobaidebug.top/TCP第四次挥手丢失.drawio.png" alt="TCP第四次挥手丢失" tabindex="0" loading="lazy"><figcaption>TCP第四次挥手丢失</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># cat /proc/sys/net/ipv4/tcp_orphan_retries</span>
<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，你会发现<code>tcp_orphan_retries</code>参数是 0，但其实并不是不重试的意思。为 0 时，默认值为 8. 也就是重试 8 次。</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">/* Calculate maximal number or retries on an orphaned socket. */</span>
<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">tcp_orphan_retries</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">sock</span> <span class="token operator">*</span>sk<span class="token punctuation">,</span> <span class="token keyword">int</span> alive<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> retries <span class="token operator">=</span> sysctl_tcp_orphan_retries<span class="token punctuation">;</span> <span class="token comment">/* May be zero. */</span>

	<span class="token comment">/* We know from an ICMP that something is wrong. */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>sk<span class="token operator">-&gt;</span>sk_err_soft <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>alive<span class="token punctuation">)</span>
		retries <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

	<span class="token comment">/* However, if socket sent something recently, select some safe
	 * number of retries. 8 corresponds to &gt;100 seconds with minimal
	 * RTO of 200msec. */</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>retries <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> alive<span class="token punctuation">)</span>
		retries <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> retries<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然如果服务端重试发第三次挥手 FIN 的过程中，还是同样的端口和 IP,起了个新的客户端，这时候服务端重试的 FIN 被收到后，客户端就会认为是不正常的数据包，直接发个 RST 给服务端，这时候两端连接也会断开。</p><br><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><p>查资料的时候发现<strong>小林大佬已经写过，而且写的巨好</strong>，感兴趣的可以看下他的这篇文章。</p>`,21)),e("p",null,[t[9]||(t[9]=n("**《 如何优化 TCP?》**")),e("a",B,[t[8]||(t[8]=n("https://xiaolincoding.com/network/3_tcp/tcp_optimize.html#主动方的优化")),a(o)])]),t[17]||(t[17]=e("p",null,[n("链接太长，懒得复制的话，点击"),e("strong",null,"阅读原文"),n("可以直接跳转。")],-1)),t[18]||(t[18]=e("br",null,null,-1)),t[19]||(t[19]=e("br",null,null,-1)),t[20]||(t[20]=e("br",null,null,-1)),t[21]||(t[21]=e("h2",{id:"文章推荐",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#文章推荐"},[e("span",null,"文章推荐：")])],-1)),e("ul",null,[e("li",null,[e("a",c,[t[10]||(t[10]=n("既然有 HTTP 协议，为什么还要有 RPC")),a(o)])]),e("li",null,[e("a",u,[t[11]||(t[11]=n("TCP 粘包 数据包：我只是犯了每个数据包都会犯的错 |硬核图解")),a(o)])]),e("li",null,[e("a",m,[t[12]||(t[12]=n("动图图解！既然 IP 层会分片，为什么 TCP 层也还要分段？")),a(o)])])])])}const F=s(l,[["render",g],["__file","TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？.html.vue"]]),k=JSON.parse('{"path":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%B8%AD%E5%A6%82%E6%9E%9C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B2%A1%E6%94%B6%E5%88%B0%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%B7%E6%B1%82%EF%BC%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%9A%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E5%90%97%EF%BC%9F.html","title":"TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？","lang":"zh-CN","frontmatter":{"title":"TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？","date":"2022-08-13T22:57:55.000Z","tags":null,"categories":"图解网络","description":" 文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获面试题集。本文已经收录在 GitHub https://github.com/xiaobaiTech/golangFamily , 有大厂面试完整考点和成长路线，欢迎 Star。 搬运一个在某乎的回答，水一篇文章吧。 TCP四次挥手TCP四次挥手 正常情况下。只要数据传输完了...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%B8%AD%E5%A6%82%E6%9E%9C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B2%A1%E6%94%B6%E5%88%B0%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%B7%E6%B1%82%EF%BC%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%9A%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E5%90%97%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？"}],["meta",{"property":"og:description","content":" 文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获面试题集。本文已经收录在 GitHub https://github.com/xiaobaiTech/golangFamily , 有大厂面试完整考点和成长路线，欢迎 Star。 搬运一个在某乎的回答，水一篇文章吧。 TCP四次挥手TCP四次挥手 正常情况下。只要数据传输完了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.xiaobaidebug.top/image-20220813113924022.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T13:53:30.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:published_time","content":"2022-08-13T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-12T13:53:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？\\",\\"image\\":[\\"https://cdn.xiaobaidebug.top/image-20220813113924022.png\\",\\"https://cdn.xiaobaidebug.top/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B7.png\\",\\"https://cdn.xiaobaidebug.top/TCP%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%B8%A2%E5%A4%B1.drawio.png\\"],\\"datePublished\\":\\"2022-08-13T22:57:55.000Z\\",\\"dateModified\\":\\"2024-05-12T13:53:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%B8%AD%E5%A6%82%E6%9E%9C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B2%A1%E6%94%B6%E5%88%B0%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%B7%E6%B1%82%EF%BC%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%9A%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E5%90%97%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E4%B8%AD%E5%A6%82%E6%9E%9C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B2%A1%E6%94%B6%E5%88%B0%E7%AC%AC%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%AF%B7%E6%B1%82%EF%BC%8C%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%9A%E4%B8%80%E7%9B%B4%E7%AD%89%E5%BE%85%E5%90%97%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？"}],["meta",{"property":"og:description","content":" 文章持续更新，可以微信搜一搜「小白 debug」第一时间阅读，回复【面试】获面试题集。本文已经收录在 GitHub https://github.com/xiaobaiTech/golangFamily , 有大厂面试完整考点和成长路线，欢迎 Star。 搬运一个在某乎的回答，水一篇文章吧。 TCP四次挥手TCP四次挥手 正常情况下。只要数据传输完了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T13:53:30.000Z"}],["meta",{"property":"article:published_time","content":"2022-08-13T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-12T13:53:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-13T22:57:55.000Z\\",\\"dateModified\\":\\"2024-05-12T13:53:30.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]},{"level":2,"title":"文章推荐：","slug":"文章推荐","link":"#文章推荐","children":[]}],"git":{"createdTime":1708315055000,"updatedTime":1715522010000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":1},{"name":"xiaobai-tech","email":"948485496@qq.com","commits":1}]},"readingTime":{"minutes":4.72,"words":1415},"filePathRelative":"计算机基础/网络基础/核心知识点/TCP四次挥手中如果服务端没收到第四次挥手请求，服务端会一直等待吗？.md","localizedDate":"2022年8月13日","autoDesc":true}');export{F as comp,k as data};
