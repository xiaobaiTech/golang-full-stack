import{_ as a,c as s,a as e,o as t}from"./app-B2vuBf7b.js";const p={};function o(i,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="_10-python-标准库概览" tabindex="-1"><a class="header-anchor" href="#_10-python-标准库概览"><span>10. Python 标准库概览</span></a></h1><p>今天我们要聊聊 Python 标准库，听起来高大上，实际上它是 Python 的“工具箱”，里面装满了各种各样的功能模块，可以帮我们做很多事情哦。</p><h2 id="python-标准库是啥" tabindex="-1"><a class="header-anchor" href="#python-标准库是啥"><span>Python 标准库是啥？</span></a></h2><p>首先，让我们来搞清楚，Python 标准库到底是啥？简单来说，它就是一堆已经写好的代码，供我们在编程过程中直接拿来用的。就好像你去修理自行车，不需要自己造个工具，直接用现成的工具就行。</p><h2 id="我们都用标准库" tabindex="-1"><a class="header-anchor" href="#我们都用标准库"><span>我们都用标准库</span></a></h2><p>你知道吗？很多你在 Python 中常用的功能，都是来自于这个标准库。比如说，你想操作文件，就用到了 <code>os</code> 模块；你想进行数据序列化，那就用 <code>pickle</code>；你要处理 JSON 数据，就需要 <code>json</code>。</p><h2 id="常用的标准库" tabindex="-1"><a class="header-anchor" href="#常用的标准库"><span>常用的标准库</span></a></h2><ol><li><h3 id="os-模块" tabindex="-1"><a class="header-anchor" href="#os-模块"><span>os 模块</span></a></h3><p><code>os</code> 模块提供了许多与操作系统交互的函数，可以让你在 Python 中使用操作系统的功能。比如创建文件夹、删除文件等等。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> os

<span class="token comment"># 创建文件夹</span>
os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">&quot;my_folder&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 删除文件夹</span>
os<span class="token punctuation">.</span>rmdir<span class="token punctuation">(</span><span class="token string">&quot;my_folder&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="json-模块" tabindex="-1"><a class="header-anchor" href="#json-模块"><span>json 模块</span></a></h3><p><code>json</code> 模块用于编码和解码 JSON 数据。在与 Web 服务通信或者读取配置文件时，经常会用到它。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> json

data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">&#39;city&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;New York&#39;</span><span class="token punctuation">}</span>
json_data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># 编码为JSON格式的字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="datetime-模块" tabindex="-1"><a class="header-anchor" href="#datetime-模块"><span>datetime 模块</span></a></h3><p><code>datetime</code> 模块提供了处理日期和时间的类。你可以用它来进行日期和时间的计算、格式化等操作。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime

now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="random-模块" tabindex="-1"><a class="header-anchor" href="#random-模块"><span>random 模块</span></a></h3><p><code>random</code> 模块提供了生成随机数的功能，可以用于模拟实验、游戏等场景。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> random

random_number <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># 生成1到10之间的随机整数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="re-模块" tabindex="-1"><a class="header-anchor" href="#re-模块"><span>re 模块</span></a></h3><p><code>re</code> 模块是正则表达式的模块，可以用于文本的模式匹配和查找。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> re

pattern <span class="token operator">=</span> <span class="token string">r&#39;\\b\\w+\\b&#39;</span>  <span class="token comment"># 匹配单词</span>
text <span class="token operator">=</span> <span class="token string">&quot;Hello, this is a test.&quot;</span>
matches <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> text<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="math-模块" tabindex="-1"><a class="header-anchor" href="#math-模块"><span>math 模块</span></a></h3><p><code>math</code> 模块提供了一些数学运算相关的函数，比如三角函数、对数函数等。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> math

sqrt_2 <span class="token operator">=</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token comment"># 开平方</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="csv-模块" tabindex="-1"><a class="header-anchor" href="#csv-模块"><span>csv 模块</span></a></h3><p><code>csv</code> 模块提供了读写 CSV 文件的功能，非常适用于处理表格数据。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> csv

<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.csv&#39;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>
    writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
    writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Age&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;City&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;30&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New York&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="xml-etree-elementtree-模块" tabindex="-1"><a class="header-anchor" href="#xml-etree-elementtree-模块"><span>xml.etree.ElementTree 模块</span></a></h3><p><code>xml.etree.ElementTree</code> 模块提供了处理 XML 文件的功能，让你可以轻松解析和创建 XML 文档。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> xml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>ElementTree <span class="token keyword">as</span> ET

root <span class="token operator">=</span> ET<span class="token punctuation">.</span>Element<span class="token punctuation">(</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">)</span>
child <span class="token operator">=</span> ET<span class="token punctuation">.</span>SubElement<span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token string">&quot;child&quot;</span><span class="token punctuation">)</span>
child<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&quot;This is some text&quot;</span>
tree <span class="token operator">=</span> ET<span class="token punctuation">.</span>ElementTree<span class="token punctuation">(</span>root<span class="token punctuation">)</span>
tree<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;file.xml&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="sys-模块" tabindex="-1"><a class="header-anchor" href="#sys-模块"><span>sys 模块</span></a></h3><p><code>sys</code> 模块提供了一系列与 Python 解释器交互的变量和函数，比如获取命令行参数、退出程序等。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> sys

<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>  <span class="token comment"># 获取命令行参数</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><h3 id="urllib-模块" tabindex="-1"><a class="header-anchor" href="#urllib-模块"><span>urllib 模块</span></a></h3><pre><code>\`urllib\` 模块是用于处理 URL 的标准 Python 库，它包含了多个模块，比如 \`urllib.request\` 用于打开和读取 URL。

\`\`\`python
</code></pre><p>import urllib.request</p><pre><code>response = urllib.request.urlopen(&quot;http://www.baidu.com&quot;)
html = response.read()
print(html)
\`\`\`
</code></pre></li></ol><h2 id="实战-用标准库实现一个简单的爬虫" tabindex="-1"><a class="header-anchor" href="#实战-用标准库实现一个简单的爬虫"><span>实战：用标准库实现一个简单的爬虫</span></a></h2><p>现在，让我们动手实践一下吧！我们要用 Python 标准库中的 <code>urllib</code> 模块，来写一个简单的爬虫，获取百度首页的内容。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request

<span class="token keyword">def</span> <span class="token function">fetch_webpage</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    webpage <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> webpage

url <span class="token operator">=</span> <span class="token string">&quot;http://www.baidu.com&quot;</span>
webpage_content <span class="token operator">=</span> fetch_webpage<span class="token punctuation">(</span>url<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>webpage_content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上的代码会访问百度首页，并打印出网页的内容。是不是很神奇？这就是 Python 标准库的威力。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过这篇文章，我们了解了 Python 的标准库是什么，以及它能为我们提供哪些强大的功能模块。我们还通过实战例子，利用标准库中的 <code>urllib</code> 模块实现了一个简单的爬虫。</p><p>希望你现在对 Python 标准库有了更深入的认识。记住，它是你编程路上的得力助手，可以让你事半功倍！</p>`,15)]))}const c=a(p,[["render",o],["__file","10. Python 标准库概览.html.vue"]]),r=JSON.parse('{"path":"/script/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20Python%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88.html","title":"10. Python 标准库概览","lang":"zh-CN","frontmatter":{"description":"10. Python 标准库概览 今天我们要聊聊 Python 标准库，听起来高大上，实际上它是 Python 的“工具箱”，里面装满了各种各样的功能模块，可以帮我们做很多事情哦。 Python 标准库是啥？ 首先，让我们来搞清楚，Python 标准库到底是啥？简单来说，它就是一堆已经写好的代码，供我们在编程过程中直接拿来用的。就好像你去修理自行车，不...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/script/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20Python%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"10. Python 标准库概览"}],["meta",{"property":"og:description","content":"10. Python 标准库概览 今天我们要聊聊 Python 标准库，听起来高大上，实际上它是 Python 的“工具箱”，里面装满了各种各样的功能模块，可以帮我们做很多事情哦。 Python 标准库是啥？ 首先，让我们来搞清楚，Python 标准库到底是啥？简单来说，它就是一堆已经写好的代码，供我们在编程过程中直接拿来用的。就好像你去修理自行车，不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-17T02:00:57.000Z"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:modified_time","content":"2024-05-17T02:00:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10. Python 标准库概览\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-17T02:00:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/script/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20Python%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/script/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%20Python%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"10. Python 标准库概览"}],["meta",{"property":"og:description","content":"10. Python 标准库概览 今天我们要聊聊 Python 标准库，听起来高大上，实际上它是 Python 的“工具箱”，里面装满了各种各样的功能模块，可以帮我们做很多事情哦。 Python 标准库是啥？ 首先，让我们来搞清楚，Python 标准库到底是啥？简单来说，它就是一堆已经写好的代码，供我们在编程过程中直接拿来用的。就好像你去修理自行车，不..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-17T02:00:57.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-17T02:00:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10. Python 标准库概览\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-17T02:00:57.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Python 标准库是啥？","slug":"python-标准库是啥","link":"#python-标准库是啥","children":[]},{"level":2,"title":"我们都用标准库","slug":"我们都用标准库","link":"#我们都用标准库","children":[]},{"level":2,"title":"常用的标准库","slug":"常用的标准库","link":"#常用的标准库","children":[]},{"level":2,"title":"实战：用标准库实现一个简单的爬虫","slug":"实战-用标准库实现一个简单的爬虫","link":"#实战-用标准库实现一个简单的爬虫","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1715911257000,"updatedTime":1715911257000,"contributors":[{"name":"xiaobai-tech","email":"948485496@qq.com","commits":1}]},"readingTime":{"minutes":3.26,"words":977},"filePathRelative":"script/python/第1章：Python 基础知识/10. Python 标准库概览.md","localizedDate":"2024年5月17日","autoDesc":true}');export{c as comp,r as data};
