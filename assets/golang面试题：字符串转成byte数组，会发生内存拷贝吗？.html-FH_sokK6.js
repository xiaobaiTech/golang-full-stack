import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,e as t}from"./app-PzWgttNC.js";const s={},o=t(`<figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS83OGRhNTQ2My01M2ViLTRjNTctYTA4Yy0wOWJhNGYyOGZmOTYucG5n?x-oss-process=image/format,png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h1><p>字符串转成 byte 数组，会发生内存拷贝吗？</p><h1 id="怎么答" tabindex="-1"><a class="header-anchor" href="#怎么答"><span>怎么答</span></a></h1><p>字符串转成切片，会产生拷贝。严格来说，只要是发生类型强转都会发生内存拷贝。那么问题来了。<br> 频繁的内存拷贝操作听起来对性能不大友好。<strong>有没有什么办法可以在字符串转成切片的时候不用发生拷贝呢？</strong></p><h1 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现"><span>代码实现</span></a></h1><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;reflect&quot;</span>
	<span class="token string">&quot;unsafe&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span><span class="token string">&quot;aaa&quot;</span>
	ssh <span class="token operator">:=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>reflect<span class="token punctuation">.</span>StringHeader<span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
	b <span class="token operator">:=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ssh<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="解释" tabindex="-1"><a class="header-anchor" href="#解释"><span>解释</span></a></h1><ul><li><code>StringHeader</code> 是<code>字符串</code>在 go 的底层结构。</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">type</span> StringHeader <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Data <span class="token builtin">uintptr</span>
	Len  <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>SliceHeader</code> 是<code>切片</code>在 go 的底层结构。</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">type</span> SliceHeader <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Data <span class="token builtin">uintptr</span>
	Len  <span class="token builtin">int</span>
	Cap  <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>那么如果想要在底层转换二者，只需要把 <code>StringHeader</code> 的地址强转成 <code>SliceHeader</code> 就行。那么 go 有个很强的包叫 <code>unsafe</code> 。</p><ul><li><p>1.<code>unsafe.Pointer(&amp;a)</code>方法可以得到变量<code>a</code>的地址。</p></li><li><p>2.<code>(*reflect.StringHeader)(unsafe.Pointer(&amp;a))</code> 可以把字符串 a 转成底层结构的形式。</p></li><li><p>3.<code>(*[]byte)(unsafe.Pointer(&amp;ssh)) </code> 可以把 ssh 底层结构体转成 byte 的切片的指针。</p></li><li><p>4.再通过 <code>*</code>转为指针指向的实际内容。</p></li></ul></li></ul><h6 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h6><p>关注公众号:【小白 debug】<br><img src="https://cdn.xiaobaidebug.top/1696069689495.png" alt="" loading="lazy"></p>`,15),i=[o];function p(c,l){return a(),e("div",null,i)}const u=n(s,[["render",p],["__file","golang面试题：字符串转成byte数组，会发生内存拷贝吗？.html.vue"]]),g=JSON.parse('{"path":"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%88%90byte%E6%95%B0%E7%BB%84%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E5%86%85%E5%AD%98%E6%8B%B7%E8%B4%9D%E5%90%97%EF%BC%9F.html","title":"golang面试题：字符串转成byte数组，会发生内存拷贝吗？","lang":"zh-CN","frontmatter":{"title":"golang面试题：字符串转成byte数组，会发生内存拷贝吗？","date":"2020-05-17T22:57:55.000Z","tags":null,"categories":"golang面试题","description":" 问题 字符串转成 byte 数组，会发生内存拷贝吗？ 怎么答 字符串转成切片，会产生拷贝。严格来说，只要是发生类型强转都会发生内存拷贝。那么问题来了。 频繁的内存拷贝操作听起来对性能不大友好。有没有什么办法可以在字符串转成切片的时候不用发生拷贝呢？ 代码实现 解释 StringHeader 是字符串在 go 的底层结构。 SliceHeader 是切...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%88%90byte%E6%95%B0%E7%BB%84%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E5%86%85%E5%AD%98%E6%8B%B7%E8%B4%9D%E5%90%97%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"golang面试题：字符串转成byte数组，会发生内存拷贝吗？"}],["meta",{"property":"og:description","content":" 问题 字符串转成 byte 数组，会发生内存拷贝吗？ 怎么答 字符串转成切片，会产生拷贝。严格来说，只要是发生类型强转都会发生内存拷贝。那么问题来了。 频繁的内存拷贝操作听起来对性能不大友好。有没有什么办法可以在字符串转成切片的时候不用发生拷贝呢？ 代码实现 解释 StringHeader 是字符串在 go 的底层结构。 SliceHeader 是切..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS83OGRhNTQ2My01M2ViLTRjNTctYTA4Yy0wOWJhNGYyOGZmOTYucG5n?x-oss-process=image/format,png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-19T04:05:40.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"golang面试题：字符串转成byte数组，会发生内存拷贝吗？"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:published_time","content":"2020-05-17T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-19T04:05:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang面试题：字符串转成byte数组，会发生内存拷贝吗？\\",\\"image\\":[\\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS83OGRhNTQ2My01M2ViLTRjNTctYTA4Yy0wOWJhNGYyOGZmOTYucG5n?x-oss-process=image/format,png\\",\\"https://cdn.xiaobaidebug.top/1696069689495.png\\"],\\"datePublished\\":\\"2020-05-17T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-19T04:05:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%88%90byte%E6%95%B0%E7%BB%84%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E5%86%85%E5%AD%98%E6%8B%B7%E8%B4%9D%E5%90%97%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%88%90byte%E6%95%B0%E7%BB%84%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E5%86%85%E5%AD%98%E6%8B%B7%E8%B4%9D%E5%90%97%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"golang面试题：字符串转成byte数组，会发生内存拷贝吗？"}],["meta",{"property":"og:description","content":" 问题 字符串转成 byte 数组，会发生内存拷贝吗？ 怎么答 字符串转成切片，会产生拷贝。严格来说，只要是发生类型强转都会发生内存拷贝。那么问题来了。 频繁的内存拷贝操作听起来对性能不大友好。有没有什么办法可以在字符串转成切片的时候不用发生拷贝呢？ 代码实现 解释 StringHeader 是字符串在 go 的底层结构。 SliceHeader 是切..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-19T04:05:40.000Z"}],["meta",{"property":"article:published_time","content":"2020-05-17T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-19T04:05:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang面试题：字符串转成byte数组，会发生内存拷贝吗？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-17T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-19T04:05:40.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1708315540000,"updatedTime":1708315540000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":1}]},"readingTime":{"minutes":1.12,"words":337},"filePathRelative":"golang/核心知识点/golang面试题：字符串转成byte数组，会发生内存拷贝吗？.md","localizedDate":"2020年5月17日","autoDesc":true}');export{u as comp,g as data};
