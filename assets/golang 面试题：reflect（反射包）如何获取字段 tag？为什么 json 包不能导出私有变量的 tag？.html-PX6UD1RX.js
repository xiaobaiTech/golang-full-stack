import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as c,c as l,a as n,b as a,d as t,e}from"./app-D8yNzzsR.js";const i={},u=e(`<figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS9kYmE0ODBhYS04ZjNiLTQ2MmMtOTUzYy04OWUxYmNlYmE5YzQucG5n?x-oss-process=image/format,png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h1><p><code>json</code>包里使用的时候，会结构体里的字段边上加<code>tag</code>，有没有什么办法可以获取到这个<code>tag</code>的内容呢？</p><h1 id="举例" tabindex="-1"><a class="header-anchor" href="#举例"><span>举例</span></a></h1><p><code>tag</code>信息可以通过<code>反射（reflect包）</code>内的方法获取，通过一个例子加深理解。</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;reflect&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> J <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    a <span class="token builtin">string</span> <span class="token comment">//小写无tag</span>
    b <span class="token builtin">string</span> <span class="token string">\`json:&quot;B&quot;\`</span> <span class="token comment">//小写+tag</span>
    C <span class="token builtin">string</span> <span class="token comment">//大写无tag</span>
    D <span class="token builtin">string</span> <span class="token string">\`json:&quot;DD&quot; otherTag:&quot;good&quot;\`</span> <span class="token comment">//大写+tag</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">printTag</span><span class="token punctuation">(</span>stru <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>stru<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Elem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> t<span class="token punctuation">.</span><span class="token function">NumField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;结构体内第%v个字段 %v 对应的json tag是 %v , 还有otherTag？ = %v \\n&quot;</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>Tag<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>Tag<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;otherTag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    j <span class="token operator">:=</span> J<span class="token punctuation">{</span>
      a<span class="token punctuation">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
      b<span class="token punctuation">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span>
      C<span class="token punctuation">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span>
      D<span class="token punctuation">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token function">printTag</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>j<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>结构体内第<span class="token number">1</span>个字段 a 对应的json tag是  <span class="token punctuation">,</span> 还有otherTag？ <span class="token operator">=</span>
结构体内第<span class="token number">2</span>个字段 b 对应的json tag是 B <span class="token punctuation">,</span> 还有otherTag？ <span class="token operator">=</span>
结构体内第<span class="token number">3</span>个字段 C 对应的json tag是  <span class="token punctuation">,</span> 还有otherTag？ <span class="token operator">=</span>
结构体内第<span class="token number">4</span>个字段 D 对应的json tag是 DD <span class="token punctuation">,</span> 还有otherTag？ <span class="token operator">=</span> good
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="解释" tabindex="-1"><a class="header-anchor" href="#解释"><span>解释</span></a></h1><ul><li><code>printTag</code>方法传入的是 j 的指针。</li><li><code>reflect.TypeOf(stru).Elem()</code>获取指针指向的值对应的结构体内容。</li><li><code>NumField()</code>可以获得该结构体含有几个字段。</li><li>遍历结构体内的字段，通过<code>t.Field(i).Tag.Get(&quot;json&quot;)</code>可以获取到<code>tag</code>为<code>json</code>的字段。</li><li>如果结构体的字段有<code>多个tag</code>，比如叫<code>otherTag</code>,同样可以通过<code>t.Field(i).Tag.Get(&quot;otherTag&quot;)</code>获得。</li></ul><h1 id="再补一句" tabindex="-1"><a class="header-anchor" href="#再补一句"><span>再补一句</span></a></h1>`,11),r={href:"https://mp.weixin.qq.com/s?__biz=MzAwMDAxNjU4Mg==&mid=2247483698&idx=1&sn=352a5cddf20fe95f5ec26bfc9a6de64b&chksm=9aee289bad99a18d9914d085421e4f218b18d4f0c7a24da306642816e91fb4b235be6aea0e40&token=961196008&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"json包",-1),g=n("code",null,"私有变量的tag",-1),m=n("strong",null,"取不到",-1),k=n("code",null,"反射信息",-1),E=n("code",null,'t.Field(i).Tag.Get("json")',-1),v=n("strong",null,"却可以",-1),b=n("code",null,"json字段",-1),h=n("strong",null,"为什么",-1),f=e(`<p>其实<strong>准确的</strong>说法是，<code>json</code>包里不能导出私有变量的<code>tag</code>是因为<code>json</code>包里认为私有变量为不可导出的<code>Unexported</code>，所以<strong>跳过获取</strong>名为<code>json</code>的<code>tag</code>的内容。<br> 具体可以看<code>/src/encoding/json/encode.go:1070</code>的代码。</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">typeFields</span><span class="token punctuation">(</span>t reflect<span class="token punctuation">.</span>Type<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>field <span class="token punctuation">{</span>
    <span class="token comment">// 注释掉其他逻辑...</span>
    <span class="token comment">// 遍历结构体内的每个字段</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> f<span class="token punctuation">.</span>typ<span class="token punctuation">.</span><span class="token function">NumField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        sf <span class="token operator">:=</span> f<span class="token punctuation">.</span>typ<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        isUnexported <span class="token operator">:=</span> sf<span class="token punctuation">.</span>PkgPath <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span>
        <span class="token comment">// 注释掉其他逻辑...</span>
        <span class="token keyword">if</span> isUnexported <span class="token punctuation">{</span>
            <span class="token comment">// 如果是不可导出的变量则跳过</span>
            <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 如果是可导出的变量（public），则获取其json字段</span>
        tag <span class="token operator">:=</span> sf<span class="token punctuation">.</span>Tag<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;json&quot;</span><span class="token punctuation">)</span>
        <span class="token comment">// 注释掉其他逻辑...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注释掉其他逻辑...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="相关文章" tabindex="-1"><a class="header-anchor" href="#相关文章"><span>相关文章</span></a></h1>`,3),B={href:"https://golangguide.top/golang/%E9%9D%A2%E8%AF%95%E9%A2%98/2.Go%E8%BF%9B%E9%98%B6.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://golangguide.top/golang/%E9%9D%A2%E8%AF%95%E9%A2%98/1.Go%E5%85%A5%E9%97%A8.html",target:"_blank",rel:"noopener noreferrer"},F={href:"https://golangguide.top/golang/%E5%B8%B8%E7%94%A8%E5%8C%85%E5%A4%A7%E5%85%A8.html",target:"_blank",rel:"noopener noreferrer"},A={href:"https://golangguide.top/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",target:"_blank",rel:"noopener noreferrer"};function y(j,T){const s=p("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("a",r,[a("上篇文章"),t(s)]),a(" 提到"),d,a("不能导出"),g,a("是因为"),m,k,a("的说法，但是直接取"),E,v,a("获取到私有变量的"),b,a("，是"),h,a("呢？")]),f,n("ul",null,[n("li",null,[n("p",null,[n("a",B,[a("golang进阶面试题八股文合集"),t(s)])])]),n("li",null,[n("p",null,[n("a",_,[a("golang基础面试题八股文合集"),t(s)])])]),n("li",null,[n("p",null,[n("a",F,[a("golang常用标准库第三方库大全"),t(s)])])]),n("li",null,[n("p",null,[n("a",A,[a("golang学习路线"),t(s)])])])])])}const q=o(i,[["render",y],["__file","golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？.html.vue"]]),x=JSON.parse('{"path":"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%20%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Areflect%EF%BC%88%E5%8F%8D%E5%B0%84%E5%8C%85%EF%BC%89%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AD%97%E6%AE%B5%20tag%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%20json%20%E5%8C%85%E4%B8%8D%E8%83%BD%E5%AF%BC%E5%87%BA%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F%E7%9A%84%20tag%EF%BC%9F.html","title":"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？","lang":"zh-CN","frontmatter":{"title":"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？","date":"2020-07-11T22:57:55.000Z","tags":null,"categories":"golang面试题","description":" 问题 json包里使用的时候，会结构体里的字段边上加tag，有没有什么办法可以获取到这个tag的内容呢？ 举例 tag信息可以通过反射（reflect包）内的方法获取，通过一个例子加深理解。 输出 解释 printTag方法传入的是 j 的指针。 reflect.TypeOf(stru).Elem()获取指针指向的值对应的结构体内容。 NumFiel...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%20%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Areflect%EF%BC%88%E5%8F%8D%E5%B0%84%E5%8C%85%EF%BC%89%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AD%97%E6%AE%B5%20tag%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%20json%20%E5%8C%85%E4%B8%8D%E8%83%BD%E5%AF%BC%E5%87%BA%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F%E7%9A%84%20tag%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？"}],["meta",{"property":"og:description","content":" 问题 json包里使用的时候，会结构体里的字段边上加tag，有没有什么办法可以获取到这个tag的内容呢？ 举例 tag信息可以通过反射（reflect包）内的方法获取，通过一个例子加深理解。 输出 解释 printTag方法传入的是 j 的指针。 reflect.TypeOf(stru).Elem()获取指针指向的值对应的结构体内容。 NumFiel..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS9kYmE0ODBhYS04ZjNiLTQ2MmMtOTUzYy04OWUxYmNlYmE5YzQucG5n?x-oss-process=image/format,png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T01:37:12.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:published_time","content":"2020-07-11T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T01:37:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？\\",\\"image\\":[\\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS9kYmE0ODBhYS04ZjNiLTQ2MmMtOTUzYy04OWUxYmNlYmE5YzQucG5n?x-oss-process=image/format,png\\"],\\"datePublished\\":\\"2020-07-11T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-28T01:37:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%20%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Areflect%EF%BC%88%E5%8F%8D%E5%B0%84%E5%8C%85%EF%BC%89%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AD%97%E6%AE%B5%20tag%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%20json%20%E5%8C%85%E4%B8%8D%E8%83%BD%E5%AF%BC%E5%87%BA%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F%E7%9A%84%20tag%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%20%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9Areflect%EF%BC%88%E5%8F%8D%E5%B0%84%E5%8C%85%EF%BC%89%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E5%AD%97%E6%AE%B5%20tag%EF%BC%9F%E4%B8%BA%E4%BB%80%E4%B9%88%20json%20%E5%8C%85%E4%B8%8D%E8%83%BD%E5%AF%BC%E5%87%BA%E7%A7%81%E6%9C%89%E5%8F%98%E9%87%8F%E7%9A%84%20tag%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？"}],["meta",{"property":"og:description","content":" 问题 json包里使用的时候，会结构体里的字段边上加tag，有没有什么办法可以获取到这个tag的内容呢？ 举例 tag信息可以通过反射（reflect包）内的方法获取，通过一个例子加深理解。 输出 解释 printTag方法传入的是 j 的指针。 reflect.TypeOf(stru).Elem()获取指针指向的值对应的结构体内容。 NumFiel..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T01:37:12.000Z"}],["meta",{"property":"article:published_time","content":"2020-07-11T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T01:37:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-07-11T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-28T01:37:12.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1708315540000,"updatedTime":1709084232000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":2}]},"readingTime":{"minutes":2.55,"words":765},"filePathRelative":"golang/核心知识点/golang 面试题：reflect（反射包）如何获取字段 tag？为什么 json 包不能导出私有变量的 tag？.md","localizedDate":"2020年7月11日","autoDesc":true}');export{q as comp,x as data};
