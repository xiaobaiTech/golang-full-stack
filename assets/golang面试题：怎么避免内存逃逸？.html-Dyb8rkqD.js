import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app-Dn9HY-uS.js";const i={},u=e(`<figure><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS9jZDJkODUxZS1hZWQ1LTRlNjYtOGFmNy0wMjczZDc0NDgzNzAucG5n?x-oss-process=image/format,png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h1><p>怎么避免<strong>内存逃逸</strong>？</p><h1 id="怎么答" tabindex="-1"><a class="header-anchor" href="#怎么答"><span>怎么答</span></a></h1><p>在<code>runtime/stubs.go:133</code>有个函数叫<code>noescape</code>。<code>noescape</code>可以在逃逸分析中<strong>隐藏一个指针</strong>。让这个指针在逃逸分析中<strong>不会被检测为逃逸</strong>。</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code> <span class="token comment">// noescape hides a pointer from escape analysis.  noescape is</span>
 <span class="token comment">// the identity function but escape analysis doesn&#39;t think the</span>
 <span class="token comment">// output depends on the input.  noescape is inlined and currently</span>
 <span class="token comment">// compiles down to zero instructions.</span>
 <span class="token comment">// USE CAREFULLY!</span>
 <span class="token comment">//go:nosplit</span>
 <span class="token keyword">func</span> <span class="token function">noescape</span><span class="token punctuation">(</span>p unsafe<span class="token punctuation">.</span>Pointer<span class="token punctuation">)</span> unsafe<span class="token punctuation">.</span>Pointer <span class="token punctuation">{</span>
     x <span class="token operator">:=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
     <span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span>x <span class="token operator">^</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="举例" tabindex="-1"><a class="header-anchor" href="#举例"><span>举例</span></a></h1><ul><li>通过一个例子加深理解，接下来尝试下怎么通过 <code>go build -gcflags=-m</code> 查看逃逸的情况。</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;unsafe&quot;</span>
<span class="token punctuation">)</span>
<span class="token keyword">type</span> A <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	S <span class="token operator">*</span><span class="token builtin">string</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>f <span class="token operator">*</span>A<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">*</span>f<span class="token punctuation">.</span>S
<span class="token punctuation">}</span>
<span class="token keyword">type</span> ATrick <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	S unsafe<span class="token punctuation">.</span>Pointer
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>f <span class="token operator">*</span>ATrick<span class="token punctuation">)</span> <span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">NewA</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> A <span class="token punctuation">{</span>
	<span class="token keyword">return</span> A<span class="token punctuation">{</span>S<span class="token punctuation">:</span> <span class="token operator">&amp;</span>s<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">NewATrick</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> ATrick <span class="token punctuation">{</span>
	<span class="token keyword">return</span> ATrick<span class="token punctuation">{</span>S<span class="token punctuation">:</span> <span class="token function">noescape</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">noescape</span><span class="token punctuation">(</span>p unsafe<span class="token punctuation">.</span>Pointer<span class="token punctuation">)</span> unsafe<span class="token punctuation">.</span>Pointer <span class="token punctuation">{</span>
	x <span class="token operator">:=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
	<span class="token keyword">return</span> unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span>x <span class="token operator">^</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token string">&quot;hello&quot;</span>
	f1 <span class="token operator">:=</span> <span class="token function">NewA</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	f2 <span class="token operator">:=</span> <span class="token function">NewATrick</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	s1 <span class="token operator">:=</span> f1<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	s2 <span class="token operator">:=</span> f2<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token boolean">_</span> <span class="token operator">=</span> s1 <span class="token operator">+</span> s2
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行<code>go build -gcflags=-m main.go</code></p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>$<span class="token keyword">go</span> build <span class="token operator">-</span>gcflags<span class="token operator">=</span><span class="token operator">-</span>m main<span class="token punctuation">.</span><span class="token keyword">go</span>
# command<span class="token operator">-</span>line<span class="token operator">-</span>arguments
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> can inline <span class="token punctuation">(</span><span class="token operator">*</span>A<span class="token punctuation">)</span><span class="token punctuation">.</span>String
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> can inline <span class="token punctuation">(</span><span class="token operator">*</span>ATrick<span class="token punctuation">)</span><span class="token punctuation">.</span>String
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> can inline NewA
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">31</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> can inline noescape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">27</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> can inline NewATrick
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token number">29</span><span class="token punctuation">:</span> inlining call to noescape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> can inline main
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">:</span> inlining call to NewA
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">39</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">:</span> inlining call to NewATrick
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">39</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">:</span> inlining call to noescape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">40</span><span class="token punctuation">:</span><span class="token number">17</span><span class="token punctuation">:</span> inlining call to <span class="token punctuation">(</span><span class="token operator">*</span>A<span class="token punctuation">)</span><span class="token punctuation">.</span>String
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">17</span><span class="token punctuation">:</span> inlining call to <span class="token punctuation">(</span><span class="token operator">*</span>ATrick<span class="token punctuation">)</span><span class="token punctuation">.</span>String
<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>folders<span class="token operator">/</span><span class="token number">45</span><span class="token operator">/</span>qx9lfw2s2zzgvhzg3mtzkwzc0000gn<span class="token operator">/</span>T<span class="token operator">/</span><span class="token keyword">go</span><span class="token operator">-</span>build763863171<span class="token operator">/</span>b001<span class="token operator">/</span>_gomod_<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span> can inline init<span class="token punctuation">.</span><span class="token number">0</span>
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">:</span> leaking param<span class="token punctuation">:</span> f to result ~r0 level<span class="token operator">=</span><span class="token number">2</span>
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">:</span><span class="token number">7</span><span class="token punctuation">:</span> leaking param<span class="token punctuation">:</span> f to result ~r0 level<span class="token operator">=</span><span class="token number">2</span>
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>s escapes to heap
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span> moved to heap<span class="token punctuation">:</span> s
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">27</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">:</span> NewATrick s does not escape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token number">45</span><span class="token punctuation">:</span> NewATrick <span class="token operator">&amp;</span>s does not escape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">31</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span> noescape p does not escape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">:</span> main <span class="token operator">&amp;</span>s does not escape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">39</span><span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">:</span> main <span class="token operator">&amp;</span>s does not escape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">40</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">:</span> main f1 does not escape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">41</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">:</span> main f2 does not escape
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">42</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span> main s1 <span class="token operator">+</span> s2 does not escape
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中主要看中间一小段</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>s escapes to heap    <span class="token comment">//这个是NewA中的，逃逸了</span>
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">:</span> moved to heap<span class="token punctuation">:</span> s
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">27</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">:</span> NewATrick s does not escape <span class="token comment">// NewATrick里的s的却没逃逸</span>
<span class="token punctuation">.</span><span class="token operator">/</span>main<span class="token punctuation">.</span><span class="token keyword">go</span><span class="token punctuation">:</span><span class="token number">28</span><span class="token punctuation">:</span><span class="token number">45</span><span class="token punctuation">:</span> NewATrick <span class="token operator">&amp;</span>s does not escape
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="解释" tabindex="-1"><a class="header-anchor" href="#解释"><span>解释</span></a></h1><ul><li><p>上段代码对<code>A</code>和<code>ATrick</code>同样的功能有两种实现：他们包含一个 <code>string</code> ，然后用 <code>String()</code> 方法返回这个字符串。但是从逃逸分析看<code>ATrick</code> 版本没有逃逸。</p></li><li><p><code>noescape()</code> 函数的作用是遮蔽输入和输出的依赖关系。使编译器不认为 <code>p</code> 会通过 <code>x</code> 逃逸， 因为 <code>uintptr()</code> 产生的引用是编译器无法理解的。</p></li><li><p>内置的 <code>uintptr</code> 类型是一个真正的指针类型，但是在编译器层面，它只是一个存储一个 <code>指针地址</code> 的 <code>int</code> 类型。代码的最后一行返回 <code>unsafe.Pointer</code> 也是一个 <code>int</code>。</p></li><li><p><code>noescape()</code> 在 <code>runtime</code> 包中使用 <code>unsafe.Pointer</code> 的地方被大量使用。如果作者清楚被 <code>unsafe.Pointer</code> 引用的数据肯定不会被逃逸，但编译器却不知道的情况下，这是很有用的。</p></li><li><p><strong>面试中秀一秀是可以的</strong>，如果在实际项目中如果使用这种 unsafe 包大概率会被同事打死。<strong>不建议使用！</strong> 毕竟包的名字就叫做 <code>unsafe</code>, 而且源码中的注释也写明了 <code>USE CAREFULLY! </code>。</p></li></ul><h3 id="文章推荐" tabindex="-1"><a class="header-anchor" href="#文章推荐"><span>文章推荐：</span></a></h3>`,16),r={href:"https://mp.weixin.qq.com/s?__biz=MzAwMDAxNjU4Mg==&mid=2247483686&idx=1&sn=e48c51107191f02da5751a19a54f7d41&chksm=9aee288fad99a199c126d5ff735af7320356ce4bb5753ae59ac6231e596354499414b5705b79&token=2092782362&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},k={href:"https://mp.weixin.qq.com/s?__biz=MzAwMDAxNjU4Mg==&mid=2247483669&idx=1&sn=88f754ddabc04eb3f66ba8ac37ee1461&chksm=9aee28bcad99a1aa1ada41cfccaffc7ef4719a9bc11c1bef45b7d1b5427c1faa12d8d0c3156f&token=2092782362&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},d={href:"https://mp.weixin.qq.com/s?__biz=MzAwMDAxNjU4Mg==&mid=2247483664&idx=1&sn=23a0cf8a78b1d9c30b2e3bc102bf421e&chksm=9aee28b9ad99a1af6c879ba4b1f6439e4c21c363f0a668f322c082ca334b62255507828f66d4&token=2092782362&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"中文、数字、英文字母",-1),g={href:"https://mp.weixin.qq.com/s?__biz=MzAwMDAxNjU4Mg==&mid=2247483674&idx=1&sn=ce4b5fee48c54ff69127ef2bd5d91427&chksm=9aee28b3ad99a1a57eed7651a16fd4bdc35ff23937e423c5e1322a234652fd135f1a16abbece&token=2092782362&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},b={href:"https://mp.weixin.qq.com/s?__biz=MzAwMDAxNjU4Mg==&mid=2247483679&idx=1&sn=7075859e59741b1d0a81dc472b8ce45f&chksm=9aee28b6ad99a1a0599416886660d9ea56bd7fec18841af0e5fe86c3daea3973732a83d7eabb&token=2092782362&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},v=e('<h6 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h6><p>关注公众号:【小白 debug】<br><img src="https://cdn.xiaobaidebug.top/1696069689495.png" alt="" loading="lazy"></p><h2 id="相关文章" tabindex="-1"><a class="header-anchor" href="#相关文章"><span>相关文章</span></a></h2>',3),f={href:"https://golangguide.top/golang/%E9%9D%A2%E8%AF%95%E9%A2%98/2.Go%E8%BF%9B%E9%98%B6.html",target:"_blank",rel:"noopener noreferrer"},h={href:"https://golangguide.top/golang/%E9%9D%A2%E8%AF%95%E9%A2%98/1.Go%E5%85%A5%E9%97%A8.html",target:"_blank",rel:"noopener noreferrer"},E={href:"https://golangguide.top/golang/%E5%B8%B8%E7%94%A8%E5%8C%85%E5%A4%A7%E5%85%A8.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://golangguide.top/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",target:"_blank",rel:"noopener noreferrer"};function A(_,w){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[s("golang 面试题：简单聊聊内存逃逸？"),t(a)])]),n("li",null,[n("a",k,[s("golang 面试题：字符串转成 byte 数组，会发生内存拷贝吗？"),t(a)])]),n("li",null,[n("a",d,[s("golang 面试题：翻转含有"),m,s("的字符串"),t(a)])]),n("li",null,[n("a",g,[s("golang 面试题：拷贝大切片一定比小切片代价大吗？"),t(a)])]),n("li",null,[n("a",b,[s("golang 面试题：能说说 uintptr 和 unsafe.Pointer 的区别吗？"),t(a)])])]),v,n("ul",null,[n("li",null,[n("p",null,[n("a",f,[s("golang进阶面试题八股文合集"),t(a)])])]),n("li",null,[n("p",null,[n("a",h,[s("golang基础面试题八股文合集"),t(a)])])]),n("li",null,[n("p",null,[n("a",E,[s("golang常用标准库第三方库大全"),t(a)])])]),n("li",null,[n("p",null,[n("a",y,[s("golang学习路线"),t(a)])])])])])}const B=p(i,[["render",A],["__file","golang面试题：怎么避免内存逃逸？.html.vue"]]),F=JSON.parse('{"path":"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E6%80%8E%E4%B9%88%E9%81%BF%E5%85%8D%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%EF%BC%9F.html","title":"golang面试题：怎么避免内存逃逸？","lang":"zh-CN","frontmatter":{"title":"golang面试题：怎么避免内存逃逸？","date":"2020-05-16T22:57:55.000Z","tags":null,"categories":"golang面试题","description":" 问题 怎么避免内存逃逸？ 怎么答 在runtime/stubs.go:133有个函数叫noescape。noescape可以在逃逸分析中隐藏一个指针。让这个指针在逃逸分析中不会被检测为逃逸。 举例 通过一个例子加深理解，接下来尝试下怎么通过 go build -gcflags=-m 查看逃逸的情况。 执行go build -gcflags=-m ma...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E6%80%8E%E4%B9%88%E9%81%BF%E5%85%8D%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"golang面试题：怎么避免内存逃逸？"}],["meta",{"property":"og:description","content":" 问题 怎么避免内存逃逸？ 怎么答 在runtime/stubs.go:133有个函数叫noescape。noescape可以在逃逸分析中隐藏一个指针。让这个指针在逃逸分析中不会被检测为逃逸。 举例 通过一个例子加深理解，接下来尝试下怎么通过 go build -gcflags=-m 查看逃逸的情况。 执行go build -gcflags=-m ma..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS9jZDJkODUxZS1hZWQ1LTRlNjYtOGFmNy0wMjczZDc0NDgzNzAucG5n?x-oss-process=image/format,png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T01:37:12.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"golang面试题：怎么避免内存逃逸？"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:published_time","content":"2020-05-16T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T01:37:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang面试题：怎么避免内存逃逸？\\",\\"image\\":[\\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWdrci5jbi1iai51ZmlsZW9zLmNvbS9jZDJkODUxZS1hZWQ1LTRlNjYtOGFmNy0wMjczZDc0NDgzNzAucG5n?x-oss-process=image/format,png\\",\\"https://cdn.xiaobaidebug.top/1696069689495.png\\"],\\"datePublished\\":\\"2020-05-16T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-28T01:37:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E6%80%8E%E4%B9%88%E9%81%BF%E5%85%8D%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/golang%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%9A%E6%80%8E%E4%B9%88%E9%81%BF%E5%85%8D%E5%86%85%E5%AD%98%E9%80%83%E9%80%B8%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"golang面试题：怎么避免内存逃逸？"}],["meta",{"property":"og:description","content":" 问题 怎么避免内存逃逸？ 怎么答 在runtime/stubs.go:133有个函数叫noescape。noescape可以在逃逸分析中隐藏一个指针。让这个指针在逃逸分析中不会被检测为逃逸。 举例 通过一个例子加深理解，接下来尝试下怎么通过 go build -gcflags=-m 查看逃逸的情况。 执行go build -gcflags=-m ma..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T01:37:12.000Z"}],["meta",{"property":"article:published_time","content":"2020-05-16T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T01:37:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"golang面试题：怎么避免内存逃逸？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-16T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-28T01:37:12.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"文章推荐：","slug":"文章推荐","link":"#文章推荐","children":[]},{"level":2,"title":"相关文章","slug":"相关文章","link":"#相关文章","children":[]}],"git":{"createdTime":1708315540000,"updatedTime":1709084232000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":2}]},"readingTime":{"minutes":3.65,"words":1096},"filePathRelative":"golang/核心知识点/golang面试题：怎么避免内存逃逸？.md","localizedDate":"2020年5月16日","autoDesc":true}');export{B as comp,F as data};
