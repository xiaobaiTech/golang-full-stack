import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as l,b as n,d as e,e as t,o as i,r as c}from"./app-G1Aj0uLO.js";const r={},u={href:"https://golangguide.top/golang/%E9%9D%A2%E8%AF%95%E9%A2%98/2.Go%E8%BF%9B%E9%98%B6.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://golangguide.top/golang/%E9%9D%A2%E8%AF%95%E9%A2%98/1.Go%E5%85%A5%E9%97%A8.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://golangguide.top/golang/%E5%B8%B8%E7%94%A8%E5%8C%85%E5%A4%A7%E5%85%A8.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://golangguide.top/golang/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.html",target:"_blank",rel:"noopener noreferrer"};function k(E,a){const s=c("ExternalLinkIcon");return i(),p("div",null,[a[4]||(a[4]=l(`<figure><img src="https://i.loli.net/2020/09/23/cPoMQsnbLIExiBZ.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h1><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v<span class="token operator">:=</span><span class="token keyword">range</span> s <span class="token punctuation">{</span>
		s <span class="token operator">=</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;len(s)=%v\\n&quot;</span><span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>这个代码会造成死循环吗？</strong></p><h1 id="怎么答" tabindex="-1"><a class="header-anchor" href="#怎么答"><span>怎么答</span></a></h1><ul><li><strong>不会死循环</strong>，<code>for range</code>其实是<code>golang</code>的<code>语法糖</code>，在循环开始前会获取切片的长度 <code>len(切片)</code>，然后再执行<code>len(切片)</code>次数的循环。</li></ul><h1 id="解释" tabindex="-1"><a class="header-anchor" href="#解释"><span>解释</span></a></h1><ul><li><code>for range</code>的源码是</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token comment">// The loop we generate:</span>
<span class="token comment">//   for_temp := range</span>
<span class="token comment">//   len_temp := len(for_temp)</span>
<span class="token comment">//   for index_temp = 0; index_temp &lt; len_temp; index_temp++ {</span>
<span class="token comment">//           value_temp = for_temp[index_temp]</span>
<span class="token comment">//           index = index_temp</span>
<span class="token comment">//           value = value_temp</span>
<span class="token comment">//           original body</span>
<span class="token comment">//   }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>上面的代码会被编译器认为是</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span>
	for_temp <span class="token operator">:=</span> s
	len_temp <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>for_temp<span class="token punctuation">)</span>
	<span class="token keyword">for</span> index_temp <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> index_temp <span class="token operator">&lt;</span> len_temp<span class="token punctuation">;</span> index_temp<span class="token operator">++</span> <span class="token punctuation">{</span>
		value_temp <span class="token operator">:=</span> for_temp<span class="token punctuation">[</span>index_temp<span class="token punctuation">]</span>
		<span class="token boolean">_</span> <span class="token operator">=</span> index_temp
		value <span class="token operator">:=</span> value_temp
		<span class="token comment">// 以下是 original body</span>
		s <span class="token operator">=</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;len(s)=%v\\n&quot;</span><span class="token punctuation">,</span><span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>代码运行输出</li></ul><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">6</span>
<span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">7</span>
<span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">8</span>
<span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">9</span>
<span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>所以说，那个同事用的是 golang 吗？</strong></p><h1 id="文章推荐" tabindex="-1"><a class="header-anchor" href="#文章推荐"><span>文章推荐：</span></a></h1>`,15)),n("ul",null,[n("li",null,[n("p",null,[n("a",u,[a[0]||(a[0]=e("golang进阶面试题八股文合集")),t(s)])])]),n("li",null,[n("p",null,[n("a",d,[a[1]||(a[1]=e("golang基础面试题八股文合集")),t(s)])])]),n("li",null,[n("p",null,[n("a",m,[a[2]||(a[2]=e("golang常用标准库第三方库大全")),t(s)])])]),n("li",null,[n("p",null,[n("a",g,[a[3]||(a[3]=e("golang学习路线")),t(s)])])])])])}const b=o(r,[["render",k],["__file","昨天那个在for循环里append元素的同事，今天还在么？.html.vue"]]),f=JSON.parse('{"path":"/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%98%A8%E5%A4%A9%E9%82%A3%E4%B8%AA%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E9%87%8Cappend%E5%85%83%E7%B4%A0%E7%9A%84%E5%90%8C%E4%BA%8B%EF%BC%8C%E4%BB%8A%E5%A4%A9%E8%BF%98%E5%9C%A8%E4%B9%88%EF%BC%9F.html","title":"昨天那个在for循环里append元素的同事，今天还在么？","lang":"zh-CN","frontmatter":{"title":"昨天那个在for循环里append元素的同事，今天还在么？","date":"2020-09-12T22:57:55.000Z","tags":null,"categories":"golang面试题","description":" 问题 这个代码会造成死循环吗？ 怎么答 不会死循环，for range其实是golang的语法糖，在循环开始前会获取切片的长度 len(切片)，然后再执行len(切片)次数的循环。 解释 for range的源码是 上面的代码会被编译器认为是 代码运行输出 所以说，那个同事用的是 golang 吗？ 文章推荐： golang进阶面试题八股文合集 go...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%98%A8%E5%A4%A9%E9%82%A3%E4%B8%AA%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E9%87%8Cappend%E5%85%83%E7%B4%A0%E7%9A%84%E5%90%8C%E4%BA%8B%EF%BC%8C%E4%BB%8A%E5%A4%A9%E8%BF%98%E5%9C%A8%E4%B9%88%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"昨天那个在for循环里append元素的同事，今天还在么？"}],["meta",{"property":"og:description","content":" 问题 这个代码会造成死循环吗？ 怎么答 不会死循环，for range其实是golang的语法糖，在循环开始前会获取切片的长度 len(切片)，然后再执行len(切片)次数的循环。 解释 for range的源码是 上面的代码会被编译器认为是 代码运行输出 所以说，那个同事用的是 golang 吗？ 文章推荐： golang进阶面试题八股文合集 go..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i.loli.net/2020/09/23/cPoMQsnbLIExiBZ.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T01:37:12.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"昨天那个在for循环里append元素的同事，今天还在么？"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:published_time","content":"2020-09-12T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T01:37:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"昨天那个在for循环里append元素的同事，今天还在么？\\",\\"image\\":[\\"https://i.loli.net/2020/09/23/cPoMQsnbLIExiBZ.png\\"],\\"datePublished\\":\\"2020-09-12T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-28T01:37:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%98%A8%E5%A4%A9%E9%82%A3%E4%B8%AA%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E9%87%8Cappend%E5%85%83%E7%B4%A0%E7%9A%84%E5%90%8C%E4%BA%8B%EF%BC%8C%E4%BB%8A%E5%A4%A9%E8%BF%98%E5%9C%A8%E4%B9%88%EF%BC%9F.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/golang/%E6%A0%B8%E5%BF%83%E7%9F%A5%E8%AF%86%E7%82%B9/%E6%98%A8%E5%A4%A9%E9%82%A3%E4%B8%AA%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E9%87%8Cappend%E5%85%83%E7%B4%A0%E7%9A%84%E5%90%8C%E4%BA%8B%EF%BC%8C%E4%BB%8A%E5%A4%A9%E8%BF%98%E5%9C%A8%E4%B9%88%EF%BC%9F.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"昨天那个在for循环里append元素的同事，今天还在么？"}],["meta",{"property":"og:description","content":" 问题 这个代码会造成死循环吗？ 怎么答 不会死循环，for range其实是golang的语法糖，在循环开始前会获取切片的长度 len(切片)，然后再执行len(切片)次数的循环。 解释 for range的源码是 上面的代码会被编译器认为是 代码运行输出 所以说，那个同事用的是 golang 吗？ 文章推荐： golang进阶面试题八股文合集 go..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T01:37:12.000Z"}],["meta",{"property":"article:published_time","content":"2020-09-12T22:57:55.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-28T01:37:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"昨天那个在for循环里append元素的同事，今天还在么？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-12T22:57:55.000Z\\",\\"dateModified\\":\\"2024-02-28T01:37:12.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1708315540000,"updatedTime":1709084232000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":2}]},"readingTime":{"minutes":1.23,"words":370},"filePathRelative":"golang/核心知识点/昨天那个在for循环里append元素的同事，今天还在么？.md","localizedDate":"2020年9月12日","autoDesc":true}');export{b as comp,f as data};
