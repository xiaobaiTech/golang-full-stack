import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Cf5go4s7.js";const e={},p=t(`<h1 id="_8-面向对象编程基础" tabindex="-1"><a class="header-anchor" href="#_8-面向对象编程基础"><span>8. 面向对象编程基础</span></a></h1><p>今天我们要谈论一个非常酷的编程概念—— <strong>面向对象编程</strong> 。别担心，我会用最简单易懂的方式给你讲解。</p><h2 id="面向对象编程是什么" tabindex="-1"><a class="header-anchor" href="#面向对象编程是什么"><span>面向对象编程是什么？</span></a></h2><p>首先，让我们聊聊什么是面向对象编程。在编程中，我们可以把程序看作是一群小工具的集合，而这些小工具可以相互配合，一起完成任务。</p><p>面向对象编程就是一种把现实世界的事物抽象成代码中的对象的方法。这样一来，我们可以更自然地组织和管理我们的程序。</p><h2 id="类和对象-编程的超能力" tabindex="-1"><a class="header-anchor" href="#类和对象-编程的超能力"><span>类和对象：编程的超能力</span></a></h2><p>在面向对象编程中，最重要的概念是<strong>类</strong>和 <strong>对象</strong> 。类可以看作是一种蓝图，描述了一类事物的共同特征和行为。而对象则是根据这个蓝图创建出来的实际存在。</p><p>比如，我们可以有一个类叫做<code>Dog</code>，它描述了所有狗的共性（比如有尾巴、会叫），然后我们可以根据这个类创建出具体的狗对象，比如<code>golden_retriever</code>和<code>poodle</code>。</p><h2 id="类的定义与使用" tabindex="-1"><a class="header-anchor" href="#类的定义与使用"><span>类的定义与使用</span></a></h2><p>下面，让我们用一个简单的例子来看看如何定义一个类：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Dog</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> breed<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>breed <span class="token operator">=</span> breed

    <span class="token keyword">def</span> <span class="token function">bark</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">汪汪叫！&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，我们定义了一个<code>Dog</code>类，它有一个构造函数<code>__init__</code>，用来初始化一个狗的名字和品种。同时，我们定义了一个<code>bark</code>方法，用来让狗叫。</p><h2 id="对象的创建与使用" tabindex="-1"><a class="header-anchor" href="#对象的创建与使用"><span>对象的创建与使用</span></a></h2><p>现在，我们可以使用这个类来创建狗对象了：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>my_dog <span class="token operator">=</span> Dog<span class="token punctuation">(</span><span class="token string">&quot;旺财&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;金毛&quot;</span><span class="token punctuation">)</span>
my_dog<span class="token punctuation">.</span>bark<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这里，我们创建了一个名为<code>my_dog</code>的狗对象，它的名字是“旺财”，品种是“金毛”。然后，我们调用了<code>bark</code>方法，让它叫了一声。</p><h2 id="导出模块-让你的类被其他文件使用" tabindex="-1"><a class="header-anchor" href="#导出模块-让你的类被其他文件使用"><span>导出模块：让你的类被其他文件使用</span></a></h2><p>如果我们想在其他文件中使用我们定义的<code>Dog</code>类，可以将它导出为一个模块。</p><p>首先，我们将<code>Dog</code>类放在一个名为<code>dog.py</code>的文件中：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># dog.py</span>

<span class="token keyword">class</span> <span class="token class-name">Dog</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> breed<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>breed <span class="token operator">=</span> breed

    <span class="token keyword">def</span> <span class="token function">bark</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">汪汪叫！&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，在其他文件中，可以这样导入和使用它：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># main.py</span>

<span class="token keyword">from</span> dog <span class="token keyword">import</span> Dog

my_dog <span class="token operator">=</span> Dog<span class="token punctuation">(</span><span class="token string">&quot;旺财&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;金毛&quot;</span><span class="token punctuation">)</span>
my_dog<span class="token punctuation">.</span>bark<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="面向对象编程的强大组合能力" tabindex="-1"><a class="header-anchor" href="#面向对象编程的强大组合能力"><span>面向对象编程的强大组合能力</span></a></h2><p>面向对象编程的一个强大之处在于，我们可以组合不同的类来创建更复杂的程序。</p><p>举个例子，我们可以创建一个狗类和一个狗绳子类，然后通过狗的品种和狗绳子材质的组合，实现不同种类的狗配备不同材质的狗绳：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Dog</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> breed<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>breed <span class="token operator">=</span> breed

    <span class="token keyword">def</span> <span class="token function">bark</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">汪汪叫！&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">Leash</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>material <span class="token operator">=</span> material

    <span class="token keyword">def</span> <span class="token function">description</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;这条狗绳是用</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>material<span class="token punctuation">}</span></span><span class="token string">制成的。&quot;</span></span><span class="token punctuation">)</span>

my_dog <span class="token operator">=</span> Dog<span class="token punctuation">(</span><span class="token string">&quot;旺财&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;金毛&quot;</span><span class="token punctuation">)</span>
my_leash <span class="token operator">=</span> Leash<span class="token punctuation">(</span><span class="token string">&quot;尼龙&quot;</span><span class="token punctuation">)</span>

my_dog<span class="token punctuation">.</span>bark<span class="token punctuation">(</span><span class="token punctuation">)</span>
my_leash<span class="token punctuation">.</span>description<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>通过本文，我们学习了面向对象编程的基础概念，包括类、对象以及如何定义和使用它们。我们还学会了如何将类导出为模块，使其能够被其他文件使用。</p><p>面向对象编程为我们提供了强大的组合能力，通过不同类的组合，我们可以创建出更加复杂和灵活的程序。希望你通过本文理解了面向对象编程的基础，继续努力，你已经迈出了成为 Python 高手的一大步！</p>`,29),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","8. 面向对象编程基础.html.vue"]]),k=JSON.parse('{"path":"/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80.html","title":"8. 面向对象编程基础","lang":"zh-CN","frontmatter":{"description":"8. 面向对象编程基础 今天我们要谈论一个非常酷的编程概念—— 面向对象编程 。别担心，我会用最简单易懂的方式给你讲解。 面向对象编程是什么？ 首先，让我们聊聊什么是面向对象编程。在编程中，我们可以把程序看作是一群小工具的集合，而这些小工具可以相互配合，一起完成任务。 面向对象编程就是一种把现实世界的事物抽象成代码中的对象的方法。这样一来，我们可以更自...","head":[["meta",{"property":"og:url","content":"https://golangguide.top/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"8. 面向对象编程基础"}],["meta",{"property":"og:description","content":"8. 面向对象编程基础 今天我们要谈论一个非常酷的编程概念—— 面向对象编程 。别担心，我会用最简单易懂的方式给你讲解。 面向对象编程是什么？ 首先，让我们聊聊什么是面向对象编程。在编程中，我们可以把程序看作是一群小工具的集合，而这些小工具可以相互配合，一起完成任务。 面向对象编程就是一种把现实世界的事物抽象成代码中的对象的方法。这样一来，我们可以更自..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-05T08:45:30.000Z"}],["meta",{"property":"article:author","content":"小白debug"}],["meta",{"property":"article:modified_time","content":"2023-10-05T08:45:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8. 面向对象编程基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-05T08:45:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"小白debug\\",\\"url\\":\\"https://xiaobaidebug.top/\\"}]}"],["link",{"rel":"canonical","href":"https://golangguide.top/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:url","content":"https://golangguide.top/python/%E7%AC%AC1%E7%AB%A0%EF%BC%9APython%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"golang全栈指南"}],["meta",{"property":"og:title","content":"8. 面向对象编程基础"}],["meta",{"property":"og:description","content":"8. 面向对象编程基础 今天我们要谈论一个非常酷的编程概念—— 面向对象编程 。别担心，我会用最简单易懂的方式给你讲解。 面向对象编程是什么？ 首先，让我们聊聊什么是面向对象编程。在编程中，我们可以把程序看作是一群小工具的集合，而这些小工具可以相互配合，一起完成任务。 面向对象编程就是一种把现实世界的事物抽象成代码中的对象的方法。这样一来，我们可以更自..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-05T08:45:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-05T08:45:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8. 面向对象编程基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-05T08:45:30.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"面向对象编程是什么？","slug":"面向对象编程是什么","link":"#面向对象编程是什么","children":[]},{"level":2,"title":"类和对象：编程的超能力","slug":"类和对象-编程的超能力","link":"#类和对象-编程的超能力","children":[]},{"level":2,"title":"类的定义与使用","slug":"类的定义与使用","link":"#类的定义与使用","children":[]},{"level":2,"title":"对象的创建与使用","slug":"对象的创建与使用","link":"#对象的创建与使用","children":[]},{"level":2,"title":"导出模块：让你的类被其他文件使用","slug":"导出模块-让你的类被其他文件使用","link":"#导出模块-让你的类被其他文件使用","children":[]},{"level":2,"title":"面向对象编程的强大组合能力","slug":"面向对象编程的强大组合能力","link":"#面向对象编程的强大组合能力","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1696495530000,"updatedTime":1696495530000,"contributors":[{"name":"xiaobai","email":"xiaobaidebug@gmail.com","commits":1}]},"readingTime":{"minutes":3,"words":901},"filePathRelative":"python/第1章：Python 基础知识/8. 面向对象编程基础.md","localizedDate":"2023年10月5日","autoDesc":true}');export{d as comp,k as data};
